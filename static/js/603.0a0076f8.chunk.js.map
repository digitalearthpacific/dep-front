{"version":3,"file":"static/js/603.0a0076f8.chunk.js","mappings":"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","sources":["pages/Docs/components/DocsHtmlContent.tsx","pages/Docs/components/TopicNav.tsx","pages/Docs/components/Topic.tsx","components/ScrollToTop.js","pages/Docs/Docs.index.tsx","docs|sync|//.json$"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DOMPurify from \"dompurify\";\nimport { a11yPostProcessDom } from \"../../../utils\";\n\n// Given a Json object of HTML markup generated from sphinx-build, rewrite\n// internal links and capture their events to process them through the\n// React Router system.\ninterface DocsHtmlContentProps {\n  className: string;\n  markupJson: any;\n}\n\nconst DocsHtmlContent: React.FC<DocsHtmlContentProps> = ({\n  className,\n  markupJson,\n  children,\n}) => {\n  const navigate = useNavigate();\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  const { body, current_page_name } = markupJson;\n\n  // Sphinx generates internal links at a depth that doesn't align with the\n  // app routing structure. Rewrite link paths so they resolve within the app.\n  // Note: currently assumes only child directories at a depth of 1 from root (/docs)\n  const pathParts = current_page_name.split(\"/\");\n  const pwd = pathParts.length > 1 ? pathParts[0] : \"\";\n\n  // Links that point to directories that share a parent with the current doc (../../)\n  const anchorPeerRegex = /class=\"reference internal\" href=\"..\\/..\\//gi;\n  const anchorPeerReplace = 'class=\"reference internal\" href=\"/docs/';\n\n  // Links that point to a file in the current directory (../)\n  const anchorSiblingRegex = /class=\"reference internal\" href=\"..\\//gi;\n  const anchorSiblingReplace = `class=\"reference internal\" href=\"/docs/${pwd}/`;\n\n  // Links which treat a sub directory as root, and need to be a child of docs/\n  const anchorRootRegex = /class=\"reference internal\" href=\"/gi;\n  const anchorRootReplace = `class=\"reference internal\" href=\"/docs/`;\n\n  const imagePathRegex = /..\\/..\\/_images/gi;\n\n  // Load the markup fetched from the server. This was generated via nbconvert\n  // and needs some preprocessing before it can be rendered\n  const docsDoc = new DOMParser().parseFromString(body, \"text/html\");\n\n  // Move the Hub launcher buttons under the main header so it matches their\n  // placement in non-Sphinx generate documents\n  const launcherEl = docsDoc.querySelector(\".docs-launcher\");\n\n  if (launcherEl) {\n    docsDoc.querySelector(\"h1\")?.insertAdjacentElement(\"afterend\", launcherEl);\n  }\n\n  a11yPostProcessDom(docsDoc);\n\n  // Serialize the content back to a string so it can be injected\n  const processedMarkup = new XMLSerializer().serializeToString(docsDoc);\n\n  // Handle any internal links as an SPA style route, not a full reload.\n  // If the href includes 1-4 characters after a `.`, treat as file extension\n  // and allow a direct download.\n  const handleClick = (e: React.MouseEvent<HTMLDivElement> | undefined) => {\n    if (!e) return;\n    const target = e.target as HTMLDivElement;\n    const anchor = target.closest(\"a.reference.internal\") as HTMLAnchorElement;\n    if (anchor && !anchor.href.match(/\\.[a-z]{1,4}$/i)) {\n      const path = anchor.getAttribute(\"href\");\n      e.preventDefault();\n      path && navigate(path);\n    }\n  };\n\n  // Replace any sibling links (shares a parent dir) with /docs/\n  let bodyWithRoutedLinks = processedMarkup.replace(\n    anchorPeerRegex,\n    anchorPeerReplace\n  );\n\n  // If the current doc is not at root, replace peer links (in the same dir)\n  // with /docs/{pwd}/\n  if (pwd) {\n    bodyWithRoutedLinks = bodyWithRoutedLinks.replace(\n      anchorSiblingRegex,\n      anchorSiblingReplace\n    );\n  }\n\n  // If the current doc is at root, replace links so they start with /docs/\n  if (!pwd) {\n    bodyWithRoutedLinks = bodyWithRoutedLinks.replace(\n      anchorRootRegex,\n      anchorRootReplace\n    );\n  }\n\n  bodyWithRoutedLinks = bodyWithRoutedLinks.replace(\n    imagePathRegex,\n    `${process.env.PUBLIC_URL}/_images`\n  );\n\n  // Allow sanitization to safely set new tab targets. This could occur\n  // when Sphinx generated content has a target attribute set which is\n  // stripped out by the sanitizer.\n  DOMPurify.addHook(\"afterSanitizeAttributes\", node => {\n    if (node.getAttribute(\"rel\") === \"noopener noreferrer\") {\n      node.setAttribute(\"target\", \"_blank\");\n    }\n  });\n\n  const html = allowList.includes(current_page_name)\n    ? bodyWithRoutedLinks\n    : DOMPurify.sanitize(bodyWithRoutedLinks);\n\n  const content = processedMarkup ? (\n    <div className={className}>\n      {children}\n      <div\n        ref={contentRef}\n        onClick={handleClick}\n        dangerouslySetInnerHTML={{\n          __html: html,\n        }}\n      />\n    </div>\n  ) : null;\n\n  return content;\n};\n\nexport default DocsHtmlContent;\n\n// Skip dom sanitizations for pages that embed scripts\nconst allowList = [\"quickstarts/using-the-data-api\"];\n","import React from \"react\";\nimport ButtonLink from \"../../../components/controls/ButtonLink\";\nimport { FontIcon } from \"@fluentui/react\";\nimport { mergeStyles } from \"@fluentui/react/lib/Styling\";\n\nconst iconClass = mergeStyles({\n  fontSize: 12,\n  margin: 5,\n  paddingTop: 2,\n  fontWeight: \"600 !important\",\n});\n\nconst baseUrl = \"../../\";\n\nconst hasLink = (link: string) => {\n  return link && link !== baseUrl;\n};\n\ninterface TopicNavProps {\n  topic: any;\n  prev: { link: string; title: string };\n  next: { link: string; title: string };\n}\n\n// Render prev and next links for a doc topic\nconst TopicNav: React.FC<TopicNavProps> = ({ topic, prev, next }) => {\n  // The hrefs generated by sphinx don't account for our in-app routing, so infer\n  // the correct path and reformat the href to point to the correct resource. The link\n  // refers either to a page in the existing topic (../next-article/) or a page in a new\n  // topic (../../new-topic/next-article).\n  const reformatHref = (href: string) => {\n    if (!href) return \"\";\n\n    const pathNav = /\\.\\.\\//g;\n    const numDirs = href.match(pathNav)?.length;\n    if (numDirs === 2) {\n      // New topic, strip off the relative directory portion\n      return `/docs/${href.replace(pathNav, \"\")}`;\n    } else if (numDirs === 1) {\n      return `/docs/${topic}/${href.replace(pathNav, \"\")}`;\n    }\n    return href;\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"75%\",\n        marginBottom: 40,\n      }}\n    >\n      <div style={{ visibility: hasLink(prev?.link) ? \"visible\" : \"hidden\" }}>\n        <ButtonLink to={reformatHref(prev?.link)} title={`Previous: ${prev?.title}`}>\n          <FontIcon iconName=\"ChevronLeft\" className={iconClass} />\n          {prev?.title}\n        </ButtonLink>\n      </div>\n      <div style={{ visibility: hasLink(next?.link) ? \"visible\" : \"hidden\" }}>\n        <ButtonLink to={reformatHref(next?.link)} title={`Next: ${next?.title}`}>\n          {next?.title}\n          <FontIcon iconName=\"ChevronRight\" className={iconClass} />\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n\nexport default TopicNav;\n","import { Separator } from \"@fluentui/react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport GeneratedInternalToc from \"./GeneratedInternalToc\";\nimport TopicNav from \"./TopicNav\";\n\nimport DocsHtmlContent from \"./DocsHtmlContent\";\nimport { useEffect } from \"react\";\nimport { scrollToHash } from \"utils\";\n\ninterface TopicProps {\n  topics: { [key: string]: any };\n}\nconst Topic: React.FC<TopicProps> = ({ topics }) => {\n  const { topicId, fileId } = useParams();\n  const docsKey = `./${topicId}/${fileId}.json`;\n  const doc = topics[docsKey];\n\n  useEffect(() => {\n    scrollToHash(window.location.hash);\n  });\n\n  const bottomNav = <TopicNav topic={topicId} prev={doc.prev} next={doc.next} />;\n\n  if (doc?.body) {\n    const generatedToc = <GeneratedInternalToc html={doc.body} />;\n    return (\n      <>\n        <div style={bodyStyle}>\n          <DocsHtmlContent\n            className=\"generated-docs markdown-source\"\n            markupJson={doc}\n          />\n          {generatedToc}\n        </div>\n        <Separator styles={separatorStyles} />\n        {bottomNav}\n      </>\n    );\n  }\n  return <Navigate replace to={\"/404\"} />;\n};\n\nexport default Topic;\n\nconst separatorStyles = { root: { width: \"75%\" } };\nconst bodyStyle: React.CSSProperties = { display: \"flex\", flexDirection: \"row\" };\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname, hash } = useLocation();\n\n  useEffect(() => {\n    if (!hash) window.scrollTo(0, 0);\n  }, [pathname, hash]);\n\n  return null;\n}\n","import React, { Suspense } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport { Link, Panel, PanelType, Text } from \"@fluentui/react\";\nimport { useBoolean } from \"@fluentui/react-hooks\";\n\nimport Layout from \"../../components/Layout\";\nimport SEO from \"../../components/Seo\";\nimport DocsHtmlContent from \"./components/DocsHtmlContent\";\nimport Topic from \"./components/Topic\";\nimport { DATA_URL, SAS_URL, STAC_URL } from \"../../utils/constants\";\nimport ScrollToTop from \"../../components/ScrollToTop\";\n\nconst OpenApiSpec = React.lazy(() => import(\"./components/OpenApiSpec\"));\n\n// Import all the JSON files that were copied into src/docs\n// from the documentation build step.\n\n// TODO: Jest tests can't parse require.context, so this module cannot be tested\n// as a result. Resolve this by transforming the sphinx output into an actual\n// named import and remove the dynamic import.\n// @ts-ignore-next-line\nconst jsonFileContexts = require.context(\"../../docs/\", true, /\\.json$/);\nconst docTopics = Object.fromEntries(\n  jsonFileContexts.keys().map((key: string) => [key, jsonFileContexts(key)])\n);\n\nconst Docs = () => {\n  const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false);\n  const toc = docTopics[\"./index.json\"];\n  const tocComponent = (\n    <nav\n      className=\"docs-toc-nav\"\n      style={{\n        flexBasis: \"10rem\",\n        flexGrow: 1,\n      }}\n    >\n      <DocsHtmlContent className=\"toc-item\" markupJson={toc} />\n    </nav>\n  );\n\n  const breadcrumb = (\n    <>\n      <Text block className=\"overflow-docs-nav\" styles={breadCrumbStyles}>\n        Documentation &gt; <Link onClick={() => openPanel()}>Table of Contents</Link>\n      </Text>\n      <Panel\n        isLightDismiss\n        isOpen={isOpen}\n        onDismiss={dismissPanel}\n        type={PanelType.smallFixedNear}\n        onClick={dismissPanel}\n      >\n        <h3>Table of Contents</h3>\n        <DocsHtmlContent className=\"toc-item-panel\" markupJson={toc} />\n      </Panel>\n    </>\n  );\n\n  const documentationPane = (\n    <div className=\"grid-content\" style={docPageStyle}>\n      {tocComponent}\n      <div style={docContentStyle}>\n        {breadcrumb}\n        <ScrollToTop />\n        <Routes>\n          <Route\n            path={\"/reference/stac\"}\n            element={\n              <Suspense fallback={<div />}>\n                <OpenApiSpec specUrl={`${STAC_URL}/openapi.json`} />\n              </Suspense>\n            }\n          />\n          <Route\n            path={\"/reference/sas\"}\n            element={\n              <Suspense fallback={<div />}>\n                <OpenApiSpec specUrl={`${SAS_URL}/openapi.json`} />\n              </Suspense>\n            }\n          />\n          <Route\n            path={\"/reference/data\"}\n            element={\n              <Suspense fallback={<div />}>\n                <OpenApiSpec specUrl={`${DATA_URL}/openapi.json`} />\n              </Suspense>\n            }\n          />\n          <Route path={`/:topicId/:fileId`} element={<Topic topics={docTopics} />} />\n          <Route\n            path={\"/\"}\n            element={<Navigate replace to=\"/docs/overview/about\" />}\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n\n  return (\n    <Layout isShort>\n      <SEO\n        title=\"Documentation\"\n        description=\"User guides and reference material for using the Planetary Computer.\"\n      />\n      {documentationPane}\n    </Layout>\n  );\n};\n\nexport default Docs;\n\nconst breadCrumbStyles = { root: { paddingTop: 20, display: \"none\" } };\nconst docPageStyle: Partial<React.CSSProperties> = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n};\nconst docContentStyle = {\n  flexBasis: \"0\",\n  flexGrow: 999,\n  minWidth: \"calc(50% - 1rem)\",\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 47182;\nmodule.exports = webpackEmptyContext;"],"names":["className","markupJson","children","navigate","useNavigate","contentRef","useRef","body","current_page_name","pathParts","split","pwd","length","anchorSiblingReplace","docsDoc","DOMParser","parseFromString","launcherEl","querySelector","insertAdjacentElement","a11yPostProcessDom","processedMarkup","XMLSerializer","serializeToString","bodyWithRoutedLinks","replace","process","DOMPurify","node","getAttribute","setAttribute","html","allowList","includes","ref","onClick","e","anchor","target","closest","href","match","path","preventDefault","dangerouslySetInnerHTML","__html","iconClass","mergeStyles","fontSize","margin","paddingTop","fontWeight","hasLink","link","topic","prev","next","reformatHref","pathNav","numDirs","style","display","justifyContent","width","marginBottom","visibility","ButtonLink","to","title","FontIcon","iconName","topics","useParams","topicId","fileId","doc","useEffect","scrollToHash","window","location","hash","bottomNav","generatedToc","GeneratedInternalToc","bodyStyle","Separator","styles","separatorStyles","root","flexDirection","ScrollToTop","useLocation","pathname","scrollTo","OpenApiSpec","React","jsonFileContexts","require","docTopics","Object","fromEntries","keys","map","key","useBoolean","isOpen","openPanel","setTrue","dismissPanel","setFalse","toc","tocComponent","flexBasis","flexGrow","breadcrumb","Text","block","breadCrumbStyles","Link","Panel","isLightDismiss","onDismiss","type","PanelType","documentationPane","docPageStyle","docContentStyle","element","Suspense","fallback","specUrl","STAC_URL","SAS_URL","DATA_URL","Layout","isShort","description","flexWrap","minWidth","webpackEmptyContext","req","Error","code","resolve","id","module","exports"],"sourceRoot":""}