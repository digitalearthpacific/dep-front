{"version":3,"file":"static/js/394.04f2bdd2.chunk.js","mappings":"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","sources":["pages/Explore/components/Sidebar/exporters/BaseExporter/ImageViewer.tsx","pages/Explore/state/animationSlice.ts","pages/Explore/state/imageSlice.ts","pages/Explore/state/store.ts","pages/Explore/utils/layers.ts","pages/Explore/components/Map/helpers.ts","pages/Explore/components/Map/hooks/useMosaicLayer.ts","pages/Explore/components/Map/hooks/useCollectionLayer.ts","pages/Explore/components/Map/hooks/useItemBoundsLayer.ts","pages/Explore/components/Map/hooks/useMapControls.ts","pages/Explore/components/Map/hooks/useEventHandlers.ts","pages/Explore/components/Map/hooks/useZoomEvents.ts","pages/Explore/components/Map/hooks/useMapDrawTools.ts","pages/Explore/components/controls/MapMessages.tsx","pages/Explore/components/Map/components/PanelControl/index.tsx","pages/Explore/components/Map/components/PlaceSearch/types.ts","pages/Explore/components/Map/components/PlaceSearch/usePlaceSuggestions.tsx","pages/Explore/components/Map/components/PlaceSearch/index.tsx","pages/Explore/components/Map/components/MapSettingsControl/CollectionBoundaryToggle.tsx","pages/Explore/components/Map/components/MapSettingsControl/index.tsx","pages/Explore/components/Map/components/LegendControl/helpers.ts","pages/Explore/components/Map/components/LegendControl/legendTypes/ColorMap.tsx","pages/Explore/components/Map/components/LegendControl/legendTypes/ClassMap.tsx","pages/Explore/components/Map/components/LegendControl/LayerOptions.tsx","pages/Explore/components/Map/components/LegendControl/LayerOverflowOptions.tsx","pages/Explore/components/Map/components/LegendControl/LegendCmdBar.tsx","pages/Explore/components/Map/components/LegendControl/legendTypes/Interval.tsx","pages/Explore/components/Map/components/LegendControl/LegendBumperBar.tsx","pages/Explore/components/Map/components/LegendControl/Legend.tsx","pages/Explore/components/Map/components/LegendControl/LegendControl.tsx","pages/Explore/components/ExploreInHub/helpers.ts","pages/Explore/components/ExploreInHub/pythonSnippet.ts","pages/Explore/components/ExploreInHub/SnippetCopyPanel.tsx","pages/Explore/components/ExploreInHub/index.tsx","pages/Explore/components/MobileViewInMap/ViewInMap.index.tsx","pages/Explore/components/controls/ItemTime.tsx","pages/Explore/components/Map/components/ItemPreview/helpers.ts","pages/Explore/components/Map/components/ItemPreview/PreviewActionBar.tsx","pages/Explore/components/Map/components/ItemPreview/PreviewMessageCloseButton.tsx","pages/Explore/components/Map/components/ItemPreview/PreviewMessage.tsx","pages/Explore/components/Map/index.tsx","pages/Explore/components/Map/hooks/useLayerNotices.ts","pages/Explore/components/controls/ToggleSidebarButton.tsx","pages/Explore/components/Sidebar/exporters/BaseExporter/ImageResult.tsx","pages/Explore/components/Sidebar/exporters/BaseExporter/ImageResults.tsx","pages/Explore/components/Sidebar/exporters/BaseExporter/ImageExportError.tsx","pages/Explore/components/Sidebar/exporters/BaseExporter/ExporterHeader.tsx","pages/Explore/components/Sidebar/exporters/AnimationExporter/AnimationIntro.tsx","pages/Explore/components/Sidebar/exporters/AnimationExporter/AnimationSettings.tsx","pages/Explore/components/Sidebar/exporters/AnimationExporter/AnimationStartField.tsx","pages/Explore/components/Sidebar/exporters/AnimationExporter/helpers.tsx","pages/Explore/components/Sidebar/exporters/AnimationExporter/AnimationExporter.index.tsx","pages/Explore/components/Sidebar/exporters/AnimationExporter/index.tsx","pages/Explore/components/ItemPreview.tsx","pages/Explore/components/controls/IconValue.tsx","pages/Explore/components/controls/PriorityAttributes.tsx","pages/Explore/components/ItemDetailPanel/styles.ts","pages/Explore/components/ItemDetailPanel/ItemSnippetButton.tsx","pages/Explore/components/ItemDetailPanel/MapButton.tsx","pages/Explore/components/ItemDetailPanel/HeaderCard.tsx","pages/Explore/components/ItemDetailPanel/DetailListItem.tsx","pages/Explore/components/ItemDetailPanel/LinkListItems.tsx","pages/Explore/components/ItemDetailPanel/MetadataList.tsx","pages/Explore/components/ItemDetailPanel/AssetList.tsx","pages/Explore/components/ItemDetailPanel/BackToListButton.tsx","pages/Explore/components/ItemDetailPanel/index.tsx","pages/Explore/components/ItemPreviewButton.tsx","pages/Explore/components/ItemResult.tsx","pages/Explore/components/Sidebar/PinLayer/PinLayer.tsx","pages/Explore/components/query/constants.ts","pages/Explore/components/Sidebar/panes/QueryInfo/Section.tsx","pages/Explore/components/Sidebar/panes/QueryInfo/QuerySection.tsx","pages/Explore/components/Sidebar/panes/QueryInfo/index.tsx","pages/Explore/components/Sidebar/panes/SearchResults/SearchResultHeaderMenu.tsx","pages/Explore/components/Sidebar/panes/SearchResults/useSortMenuItem.tsx","pages/Explore/components/Sidebar/panes/SearchResults/SearchResultsHeader.tsx","pages/Explore/components/Sidebar/panes/SearchResults/SearchResultsPane.tsx","pages/Explore/utils/hooks/useCollectionQueryables.ts","pages/Explore/components/query/DateField/state.ts","pages/Explore/components/query/DateField/context.tsx","pages/Explore/components/query/DateField/CalendarNavControl.tsx","pages/Explore/components/query/DateField/Time.tsx","pages/Explore/components/query/DateField/CalendarControl.tsx","pages/Explore/components/query/DateField/helpers.tsx","pages/Explore/components/query/DateField/DateMessage.tsx","pages/Explore/components/query/DateField/useOperatorSelector.tsx","pages/Explore/components/query/DateField/DateField.tsx","pages/Explore/utils/cql/datetimeDefaultQueryable.ts","pages/Explore/components/query/AddFilter/helpers.ts","pages/Explore/components/query/AddFilter/AddFilter.tsx","pages/Explore/components/Sidebar/selectors/CustomQueryBuilder.tsx","pages/Explore/components/Sidebar/selectors/CatalogSelector/CatalogSelector.Group.tsx","pages/Explore/components/Sidebar/selectors/CatalogSelector/CatalogSelector.index.tsx","pages/Explore/components/Sidebar/selectors/StateSelector.tsx","pages/Explore/components/Sidebar/selectors/MosaicPresetSelector.tsx","pages/Explore/components/Sidebar/selectors/hooks/useCqlPropertyMatcher.tsx","pages/Explore/components/Sidebar/selectors/RenderOptionsSelector.tsx","pages/Explore/components/Sidebar/panes/SelectorPane.tsx","pages/Explore/components/Sidebar/TitleHeader/ResetSelectors.tsx","pages/Explore/components/Sidebar/TitleHeader/AdvancedModeButton.tsx","pages/Explore/components/Sidebar/TitleHeader/TitleHeader.tsx","pages/Explore/components/Sidebar/selectors/InitialStateLoader.tsx","pages/Explore/components/Sidebar/CollectionItemFilter/CollectionItemFilter.tsx","pages/Explore/components/Sidebar/exporters/ImageExporter/ImageIntro.tsx","pages/Explore/components/Sidebar/exporters/ImageExporter/ImageSettings.tsx","pages/Explore/components/Sidebar/exporters/ImageExporter/ImageExporter.index.tsx","pages/Explore/components/Sidebar/exporters/ImageExporter/index.tsx","pages/Explore/components/Sidebar/exporters/ImageExporter/helpers.tsx","pages/Explore/components/Sidebar/Sidebar.tsx","pages/Explore/index.tsx"],"sourcesContent":["import { useCallback } from \"react\";\nimport {\n  getTheme,\n  IButtonStyles,\n  IconButton,\n  IIconProps,\n  IImageStyles,\n  Image,\n  ImageFit,\n  Label,\n  Modal,\n  Separator,\n  Stack,\n} from \"@fluentui/react\";\n// import {\n//   FacebookShareButton,\n//   FacebookIcon,\n//   LinkedinShareButton,\n//   LinkedinIcon,\n//   TwitterShareButton,\n//   TwitterIcon,\n// } from \"next-share\";\n\nimport { ImageExportResponse } from \"./types\";\n\ninterface ImageViewerProps {\n  ImageResponse: ImageExportResponse;\n  collectionId: string;\n  onClose: () => void;\n}\n\nexport const ImageViewer: React.FC<ImageViewerProps> = ({\n  ImageResponse,\n  collectionId,\n  onClose,\n}) => {\n  const handleDownload = useCallback(() => {\n    window.open(ImageResponse.url);\n  }, [ImageResponse.url]);\n\n  const shareUrl = ImageResponse.url;\n\n  return (\n    <Modal isOpen={true} onDismiss={onClose}>\n      <Stack horizontal horizontalAlign=\"space-between\">\n        <h3 style={headerStyle}>Image viewer</h3>\n        <IconButton\n          styles={iconButtonStyles}\n          iconProps={cancelIcon}\n          ariaLabel=\"Close popup modal\"\n          onClick={onClose}\n        />\n      </Stack>\n      <Separator />\n      <div style={viewerBodyStyle}>\n        <Stack\n          horizontal\n          horizontalAlign=\"start\"\n          tokens={stackTokens}\n          verticalAlign=\"center\"\n        >\n          <Label>Share:</Label>\n        </Stack>\n\n        <Stack\n          horizontal\n          horizontalAlign=\"start\"\n          tokens={stackTokens}\n          verticalAlign=\"center\"\n        >\n          <div style={urlCopyStyle}>\n            <code>{shareUrl}</code>\n          </div>\n          <IconButton\n            title=\"Download image\"\n            iconProps={downloadIconProps}\n            onClick={handleDownload}\n          />\n          {/* <LinkedinShareButton url={shareUrl}>\n            <LinkedinIcon size={20} round />\n          </LinkedinShareButton>\n          <TwitterShareButton\n            url={shareUrl}\n            title={`Rendering of ${collectionId} from the Planetary Computer`}\n            hashtags={[collectionId, \"planetarycomputer\"]}\n          >\n            <TwitterIcon size={20} round />\n          </TwitterShareButton>\n          <FacebookShareButton\n            url={shareUrl}\n            quote={`Rendering of ${collectionId} from the Planetary Computer`}\n            hashtag={`#${collectionId} #planetarycomputer`}\n          >\n            <FacebookIcon size={20} round />\n          </FacebookShareButton> */}\n        </Stack>\n      </div>\n      <Image\n        src={ImageResponse.url}\n        styles={imageStyles}\n        alt={\"Timelapse Image\"}\n        imageFit={ImageFit.contain}\n      />\n    </Modal>\n  );\n};\n\nconst theme = getTheme();\n\nconst cancelIcon: IIconProps = { iconName: \"Cancel\" };\nconst downloadIconProps = { iconName: \"Download\" };\n\nconst stackTokens = { childrenGap: 5 };\nconst iconButtonStyles: Partial<IButtonStyles> = {\n  root: {\n    color: theme.palette.neutralPrimary,\n    marginTop: 12,\n    marginRight: 4,\n  },\n  rootHovered: {\n    color: theme.palette.neutralDark,\n  },\n};\n\nconst imageStyles: Partial<IImageStyles> = {\n  root: {\n    display: \"flex\",\n    margin: 10,\n    minHeight: \"50vh\",\n    backgroundColor: theme.palette.neutralLighter,\n  },\n  image: {\n    maxWidth: \"80vw\",\n    maxHeight: \"80vh\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    height: \"auto\",\n    width: \"auto\",\n  },\n};\n\nconst headerStyle: React.CSSProperties = {\n  marginLeft: 10,\n  marginBottom: 5,\n};\n\nconst urlCopyStyle = {\n  border: `1px solid ${theme.palette.neutralLight}`,\n  borderRadius: 4,\n  padding: 4,\n};\nconst viewerBodyStyle = {\n  margin: \"0 10px\",\n};\n\nexport default ImageViewer;\n","import { createSelector, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AnimationFrameSettings } from \"../components/Sidebar/exporters/AnimationExporter/types\";\nimport { ImageExportResponse } from \"../components/Sidebar/exporters/BaseExporter/types\";\nimport { CollectionImageExport } from \"./imageSlice\";\nimport { ExploreState } from \"./store\";\n\nexport interface AnimationState {\n  animations: Record<string, ImageExportResponse[]>;\n  settings: Record<string, AnimationFrameSettings>;\n}\n\nexport interface CollectionAnimationConfig {\n  collectionId: string;\n  animationSettings: AnimationFrameSettings;\n}\n\nconst initialState: AnimationState = {\n  animations: {},\n  settings: {},\n};\n\nexport const animationSlice = createSlice({\n  name: \"animations\",\n  initialState,\n  reducers: {\n    addAnimation: (state, action: PayloadAction<CollectionImageExport>) => {\n      const collectionAnimations =\n        state.animations[action.payload.collectionId] || [];\n      collectionAnimations.push(action.payload.image);\n      state.animations[action.payload.collectionId] = collectionAnimations;\n    },\n\n    removeAnimation: (state, action: PayloadAction<CollectionImageExport>) => {\n      const collectionAnimations =\n        state.animations[action.payload.collectionId] || [];\n\n      const index = collectionAnimations.findIndex(\n        a => a.url === action.payload.image.url\n      );\n      if (index > -1) {\n        collectionAnimations.splice(index, 1);\n      }\n      state.animations[action.payload.collectionId] = collectionAnimations;\n    },\n\n    updateAnimationSettings: (\n      state,\n      action: PayloadAction<CollectionAnimationConfig>\n    ) => {\n      state.settings[action.payload.collectionId] = action.payload.animationSettings;\n    },\n  },\n});\n\nexport const { addAnimation, removeAnimation, updateAnimationSettings } =\n  animationSlice.actions;\nexport default animationSlice.reducer;\n\n// Custom selector to get all pinned mosaic layers\nconst selectAnimationState = (state: ExploreState) => state.animation;\nconst selectCollectionAnimations = (\n  state: ExploreState,\n  collectionId: string | undefined\n) => collectionId;\n\nexport const selectAnimationsByCollection = createSelector(\n  [selectAnimationState, selectCollectionAnimations],\n  (animations, collectionId) => {\n    return (collectionId && animations.animations[collectionId]) || [];\n  }\n);\n\nexport const selectAnimationFrameSettings = createSelector(\n  [selectAnimationState, selectCollectionAnimations],\n  (animations, collectionId) => {\n    return animations.settings[collectionId || \"\"] || {};\n  }\n);\n","import { createSelector, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ImageExportResponse } from \"../components/Sidebar/exporters/BaseExporter/types\";\nimport { ImageSettings } from \"../components/Sidebar/exporters/ImageExporter/types\";\nimport { ExploreState } from \"./store\";\n\nexport interface ImageState {\n  images: Record<string, ImageExportResponse[]>;\n  settings: Record<string, ImageSettings>;\n}\n\nexport interface CollectionImageExport {\n  collectionId: string;\n  image: ImageExportResponse;\n}\n\nexport interface CollectionImageConfig {\n  collectionId: string;\n  imageSettings: ImageSettings;\n}\n\nconst initialState: ImageState = {\n  images: {},\n  settings: {},\n};\n\nexport const ImageSlice = createSlice({\n  name: \"Images\",\n  initialState,\n  reducers: {\n    addImage: (state, action: PayloadAction<CollectionImageExport>) => {\n      const collectionImages = state.images[action.payload.collectionId] || [];\n      collectionImages.push(action.payload.image);\n      state.images[action.payload.collectionId] = collectionImages;\n    },\n\n    removeImage: (state, action: PayloadAction<CollectionImageExport>) => {\n      const collectionImages = state.images[action.payload.collectionId] || [];\n\n      const index = collectionImages.findIndex(\n        a => a.url === action.payload.image.url\n      );\n      if (index > -1) {\n        collectionImages.splice(index, 1);\n      }\n      state.images[action.payload.collectionId] = collectionImages;\n    },\n\n    updateImageSettings: (state, action: PayloadAction<CollectionImageConfig>) => {\n      state.settings[action.payload.collectionId] = action.payload.imageSettings;\n    },\n  },\n});\n\nexport const { addImage, removeImage, updateImageSettings } = ImageSlice.actions;\nexport default ImageSlice.reducer;\n\n// Custom selector to get all pinned mosaic layers\nconst selectImageState = (state: ExploreState) => state.image;\nconst selectCollectionImages = (\n  state: ExploreState,\n  collectionId: string | undefined\n) => collectionId;\n\nexport const selectImagesByCollection = createSelector(\n  [selectImageState, selectCollectionImages],\n  (Images, collectionId) => {\n    return (collectionId && Images.images[collectionId]) || [];\n  }\n);\n\nexport const selectImageSettings = createSelector(\n  [selectImageState, selectCollectionImages],\n  (Images, collectionId) => {\n    return Images.settings[collectionId || \"\"] || {};\n  }\n);\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport mosaicReducer from \"./mosaicSlice\";\nimport mapReducer from \"./mapSlice\";\nimport detailReducer from \"./detailSlice\";\nimport animationSlice from \"./animationSlice\";\nimport imageSlice from \"./imageSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    mosaic: mosaicReducer,\n    map: mapReducer,\n    detail: detailReducer,\n    animation: animationSlice,\n    image: imageSlice,\n  },\n});\n\nexport type ExploreState = ReturnType<typeof store.getState>;\nexport type ExploreDispatch = typeof store.dispatch;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  ExploreState,\n  unknown,\n  Action<string>\n>;\n","import * as atlas from \"azure-maps-control\";\n\nexport const layerControl = new atlas.control.StyleControl({\n  mapStyles: [\n    \"road\",\n    \"road_shaded_relief\",\n    \"grayscale_light\",\n    \"night\",\n    \"grayscale_dark\",\n    \"satellite\",\n    \"satellite_road_labels\",\n  ],\n});\n\nexport const stacItemDatasource = new atlas.source.DataSource();\nexport const stacCollectionDatasource = new atlas.source.DataSource();\n\nexport const collectionLineLayerName = \"stac-collection-line\";\nexport const collectionLineLayer = new atlas.layer.LineLayer(\n  stacCollectionDatasource,\n  collectionLineLayerName,\n  {\n    strokeOpacity: 0.4,\n    strokeColor: \"#2b88d8\",\n    strokeWidth: 2,\n    strokeDashArray: [1, 1, 1],\n    filter: [\n      \"any\",\n      [\"==\", [\"geometry-type\"], \"Polygon\"],\n      [\"==\", [\"geometry-type\"], \"MultiPolygon\"],\n    ],\n  }\n);\n\nexport const collectionOutlineLayerName = \"stac-collection-outline\";\nexport const collectionOutlineLayer = new atlas.layer.LineLayer(\n  stacCollectionDatasource,\n  collectionOutlineLayerName,\n  {\n    strokeOpacity: 0.4,\n    strokeColor: \"#deecf9\",\n    strokeWidth: 4,\n    filter: [\n      \"any\",\n      [\"==\", [\"geometry-type\"], \"Polygon\"],\n      [\"==\", [\"geometry-type\"], \"MultiPolygon\"],\n    ],\n  }\n);\n\nexport const itemLineLayerName = \"stac-item-line\";\nexport const itemLineLayer = new atlas.layer.LineLayer(\n  stacItemDatasource,\n  itemLineLayerName,\n  {\n    strokeColor: \"rgb(0, 120, 212)\",\n    strokeWidth: 2,\n    filter: [\n      \"any\",\n      [\"==\", [\"geometry-type\"], \"Polygon\"],\n      [\"==\", [\"geometry-type\"], \"MultiPolygon\"],\n    ],\n  }\n);\n\nexport const itemOutlineLayerName = \"stac-item-outline\";\nexport const itemOutlineLayer = new atlas.layer.LineLayer(\n  stacItemDatasource,\n  itemOutlineLayerName,\n  {\n    strokeColor: \"#fff\",\n    strokeWidth: 4,\n    filter: [\n      \"any\",\n      [\"==\", [\"geometry-type\"], \"Polygon\"],\n      [\"==\", [\"geometry-type\"], \"MultiPolygon\"],\n    ],\n  }\n);\n\nexport const itemPolyLayer = new atlas.layer.PolygonLayer(\n  stacItemDatasource,\n  \"stac-item-fill\",\n  {\n    fillColor: \"rgba(255, 255, 255, 0.3)\",\n  }\n);\n\nexport const itemHoverLayer = new atlas.layer.PolygonLayer(\n  stacItemDatasource,\n  \"stac-hover-fill\",\n  {\n    // select nothing as a base case\n    filter: [\"==\", [\"get\", \"id\"], \"\"],\n    fillColor: \"rgba(150, 50, 255, 0.9)\",\n  }\n);\n\nexport const getHighlightItemFn = (map: atlas.Map) => {\n  return (e: atlas.MapMouseEvent) => {\n    map.getCanvasContainer().style.cursor = \"pointer\";\n\n    if (e?.shapes?.length) {\n      const shape = e.shapes[0] as atlas.Shape;\n      const stacId: string = shape.getId().toString();\n      itemHoverLayer.setOptions({\n        filter: [\"==\", [\"get\", \"stacId\"], stacId],\n      });\n    }\n  };\n};\n\nexport const getUnhighlightItemFn = (map: atlas.Map) => {\n  return () => {\n    map.getCanvasContainer().style.cursor = \"grab\";\n    itemHoverLayer.setOptions({ filter: [\"==\", [\"get\", \"stacId\"], \"\"] });\n  };\n};\n","import * as atlas from \"azure-maps-control\";\nimport { DATA_URL, REQUEST_ENTITY, X_REQUEST_ENTITY } from \"utils/constants\";\nimport { IStacItem } from \"types/stac\";\nimport { ILayerState } from \"pages/Explore/types\";\nimport { itemOutlineLayerName } from \"pages/Explore/utils/layers\";\nimport { getTileJsonAsset, makeRasterTileJsonUrl } from \"utils\";\n\nexport const mosaicLayerPrefix = \"pc-mosaic-\";\n\n// const addAuthHeaders = (\n//   url: string,\n//   resourceType: atlas.ResourceType\n// ): atlas.RequestParameters => {\n//   resourceType === \"Tile\" && console.log(url, resourceType, DATA_URL);\n//   if (resourceType === \"Tile\" && url?.startsWith(DATA_URL)) {\n//     return { headers: { Authorization: `Bearer ${sessionStatus.token}` } };\n//   }\n//   return {};\n// };\n\n// Add request entity header to all tiler requests\nexport const addEntityHeader = (\n  url: string,\n  resourceType: atlas.ResourceType\n): atlas.RequestParameters => {\n  if (resourceType === \"Tile\" && url?.startsWith(DATA_URL)) {\n    return {\n      headers: {\n        [X_REQUEST_ENTITY]: REQUEST_ENTITY,\n      },\n    };\n  }\n  return { headers: {}, url: url };\n};\n\nexport const makeLayerId = (id: string) => `${mosaicLayerPrefix}${id}`;\nexport const makeDatasourceId = (mapLayerId: string) => `${mapLayerId}-ds`;\nexport const makeLayerOutlineId = (mapLayerId: string) => `${mapLayerId}-outline`;\nexport const makeLayerHeatmapId = (mapLayerId: string) => `${mapLayerId}-heatmap`;\n\nexport const setupPolygonLayers = (\n  map: atlas.Map,\n  mapLayer: atlas.layer.Layer<atlas.layer.LayerEvents>,\n  mapLayerId: string,\n  mosaic: ILayerState\n) => {\n  const { collection, renderOption } = mosaic;\n  const polygonLayer = mapLayer as atlas.layer.PolygonLayer;\n  const isValid = renderOption !== null && collection !== null;\n  if (renderOption?.vectorOptions === null) {\n    throw new Error(\"Missing vectorOptions for layer render option\");\n  }\n\n  if (isValid) {\n    const polygonLayerOpts: atlas.PolygonLayerOptions = {\n      sourceLayer: renderOption.vectorOptions?.sourceLayer,\n      fillColor: renderOption.vectorOptions?.fillColor || \"#000\",\n      visible: mosaic.layer.visible,\n      fillOpacity: mosaic.layer.opacity / 100,\n    };\n\n    const polygonOutlineLayerOpts: atlas.LineLayerOptions = {\n      sourceLayer: renderOption.vectorOptions?.sourceLayer,\n      strokeColor: renderOption.vectorOptions?.strokeColor || \"black\",\n      strokeWidth: renderOption.vectorOptions?.strokeWidth || 1,\n      minZoom: 13,\n      filter: [\n        \"any\",\n        [\"==\", [\"geometry-type\"], \"Polygon\"],\n        [\"==\", [\"geometry-type\"], \"MultiPolygon\"],\n      ],\n      visible: mosaic.layer.visible,\n      strokeOpacity: mosaic.layer.opacity / 100,\n    };\n\n    // const heatmapLayerOpts: atlas.HeatMapLayerOptions = {\n    //   sourceLayer: renderOption.vectorOptions?.sourceLayer,\n    //   weight: [\"get\", \"point_count\"],\n    //   intensity: [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 2, 9, 1],\n    //   radius: [\"interpolate\", [\"linear\"], [\"zoom\"], 1, 8, 9, 2],\n    //   maxZoom: 9,\n    //   color: [\n    //     \"interpolate\",\n    //     [\"linear\"],\n    //     [\"heatmap-density\"],\n    //     0,\n    //     \"rgba(0,0, 255,0)\",\n    //     0.1,\n    //     \"royalblue\",\n    //     0.6,\n    //     \"cyan\",\n    //     0.8,\n    //     \"yellow\",\n    //     0.9,\n    //     \"orange\",\n    //     1,\n    //     \"#8040bf\",\n    //   ],\n    //   // opacity: mosaic.layer.opacity / 100,\n    //   opacity: [\"interpolate\", [\"exponential\", 1], [\"zoom\"], 0, 1, 7, 2, 9, 0],\n    //   visible: mosaic.layer.visible,\n    // };\n\n    if (polygonLayer) {\n      polygonLayer.setOptions(polygonLayerOpts);\n\n      const outline = map.layers.getLayerById(\n        makeLayerOutlineId(mapLayerId)\n      ) as atlas.layer.LineLayer;\n      if (outline) {\n        outline.setOptions(polygonOutlineLayerOpts);\n      }\n\n      // const heatmap = map.layers.getLayerById(\n      //   mapLayerId + \"-heatmap\"\n      // ) as atlas.layer.HeatMapLayer;\n      // if (heatmap) {\n      //   heatmap.setOptions(heatmapLayerOpts);\n      // }\n    } else {\n      const dsId = makeDatasourceId(mapLayerId);\n      const datasource = new atlas.source.VectorTileSource(dsId, {\n        url: getTileJsonAsset(collection, renderOption),\n      });\n\n      const layer = new atlas.layer.PolygonLayer(\n        datasource,\n        mapLayerId,\n        polygonLayerOpts\n      );\n\n      const outline = new atlas.layer.LineLayer(\n        datasource,\n        makeLayerOutlineId(mapLayerId),\n        polygonOutlineLayerOpts\n      );\n\n      // const heatmap = new atlas.layer.HeatMapLayer(\n      //   datasource,\n      //   makeLayerHeatmapId(mapLayerId),\n      //   heatmapLayerOpts\n      // );\n\n      map.sources.add(datasource);\n      map.layers.add(outline, itemOutlineLayerName);\n      map.layers.add(layer, outline);\n      // map.layers.add(heatmap, \"labels\");\n    }\n  }\n};\n\nexport const setupRasterTileLayer = (\n  map: atlas.Map,\n  mapLayerId: string,\n  mapLayer: atlas.layer.Layer<atlas.layer.LayerEvents>,\n  isItemLayerValid: boolean,\n  id: string,\n  currentEditingLayerId: string | null,\n  stacItemForMosaic: IStacItem | null,\n  mosaic: ILayerState\n) => {\n  const mosaicLayer = mapLayer as atlas.layer.TileLayer;\n  const { collection, renderOption, query } = mosaic;\n  const isMosaicLayerValid = Boolean(query.searchId);\n\n  // The detail item selected is only valid for the currently editing layer\n  const isItemForCurrentLayer = isItemLayerValid\n    ? id === currentEditingLayerId\n    : false;\n\n  // Check if the configuration valid to add a mosaic layer\n  if ((isMosaicLayerValid || isItemLayerValid) && renderOption) {\n    const tileLayerOpts: atlas.TileLayerOptions = {\n      tileUrl: makeRasterTileJsonUrl(\n        query,\n        renderOption,\n        collection,\n        isItemForCurrentLayer ? stacItemForMosaic : null\n      ),\n      visible: mosaic.layer.visible,\n      opacity: mosaic.layer.opacity / 100,\n    };\n\n    // Valid and already added to the map, just update the options\n    if (mosaicLayer) {\n      mosaicLayer.setOptions(tileLayerOpts);\n    } else {\n      // Valid but not yet added to the map, add it\n      const layer = new atlas.layer.TileLayer(tileLayerOpts, mapLayerId);\n      map.layers.add(layer, itemOutlineLayerName);\n    }\n  } else {\n    if (mosaicLayer) {\n      // Remove visibility of the mosaic layer, rather than remove it from the map. As a result,\n      // the opacity settings will be retained\n      mosaicLayer.setOptions({ visible: false });\n    }\n  }\n};\n\nexport const getRelatedLayers = (layerId: string, map: atlas.Map) => {\n  // Order here is important, higher array indexes have a higher z index on the map.\n  const relatedLayers = [\n    layerId,\n    makeLayerOutlineId(layerId),\n    makeLayerHeatmapId(layerId),\n  ];\n\n  return relatedLayers.map(layer => map.layers.getLayerById(layer)).filter(Boolean);\n};\n","import * as atlas from \"azure-maps-control\";\nimport { useEffect } from \"react\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { LayerType } from \"pages/Explore/enums\";\nimport {\n  getRelatedLayers,\n  makeDatasourceId,\n  makeLayerHeatmapId,\n  makeLayerId,\n  makeLayerOutlineId,\n  mosaicLayerPrefix,\n  setupPolygonLayers,\n  setupRasterTileLayer,\n} from \"../helpers\";\n\nconst useMosaicLayer = (\n  mapRef: React.MutableRefObject<atlas.Map | null>,\n  mapReady: boolean\n) => {\n  const { detail } = useExploreSelector(s => s);\n  const { layers, layerOrder, currentEditingLayerId } = useExploreSelector(\n    s => s.mosaic\n  );\n\n  // If we are showing the detail as a tile layer, craft the tileJSON request\n  // with the selected item (TODO: make custom redux selector, it's used elsewhere)\n  const stacItemForMosaic = detail.display.showSelectedItemAsLayer\n    ? detail.selectedItem\n    : null;\n  const isItemLayerValid = Boolean(stacItemForMosaic);\n\n  // Shuffle the map layer order when the layerOrder changes\n  useEffect(() => {\n    if (!mapRef.current || !mapReady) return;\n\n    const map = mapRef.current;\n\n    layerOrder\n      .map((id, idx, arr) => [\n        makeLayerId(id),\n        idx < arr.length - 1 ? makeLayerId(arr[idx + 1]) : null,\n      ])\n      .forEach(([higherLayerId, lowerLayerId]) => {\n        if (\n          higherLayerId &&\n          lowerLayerId &&\n          map.layers.getLayerById(higherLayerId) &&\n          map.layers.getLayerById(lowerLayerId)\n        ) {\n          const layersToMove = getRelatedLayers(lowerLayerId, map);\n          layersToMove.forEach(relatedLayerId => {\n            map.layers.move(relatedLayerId, higherLayerId);\n          });\n        }\n      });\n  }, [layerOrder, mapReady, mapRef]);\n\n  // Add a mosaic layer endpoint to the map\n  useEffect(() => {\n    if (!mapRef.current || !mapReady) return;\n\n    const map = mapRef.current;\n    layerOrder\n      .slice()\n      .reverse()\n      .forEach(id => {\n        const mosaic = layers[id];\n        const mapLayerId = makeLayerId(id);\n        const { renderOption } = mosaic;\n        const mapLayer = map.layers.getLayerById(mapLayerId);\n\n        if (!renderOption) return;\n\n        if (renderOption.type === LayerType.tile) {\n          setupRasterTileLayer(\n            map,\n            mapLayerId,\n            mapLayer,\n            isItemLayerValid,\n            id,\n            currentEditingLayerId,\n            stacItemForMosaic,\n            mosaic\n          );\n        } else if (renderOption.type === LayerType.polygon) {\n          setupPolygonLayers(map, mapLayer, mapLayerId, mosaic);\n        }\n      });\n\n    // Remove any mosaic layers from the map that may have been unpinned\n    map.layers\n      .getLayers()\n      .filter(l => l.getId().startsWith(mosaicLayerPrefix))\n      .forEach(layer => {\n        const layerId = layer.getId();\n        const id = layerId.substring(mosaicLayerPrefix.length);\n\n        if (\n          id in layers === false &&\n          !layerId.endsWith(\"-outline\") &&\n          !layerId.endsWith(\"-heatmap\")\n        ) {\n          // Remove the main layer\n          map.layers.remove(layer);\n\n          // Remove its outline layer if it exists\n          const outline = map.layers.getLayerById(makeLayerOutlineId(layerId));\n          outline && map.layers.remove(outline);\n\n          // Remove its heatmap layer if it exists\n          const heatmap = map.layers.getLayerById(makeLayerHeatmapId(layerId));\n          heatmap && map.layers.remove(heatmap);\n\n          // Remove the associated datasource if it exists\n          const dsId = makeDatasourceId(layerId);\n          const datasource = map.sources.getById(dsId);\n          if (datasource) {\n            map.sources.remove(datasource);\n          }\n        }\n      });\n  }, [\n    mapRef,\n    mapReady,\n    stacItemForMosaic,\n    isItemLayerValid,\n    layerOrder,\n    layers,\n    currentEditingLayerId,\n  ]);\n};\n\nexport default useMosaicLayer;\n","import * as atlas from \"azure-maps-control\";\n\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { useEffect } from \"react\";\nimport {\n  collectionLineLayer,\n  collectionOutlineLayer,\n  itemLineLayer,\n  stacCollectionDatasource,\n} from \"../../../utils/layers\";\nimport { MAX_ZOOM_FOR_COLLECTION_OUTLINE } from \"pages/Explore/utils/constants\";\nimport { spatialExtentToMultipolygon } from \"utils/collections\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\n\n// Show highlighted stac item result footprint on the map\n\nconst useCollectionBoundsLayer = (\n  mapRef: React.MutableRefObject<atlas.Map | null>,\n  mapReady: boolean\n) => {\n  const { collection } = useExploreSelector(selectCurrentMosaic);\n  const { showCollectionOutline, zoom } = useExploreSelector(s => s.map);\n\n  useEffect(() => {\n    const map = mapRef.current;\n\n    if (!mapReady || !map) return;\n\n    if (!map.sources.getSources().includes(stacCollectionDatasource)) {\n      map.sources.add(stacCollectionDatasource);\n      map.layers.add(collectionLineLayer, itemLineLayer);\n      map.layers.add(collectionOutlineLayer, collectionLineLayer);\n    }\n  }, [mapRef, mapReady]);\n\n  useEffect(() => {\n    const bbox = collection?.extent.spatial.bbox;\n\n    if (!bbox) {\n      stacCollectionDatasource.clear();\n    } else {\n      stacCollectionDatasource.clear();\n      const multiPoly = spatialExtentToMultipolygon(bbox);\n\n      if (multiPoly) {\n        stacCollectionDatasource.add(multiPoly);\n      }\n\n      // Sync the line layers with the visibility setting, or if the zoom level is low\n      const isCollectionBoundsVisible =\n        showCollectionOutline && zoom <= MAX_ZOOM_FOR_COLLECTION_OUTLINE;\n      collectionLineLayer.setOptions({ visible: isCollectionBoundsVisible });\n      collectionOutlineLayer.setOptions({ visible: isCollectionBoundsVisible });\n    }\n  }, [mapRef, collection, showCollectionOutline, zoom]);\n};\n\nexport default useCollectionBoundsLayer;\n","import * as atlas from \"azure-maps-control\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { useEffect } from \"react\";\nimport {\n  itemLineLayer,\n  itemOutlineLayer,\n  stacItemDatasource,\n} from \"../../../utils/layers\";\n\n// Show highlighted stac item result footprint on the map\n\nconst useItemBoundsLayer = (\n  mapRef: React.MutableRefObject<atlas.Map | null>,\n  mapReady: boolean\n) => {\n  const {\n    map: { boundaryShape },\n    detail,\n  } = useExploreSelector(s => s);\n\n  const boundaryPoly = boundaryShape ?? detail.selectedItem?.geometry;\n  const { display } = detail;\n\n  useEffect(() => {\n    const map = mapRef.current;\n\n    if (!mapReady || !map) return;\n\n    if (!map.sources.getSources().includes(stacItemDatasource)) {\n      map.sources.add(stacItemDatasource);\n      map.layers.add(itemLineLayer, \"labels\");\n      map.layers.add(itemOutlineLayer, itemLineLayer);\n    }\n  }, [mapRef, mapReady]);\n\n  // Zoom to the bounds of the selected item when it is added to the map\n  useEffect(() => {\n    if (!boundaryPoly) {\n      stacItemDatasource.clear();\n    } else {\n      const geom = boundaryPoly as atlas.data.MultiPolygon;\n      stacItemDatasource.clear();\n      stacItemDatasource.add(geom);\n\n      if (display.showSelectedItemAsLayer && display.zoomToItem) {\n        mapRef.current?.setCamera({\n          bounds: atlas.data.BoundingBox.fromData(geom),\n          padding: 100,\n          duration: 500,\n          type: \"ease\",\n        });\n      }\n    }\n  }, [mapRef, boundaryPoly, display.showSelectedItemAsLayer, display.zoomToItem]);\n};\n\nexport default useItemBoundsLayer;\n","import * as atlas from \"azure-maps-control\";\nimport { useEffect } from \"react\";\nimport { layerControl } from \"../../../utils/layers\";\n\n// Setup tile layers and map controls\nconst useMapControls = (\n  mapRef: React.MutableRefObject<atlas.Map | null>,\n  mapReady: boolean\n) => {\n  useEffect(() => {\n    const map = mapRef.current;\n\n    if (!mapReady || !map) return;\n\n    const controls: atlas.Control[] = [\n      new atlas.control.CompassControl(),\n      new atlas.control.ZoomControl(),\n      layerControl,\n    ];\n\n    if (map.controls.getControls().length < controls.length) {\n      map.controls.add(controls, {\n        position: atlas.ControlPosition.TopRight,\n      });\n    }\n  }, [mapReady, mapRef]);\n};\n\nexport default useMapControls;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useWindowSize } from \"react-use\";\nimport atlas from \"azure-maps-control\";\n\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { setCamera } from \"pages/Explore/state/mapSlice\";\nimport {\n  collectionLineLayer,\n  collectionLineLayerName,\n  collectionOutlineLayer,\n  itemLineLayerName,\n  itemOutlineLayerName,\n} from \"pages/Explore/utils/layers\";\nimport { makeLayerId } from \"../helpers\";\n\nconst useMapEvents = (mapRef: React.MutableRefObject<atlas.Map | null>) => {\n  const dispatch = useExploreDispatch();\n  const { height, width } = useWindowSize();\n  const [areTilesLoading, setTilesLoading] = useState<boolean>(false);\n  const layerOrder = useExploreSelector(s => s.mosaic.layerOrder);\n  const bottomLayer = makeLayerId(layerOrder[layerOrder.length - 1]);\n\n  useEffect(() => {\n    // Some actions that resize the map that occur from browser chrome (show\n    // bookmark bar, devtools, etc) are animated and don't have the new height\n    // set when this fires. Timeout for a bit to make sure the map is resized to\n    // the correct size.\n    setTimeout(() => {\n      mapRef.current?.resize();\n    }, 100);\n  }, [height, width, mapRef]);\n\n  // Update state when map moves end\n  const onMapMove = useCallback(\n    (e: atlas.MapEvent) => {\n      const camera = e.map.getCamera();\n      dispatch(setCamera(camera));\n    },\n    [dispatch]\n  );\n\n  // When the basemap style is changed, it changes the order of all loaded layers\n  // which need to be manually reset.\n  const onStyleDataLoaded = useCallback(\n    (e: atlas.MapDataEvent) => {\n      if (e.dataType === \"style\") {\n        const layerMgr = e.map.layers;\n\n        if (layerMgr.getLayers()[0].getId() !== \"base\") {\n          const hasOutlineLayer = layerMgr.getLayerById(itemLineLayerName);\n          if (hasOutlineLayer) {\n            layerMgr.move(itemLineLayerName, \"labels\");\n            layerMgr.move(itemOutlineLayerName, itemLineLayerName);\n          }\n          const hasCollectionLayer = layerMgr.getLayerById(collectionLineLayerName);\n          if (hasCollectionLayer) {\n            layerMgr.move(collectionLineLayer, \"labels\");\n            layerMgr.move(collectionOutlineLayer, collectionLineLayer);\n          }\n\n          const mosaicLayer = layerMgr.getLayerById(bottomLayer);\n          if (hasOutlineLayer && mosaicLayer) {\n            layerMgr.move(mosaicLayer, itemLineLayerName);\n          }\n\n          // To prevent runaway re-renders, move the base layer under the first\n          // layer if it isn't already. This likely means a custom layer hasn't been\n          // handled above.\n          const firstLayerId = layerMgr.getLayers()[0].getId();\n          if (firstLayerId !== \"base\") {\n            layerMgr.move(\"base\", firstLayerId);\n          }\n        }\n      }\n    },\n    [bottomLayer]\n  );\n\n  // Loading indicator for mosaic tiles\n  const onDataEvent = useCallback((e: atlas.MapDataEvent) => {\n    const { map, isSourceLoaded, source, tile } = e;\n    if (map.areTilesLoaded() && isSourceLoaded && source === undefined && tile) {\n      setTilesLoading(false);\n    } else if (!map.areTilesLoaded() && source === undefined && tile) {\n      setTilesLoading(true);\n    }\n  }, []);\n\n  return { onMapMove, onStyleDataLoaded, onDataEvent, areTilesLoading };\n};\n\nexport default useMapEvents;\n","import * as atlas from \"azure-maps-control\";\n\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport {\n  selectCurrentMosaic,\n  setLayerMinZoom,\n} from \"pages/Explore/state/mosaicSlice\";\nimport { DEFAULT_MIN_ZOOM } from \"pages/Explore/utils/constants\";\nimport { useEffect } from \"react\";\nimport { useTileJson } from \"utils/requests\";\n\nexport const ZOOM_DURATION = 750;\nconst SIDEBAR_DURATION = 350;\n\nconst useZoomEvents = (mapRef: React.MutableRefObject<atlas.Map | null>) => {\n  const dispatch = useExploreDispatch();\n  const {\n    detail,\n    map: { center, zoom, bounds, showSidebar },\n  } = useExploreSelector(s => s);\n  const mosaic = useExploreSelector(selectCurrentMosaic);\n\n  // If we are showing the detail as a tile layer, craft the tileJSON request\n  // with the selected item\n  const stacItemForMosaic = detail.display.showSelectedItemAsLayer\n    ? detail.selectedItem\n    : null;\n\n  const { data: mosaicLayerTileJson } = useTileJson(\n    mosaic.query,\n    mosaic.renderOption,\n    mosaic.collection,\n    stacItemForMosaic\n  );\n\n  const map = mapRef.current;\n  const layerMinZoom =\n    mosaic.renderOption?.minZoom || mosaicLayerTileJson?.minzoom || DEFAULT_MIN_ZOOM;\n\n  // Set the minzoom state for the current mosaic layer. This informs the zoom messages displayed.\n  useEffect(() => {\n    if (layerMinZoom) {\n      dispatch(setLayerMinZoom(layerMinZoom));\n    }\n  }, [dispatch, layerMinZoom]);\n\n  // Zoom the map to the new level\n  useEffect(() => {\n    if (!map) return;\n\n    if (zoom !== map.getCamera().zoom) {\n      map.setCamera({\n        zoom: zoom,\n        center: center,\n        type: \"ease\",\n        duration: ZOOM_DURATION,\n      });\n    }\n  }, [zoom, center, map]);\n\n  // Fit the map to the provided bounds\n  useEffect(() => {\n    if (!map) return;\n    try {\n      if (bounds && bounds[0] !== map.getCamera().bounds?.[0]) {\n        map.setCamera({\n          bounds,\n          padding: 20,\n          type: \"jump\",\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [bounds, map]);\n\n  // Resize the map after the sidebar has been hidden or restored\n  useEffect(() => {\n    if (!map) return;\n\n    setTimeout(() => {\n      map.resize();\n    }, SIDEBAR_DURATION);\n  }, [map, showSidebar]);\n};\n\nexport default useZoomEvents;\n","import { useRef } from \"react\";\nimport * as atlas from \"azure-maps-control\";\nimport { drawing } from \"azure-maps-drawing-tools\";\n\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { setBboxDrawMode, setDrawnShape } from \"pages/Explore/state/mapSlice\";\nimport { IDrawnShape } from \"pages/Explore/types\";\nimport { getTheme } from \"@fluentui/react\";\n\nconst theme = getTheme();\n\nexport const useMapDrawTools = (\n  mapRef: React.MutableRefObject<atlas.Map | null>,\n  mapReady: boolean\n) => {\n  const dispatch = useExploreDispatch();\n  const drawMgrRef = useRef<drawing.DrawingManager | null>(null);\n  const { isDrawBboxMode, drawnShape } = useExploreSelector(s => s.map);\n\n  // Initialize the drawing manager when the map is ready\n  if (!drawMgrRef.current && mapRef.current && mapReady) {\n    const mgr = new drawing.DrawingManager(mapRef.current, {\n      shapeDraggingEnabled: true,\n      mode: drawing.DrawingMode.idle,\n    });\n\n    // Styles for drawn bboxes\n    const drawnLayers = mgr.getLayers();\n    drawnLayers.polygonOutlineLayer?.setOptions({\n      strokeColor: theme.palette.themePrimary,\n      strokeDashArray: [2, 2],\n      strokeWidth: 4,\n    });\n\n    drawMgrRef.current = mgr;\n  }\n\n  if (!drawMgrRef.current || !mapRef.current) return;\n\n  const { mode } = drawMgrRef.current.getOptions();\n\n  if (!drawnShape && drawMgrRef.current.getSource().getShapes().length > 0) {\n    drawMgrRef.current.getSource().clear();\n  }\n\n  const handleShapeAdded = (shape: atlas.Shape): void => {\n    const geometry = shape.toJson().geometry;\n    // getBounds does not reliable generate a valid bounding box\n    // for drawn polygons, so ensure the order is xmin, ymin, xmax, ymax\n    const [x1, y1, x2, y2] = shape.getBounds();\n    const bbox = [\n      Math.min(x1, x2),\n      Math.min(y1, y2),\n      Math.max(x1, x2),\n      Math.max(y1, y2),\n    ];\n\n    const drawnShape: IDrawnShape = {\n      geometry,\n      bbox,\n    };\n\n    dispatch(setDrawnShape(drawnShape));\n    dispatch(setBboxDrawMode(false));\n\n    if (drawMgrRef.current) {\n      mapRef.current?.events.remove(\n        \"drawingcomplete\",\n        drawMgrRef.current,\n        handleShapeAdded\n      );\n    }\n  };\n\n  // Enable drawing mode\n  if (isDrawBboxMode && mode !== drawing.DrawingMode.drawRectangle) {\n    drawMgrRef.current.getSource().clear();\n    drawMgrRef.current?.setOptions({\n      mode: drawing.DrawingMode.drawRectangle,\n    });\n\n    mapRef.current.events.add(\n      \"drawingcomplete\",\n      drawMgrRef.current,\n      handleShapeAdded\n    );\n  }\n\n  // Disable drawing mode\n  if (!isDrawBboxMode && mode !== drawing.DrawingMode.idle) {\n    drawMgrRef.current?.setOptions({\n      mode: drawing.DrawingMode.idle,\n    });\n  }\n};\n","import { CSSProperties } from \"react\";\nimport { getTheme, Link, Stack, Text } from \"@fluentui/react\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport { ILayerZoomVisibility } from \"pages/Explore/types\";\n\ninterface MessageProps {\n  onClick: () => void;\n  layerVisibility: ILayerZoomVisibility;\n}\n\nexport const MapMessage: React.FC = ({ children }) => {\n  return (\n    <div className=\"explorer-map-component\" style={mapMessageStyle}>\n      {children}\n    </div>\n  );\n};\n\nconst theme = getTheme();\n\nconst mapMessageStyle: CSSProperties = {\n  position: \"absolute\",\n  top: 10,\n  left: \"50%\",\n  transform: \"translate(-50%, 0)\",\n  zIndex: 1,\n  padding: \"7px 10px\",\n  borderRadius: 5,\n  border: \"1px solid\",\n  borderColor: theme.semanticColors.primaryButtonBorder,\n  backgroundColor: theme.semanticColors.bodyBackground,\n  boxShadow: theme.effects.elevation16,\n};\n\nexport const ZoomMessage: React.FC<MessageProps> = ({\n  onClick,\n  layerVisibility,\n}) => {\n  const isCurrentLayerInvisible = Boolean(layerVisibility.current);\n\n  return isCurrentLayerInvisible ? (\n    <MapMessage>\n      <Text block style={{ textAlign: \"center\" }}>\n        <Link onClick={onClick}>Zoom in</Link> to see search results\n      </Text>\n    </MapMessage>\n  ) : null;\n};\n\nexport const ExtentMessage = ({ onClick }: MessageProps) => {\n  const { collection } = useExploreSelector(selectCurrentMosaic);\n\n  return (\n    <MapMessage>\n      <Stack horizontalAlign={\"center\"} styles={{ root: { textAlign: \"center\" } }}>\n        <Text block>This area doesn't include data from</Text>\n        <Text block styles={{ root: { fontStyle: \"italic\" } }}>\n          {collection?.title}\n        </Text>\n        <Text block styles={{ root: { paddingTop: 5 } }}>\n          <Link onClick={onClick}>Zoom to</Link> the valid extent.\n        </Text>\n      </Stack>\n    </MapMessage>\n  );\n};\n","import React, { useImperativeHandle } from \"react\";\nimport {\n  getTheme,\n  Callout,\n  DirectionalHint,\n  IconButton,\n  Stack,\n  IButtonStyles,\n} from \"@fluentui/react\";\nimport { useBoolean, useId } from \"@fluentui/react-hooks\";\n\ninterface PanelControlProps {\n  label: string;\n  iconName: string;\n  top?: number;\n  bottom?: number;\n  left?: number;\n  right?: number;\n}\n\n// TODO: move export to common folder\nexport interface PanelControlHandlers {\n  togglePanel: () => void;\n}\n\nconst PanelControl = React.forwardRef<\n  PanelControlHandlers,\n  React.PropsWithChildren<PanelControlProps>\n>(\n  (\n    {\n      label,\n      iconName,\n      children,\n      top = undefined,\n      bottom = undefined,\n      left = undefined,\n      right = 2,\n    },\n    ref\n  ) => {\n    const [isCalloutVisible, { toggle: toggleIsCalloutVisible }] = useBoolean(false);\n    const buttonId = useId(\"callout-button\");\n    const r = left ? undefined : right;\n    const buttonStyle = { top, bottom, left, right: r, ...controlStyle };\n\n    // Expose the toggle handle\n    useImperativeHandle(ref, () => ({\n      togglePanel: () => {\n        toggleIsCalloutVisible();\n      },\n    }));\n\n    const panelDir = left\n      ? DirectionalHint.rightTopEdge\n      : DirectionalHint.leftTopEdge;\n    return (\n      <Stack style={buttonStyle} className=\"explorer-map-component\">\n        <IconButton\n          id={buttonId}\n          ariaLabel={label}\n          title={label}\n          styles={iconStyles}\n          className=\"azure-maps-control-button\"\n          iconProps={{ iconName: iconName }}\n          onClick={toggleIsCalloutVisible}\n        />\n        {isCalloutVisible && (\n          <Callout\n            styles={calloutStyle}\n            directionalHint={panelDir}\n            onDismiss={toggleIsCalloutVisible}\n            target={`#${buttonId}`}\n            isBeakVisible={false}\n            setInitialFocus\n          >\n            {children}\n          </Callout>\n        )}\n      </Stack>\n    );\n  }\n);\n\nexport default PanelControl;\n\nconst theme = getTheme();\nexport const controlStyle: React.CSSProperties = {\n  zIndex: 1,\n  position: \"absolute\",\n  display: \"flex\",\n  margin: 8,\n  background: theme.semanticColors.bodyBackground,\n  borderCollapse: \"collapse\",\n  borderRadius: theme.effects.roundedCorner2,\n  boxShadow: \"rgb(0 0 0 / 16%) 0 0 4px\",\n};\n\nconst calloutStyle = {\n  calloutMain: {\n    width: 320,\n    padding: \"6px 6px\",\n  },\n};\n\nconst iconStyles: Partial<IButtonStyles> = {\n  icon: {\n    color: theme.semanticColors.bodyText,\n    width: 20,\n    height: 20,\n    lineHeight: 20,\n    fontSize: 20,\n    selectors: {\n      svg: {\n        fill: theme.semanticColors.bodyText,\n      },\n    },\n  },\n};\n","import * as atlas from \"azure-maps-control\";\nimport { BasePickerListBelow, IBasePickerProps } from \"@fluentui/react\";\n\nexport interface PlaceSearchProps {\n  mapRef: React.MutableRefObject<atlas.Map | null>;\n}\n\nexport interface IAddressPickerProps extends IBasePickerProps<FuzzySearchResult> {}\n\nexport class AddressPicker extends BasePickerListBelow<\n  FuzzySearchResult,\n  IAddressPickerProps\n> {}\n\nexport interface FuzzySearchResult {\n  address: {\n    countryCode: string;\n    countryCodeISO3: string;\n    freeformAddress: string;\n  };\n  viewport: {\n    btmRightPoint: { lat: number; lon: number };\n    topLeftPoint: { lat: number; lon: number };\n  };\n  type: \"Geography\" | \"Street\" | \"POI\";\n  poi?: { name: string };\n}\n","import { MutableRefObject, useCallback } from \"react\";\nimport * as atlas from \"azure-maps-control\";\nimport axios, { AxiosRequestHeaders } from \"axios\";\nimport { isEmpty } from \"lodash-es\";\nimport { IPickerItemProps, Text, useTheme, FontSizes } from \"@fluentui/react\";\nimport { IUseBooleanCallbacks } from \"@fluentui/react-hooks\";\n\nimport { useExploreDispatch } from \"pages/Explore/state/hooks\";\nimport { setCamera } from \"../../../../state/mapSlice\";\nimport { FuzzySearchResult } from \"./types\";\n\nconst azMapsDomain = atlas.getDomain();\nconst searchType = \"fuzzy\";\n\nconst usePlaceSuggestions = (\n  toggleIsCalloutVisible: IUseBooleanCallbacks[\"toggle\"],\n  mapRef: MutableRefObject<atlas.Map | null>\n) => {\n  const theme = useTheme();\n  const dispatch = useExploreDispatch();\n\n  const handleItemSelected = useCallback(\n    (selectedItem: FuzzySearchResult | undefined) => {\n      if (!selectedItem) return null;\n\n      const bounds = atlas.data.BoundingBox.fromLatLngs([\n        selectedItem.viewport.btmRightPoint as object,\n        selectedItem.viewport.topLeftPoint as object,\n      ]);\n\n      dispatch(setCamera({ bounds, padding: 20 }));\n      toggleIsCalloutVisible();\n\n      // We're not using the result to display anything, so null clears it. The action\n      // is taken through the dispatch above.\n      return null;\n    },\n    [dispatch, toggleIsCalloutVisible]\n  );\n\n  const resolveSuggestions = async (query: string) => {\n    if (!mapRef.current || isEmpty(query) || query.length <= 2) return [];\n\n    const geocodeServiceUrlTemplate = `https://${azMapsDomain}/search/${searchType}/json?typeahead=true&api-version=1&query=${query}`;\n    const params = mapRef.current.authentication.signRequest({\n      url: geocodeServiceUrlTemplate,\n    });\n\n    if (!params.url) return [];\n\n    try {\n      const suggests = await axios.get(params.url, {\n        headers: params.headers as AxiosRequestHeaders,\n      });\n      return suggests.data.results;\n    } catch {\n      return [];\n    }\n  };\n\n  const formatAddress = (address: FuzzySearchResult[\"address\"]) =>\n    `${address.freeformAddress}, ${address.countryCodeISO3} `;\n\n  const renderSuggestion = (result: FuzzySearchResult) => {\n    const outerStyle = { padding: 6 };\n    let text = null;\n    switch (result.type) {\n      case \"Geography\":\n      case \"Street\":\n      default:\n        text = <Text style={outerStyle}>{formatAddress(result.address)}</Text>;\n        break;\n\n      case \"POI\":\n        text = (\n          <>\n            <Text style={outerStyle}>{result.poi?.name}</Text>{\" \"}\n            <Text\n              styles={{\n                root: {\n                  color: theme.palette.neutralSecondary,\n                  fontSize: FontSizes.smallPlus,\n                },\n              }}\n            >\n              {formatAddress(result.address)}\n            </Text>\n          </>\n        );\n        break;\n    }\n\n    return text;\n  };\n\n  const renderItem = ({ item }: IPickerItemProps<FuzzySearchResult>) => {\n    return <span>{item.address.freeformAddress}</span>;\n  };\n\n  return {\n    renderItem,\n    renderSuggestion,\n    handleItemSelected,\n    resolveSuggestions,\n  };\n};\n\nexport default usePlaceSuggestions;\n","import { useCallback, useRef } from \"react\";\nimport { Text, FontWeights, Separator } from \"@fluentui/react\";\nimport PanelControl, { PanelControlHandlers } from \"../PanelControl\";\n\nimport { AddressPicker, PlaceSearchProps } from \"./types\";\nimport usePlaceSuggestions from \"./usePlaceSuggestions\";\n\nconst PlaceSearchControl = ({ mapRef }: PlaceSearchProps) => {\n  //Handle closing the panel when the search is complete\n  const panelRef = useRef<PanelControlHandlers>(null);\n  const togglePanel = useCallback(() => {\n    panelRef.current?.togglePanel();\n  }, []);\n\n  const handlers = usePlaceSuggestions(togglePanel, mapRef);\n\n  return (\n    <PanelControl\n      ref={panelRef}\n      label=\"Search for places on the map\"\n      top={142}\n      iconName=\"FluentSearch\"\n    >\n      <Text block styles={{ root: { fontWeight: FontWeights.bold } }}>\n        Place Finder\n      </Text>\n      <Text block>Find and navigate to an address, place, or region</Text>\n      <Separator />\n      <AddressPicker\n        inputProps={{ placeholder: \"Search for place or address\" }}\n        resolveDelay={300}\n        pickerSuggestionsProps={{\n          suggestionsHeaderText: \"Suggested locations\",\n          noResultsFoundText: \"Sorry, nothing matched your search \",\n          searchingText: \"Searching...\",\n        }}\n        onResolveSuggestions={handlers.resolveSuggestions}\n        onRenderSuggestionsItem={handlers.renderSuggestion}\n        onRenderItem={handlers.renderItem}\n        onItemSelected={handlers.handleItemSelected}\n      />\n    </PanelControl>\n  );\n};\n\nexport default PlaceSearchControl;\n","import { Checkbox, FontSizes, StackItem, Text } from \"@fluentui/react\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { setShowCollectionOutline } from \"pages/Explore/state/mapSlice\";\nimport { MAX_ZOOM_FOR_COLLECTION_OUTLINE } from \"pages/Explore/utils/constants\";\n\nconst CollectionBoundaryToggle = () => {\n  const dispatch = useExploreDispatch();\n  const { showCollectionOutline, zoom } = useExploreSelector(s => s.map);\n  const isCollectionOutlineDisabled = zoom > MAX_ZOOM_FOR_COLLECTION_OUTLINE;\n\n  return (\n    <StackItem>\n      <Checkbox\n        label=\"Show current dataset extent\"\n        disabled={isCollectionOutlineDisabled}\n        checked={showCollectionOutline}\n        onChange={(_, checked) =>\n          dispatch(setShowCollectionOutline(checked || false))\n        }\n      />\n      {isCollectionOutlineDisabled && (\n        <Text styles={{ root: { fontSize: FontSizes.small } }}>\n          * Option not available at current zoom level\n        </Text>\n      )}\n    </StackItem>\n  );\n};\n\nexport default CollectionBoundaryToggle;\n","import { useEffect, useState } from \"react\";\nimport { Checkbox, Stack } from \"@fluentui/react\";\nimport * as atlas from \"azure-maps-control\";\nimport PanelControl from \"../PanelControl\";\nimport { DEFAULT_MAP_STYLE } from \"pages/Explore/utils/constants\";\nimport CollectionBoundaryToggle from \"./CollectionBoundaryToggle\";\ninterface MapsOptionsControlProps {\n  mapRef: React.MutableRefObject<atlas.Map | null>;\n}\n\nconst MapSettingsControl = ({ mapRef }: MapsOptionsControlProps) => {\n  const [currentMapStyle, setCurrentMapStyle] = useState<string>(DEFAULT_MAP_STYLE);\n  const [showLabels, setShowLabels] = useState<boolean>(true);\n\n  // Set label visibility when toggled or a new basemap style is selected\n  useEffect(() => {\n    const vis = showLabels ? \"visible\" : \"none\";\n\n    if (mapRef?.current) {\n      // @ts-ignore - layers is not in the type definition\n      var layers = mapRef.current.map.getStyle().layers;\n\n      // This will remove layer labels from the basemap, which tend to\n      // repeat in a overwhelming way at low zoom levels\n      layers.forEach((layer: any) => {\n        if (\n          layer.type === \"symbol\" &&\n          layer.source === \"vectorTiles\" &&\n          layer.layout &&\n          layer.layout[\"text-field\"] &&\n          layer.layout[\"text-field\"] !== \"\"\n        ) {\n          // @ts-ignore - \"visibility\" isn't in the type definition\n          mapRef.current.map.setLayoutProperty(layer.id, \"visibility\", vis);\n        }\n      });\n    }\n  }, [showLabels, currentMapStyle, mapRef]);\n\n  useEffect(() => {\n    mapRef.current?.events.add(\"styledata\", e => {\n      if (e.dataType === \"style\") {\n        setCurrentMapStyle(e.map.getStyle().style || \"\");\n      }\n    });\n  }, [mapRef]);\n\n  const title = \"Manage map settings\";\n\n  return (\n    <PanelControl label={title} iconName=\"FluentSettingsFilled\" top={178}>\n      <Stack tokens={{ childrenGap: 10 }} styles={{ root: { padding: 4 } }}>\n        <Checkbox\n          label=\"Show map labels\"\n          checked={showLabels}\n          onChange={(_, checked) => setShowLabels(checked || false)}\n        />\n        <CollectionBoundaryToggle />\n      </Stack>\n    </PanelControl>\n  );\n};\n\nexport default MapSettingsControl;\n","import { ILegendConfig } from \"pages/Explore/types\";\nimport { QueryFunctionContext, useQuery } from \"react-query\";\nimport { QsParamType } from \"types\";\nimport * as qs from \"query-string\";\nimport {\n  ClassificationExtClasses,\n  FileExtValues,\n  IStacCollection,\n} from \"types/stac\";\nimport { DATA_URL } from \"utils/constants\";\nimport { pcApiClient } from \"utils/requests\";\n\nexport const rootColormapUrl = `${DATA_URL}/legend/colormap`;\nexport const rootClassmapUrl = `${DATA_URL}/legend/classmap`;\nexport const rootIntervalUrl = `${DATA_URL}/legend/interval`;\n\n// [[[min, max], [r,g,b,a]],...]\nexport type IntervalMap = [[number, number], [number, number, number, number]][];\nexport type ClassMap = Record<string, number[]>;\n\nexport const hasClassmapValues = (\n  collection: IStacCollection | null,\n  assets: QsParamType\n) => {\n  // If the rendering options don't include an asset, it's not a categorical\n  if (!assets) return false;\n\n  // Unclear how we would handle multiple categorical assets at once\n  if (Array.isArray(assets) || assets.includes(\",\")) return false;\n\n  // Check the collection for item_asset for the selected asset, and see if it uses file:values\n  // which defines the labels for the categorical values\n  const hasFileValues =\n    collection && \"file:values\" in collection.item_assets[assets];\n  const hasClassificationClasses =\n    collection && \"classification:classes\" in collection.item_assets[assets];\n\n  return hasFileValues || hasClassificationClasses;\n};\n\nexport const fileValuesToClassificationClasses = (\n  fv: FileExtValues[] | undefined\n) => {\n  return fv?.map(f => {\n    return { value: f.values[0], description: f.summary };\n  });\n};\n\nexport const useClassmap = (classmapName: string | null, config?: ILegendConfig) => {\n  return useQuery([\"classmap\", classmapName, config], getLegendMappingByName, {\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    enabled: Boolean(classmapName),\n  });\n};\n\nexport const getClassNameByValue = (\n  value: string,\n  classes: ClassificationExtClasses[]\n) => {\n  const matchingValue = classes.find(fv => fv.value === Number(value));\n  return matchingValue?.description;\n};\n\nexport const useInterval = (intervalName: string | null, config?: ILegendConfig) => {\n  return useQuery([\"interval\", intervalName, config], getLegendMappingByName, {\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    enabled: Boolean(intervalName),\n  });\n};\n\nconst getLegendMappingByName = async (\n  queryParam: QueryFunctionContext<\n    [\"classmap\" | \"interval\", string | null, ILegendConfig | undefined]\n  >\n): Promise<ClassMap> => {\n  const [legendType, classmapName, config] = queryParam.queryKey;\n\n  const qsConfig = config\n    ? \"?\" +\n      qs.stringify(\n        { trim_start: config.trimStart, trim_end: config.trimEnd },\n        { skipNull: true }\n      )\n    : \"\";\n\n  const rootUrl = legendType === \"classmap\" ? rootClassmapUrl : rootIntervalUrl;\n\n  return await (\n    await pcApiClient.get(`${rootUrl}/${classmapName}${qsConfig}`)\n  ).data;\n};\n","import { useCallback } from \"react\";\nimport { useBoolean } from \"react-use\";\nimport {\n  FontSizes,\n  IImageStyles,\n  Image,\n  ITextStyles,\n  Stack,\n  Text,\n  getTheme,\n  ImageLoadState,\n  Shimmer,\n  ShimmerElementType,\n} from \"@fluentui/react\";\nimport * as qs from \"query-string\";\n\nimport { rootColormapUrl } from \"../helpers\";\nimport { ILegendConfig } from \"pages/Explore/types\";\nimport { QsParamType } from \"types\";\n\nconst HEIGHT: number = 0.08;\nconst WIDTH: number = 4.1;\n\ninterface ColorMapProps {\n  params: qs.ParsedQuery<string>;\n  legendConfig: ILegendConfig | undefined;\n}\n\nconst ColorMap = ({ params, legendConfig }: ColorMapProps) => {\n  const img = useColorRamp(params.colormap_name, legendConfig);\n\n  const scale = makeScale(params.rescale, legendConfig?.labels);\n\n  return (\n    <Stack>\n      {img}\n      {scale}\n    </Stack>\n  );\n};\n\nexport default ColorMap;\n\nconst useColorRamp = (\n  colormapName: QsParamType,\n  legendConfig: ILegendConfig | undefined\n) => {\n  const [loading, setLoading] = useBoolean(true);\n\n  const handleStateChange = useCallback(\n    (state: ImageLoadState) => {\n      setLoading(state === ImageLoadState.notLoaded);\n    },\n    [setLoading]\n  );\n  if (!colormapName) return null;\n\n  const config = {\n    height: HEIGHT,\n    width: WIDTH,\n    trim_start: legendConfig?.trimStart,\n    trim_end: legendConfig?.trimEnd,\n  };\n\n  return (\n    <>\n      {loading && (\n        <Shimmer\n          shimmerElements={[\n            { type: ShimmerElementType.line, height: 8, width: 233 },\n          ]}\n        />\n      )}\n      <Image\n        styles={imageStyles}\n        src={`${rootColormapUrl}/${colormapName}?${qs.stringify(config, {\n          skipNull: true,\n        })}`}\n        onLoadingStateChange={handleStateChange}\n        alt={`Legend color ramp using ${colormapName}`}\n      />\n    </>\n  );\n};\n\nconst makeScale = (rescale: QsParamType, customScale: string[] | undefined) => {\n  const items = customScale\n    ? makeCustomScale(customScale)\n    : makeNumericScale(rescale);\n  return (\n    <Stack horizontal horizontalAlign=\"space-between\">\n      {items}\n    </Stack>\n  );\n};\n\nconst makeCustomScale = (customScale: string[]) => {\n  return customScale.map((label, i) => {\n    const key = `legend-scale-${i}`;\n    return (\n      <Text key={key} styles={scaleStyles}>\n        {label}\n      </Text>\n    );\n  });\n};\nconst makeNumericScale = (rescale: QsParamType) => {\n  if (!rescale) return null;\n  const scale = Array.isArray(rescale) ? rescale : rescale.split(\",\");\n  if (!scale || scale.filter(Boolean).length !== 2) return null;\n\n  // @ts-ignore - null scale items are filtered out\n  const [low, high] = scale.map(s => parseFloat(s));\n  const mid = (low + high) / 2;\n  return (\n    <>\n      <Text styles={scaleStyles}>{low}</Text>\n      <Text styles={scaleStyles}>{mid}</Text>\n      <Text styles={scaleStyles}>{high}</Text>\n    </>\n  );\n};\n\nconst theme = getTheme();\nconst scaleStyles: ITextStyles = {\n  root: {\n    fontSize: FontSizes.small,\n  },\n};\n\nconst imageStyles: Partial<IImageStyles> = {\n  image: {\n    width: \"100%\",\n    borderRadius: 4,\n    borderWidth: 0.5,\n    borderColor: theme.palette.neutralQuaternary,\n    borderStyle: \"solid\",\n  },\n};\n","import {\n  FontSizes,\n  getTheme,\n  IStackItemStyles,\n  IStackTokens,\n  ITextStyles,\n  Shimmer,\n  ShimmerElementType,\n  Stack,\n  StackItem,\n  Text,\n} from \"@fluentui/react\";\nimport { ILegendConfig } from \"pages/Explore/types\";\nimport * as qs from \"query-string\";\nimport { IStacCollection } from \"types/stac\";\nimport {\n  fileValuesToClassificationClasses,\n  getClassNameByValue,\n  useClassmap,\n} from \"../helpers\";\n\ninterface ClassMapProps {\n  params: qs.ParsedQuery<string>;\n  collection: IStacCollection | null;\n  legendConfig?: ILegendConfig;\n}\n\nconst ClassMap = ({ params, collection, legendConfig }: ClassMapProps) => {\n  const classmapName = Array.isArray(params.colormap_name)\n    ? params.colormap_name[0]\n    : params.colormap_name;\n\n  const { isLoading, data: classes } = useClassmap(classmapName, legendConfig);\n  const definition = classmapName\n    ? classes\n    : params.colormap && JSON.parse(params.colormap as string);\n\n  const loading = isLoading && (\n    <Shimmer\n      shimmerElements={[{ type: ShimmerElementType.line, height: 20, width: 233 }]}\n    />\n  );\n\n  const assetName = Array.isArray(params.assets) ? params.assets[0] : params.assets;\n  if (!assetName) return null;\n\n  const asset = collection?.item_assets[assetName];\n  if (!asset) return null;\n\n  const classValues =\n    asset[\"classification:classes\"] ||\n    fileValuesToClassificationClasses(asset[\"file:values\"]);\n\n  if (!classValues) return null;\n\n  const legendItems = definition\n    ? Object.keys(definition).map(key => {\n        const color = definition[key];\n        const label = getClassNameByValue(key, classValues);\n        const elKey = `legend-class-${key}`;\n\n        // There may have been a mismatch in class values and the classmap. Only return\n        // a legend item if there was a defined class value.\n        return (\n          label && (\n            <Stack\n              key={elKey}\n              horizontal\n              verticalAlign=\"center\"\n              tokens={mappedItemStackTokens}\n            >\n              <StackItem shrink={0}>\n                <ColorSwatch color={color} />\n              </StackItem>\n              <Text styles={mappedItemTextStyles}>{label}</Text>\n            </Stack>\n          )\n        );\n      })\n    : null;\n\n  return (\n    <StackItem styles={mappedItemLegendStyles} className=\"custom-overflow\">\n      {loading}\n      <Stack tokens={mappedItemLegendStackTokens}>{legendItems}</Stack>\n    </StackItem>\n  );\n};\n\nconst theme = getTheme();\nexport const ColorSwatch = ({ color }: { color: number[] }) => {\n  return (\n    <div\n      style={{\n        backgroundColor: `rgba(${color.join(\",\")}) `,\n        width: 10,\n        height: 10,\n        borderRadius: \"50%\",\n        borderWidth: 0.5,\n        borderStyle: \"solid\",\n        borderColor: theme.palette.neutralQuaternary,\n      }}\n    />\n  );\n};\n\nexport default ClassMap;\n\nexport const mappedItemStackTokens: IStackTokens = {\n  childrenGap: 5,\n};\n\nexport const mappedItemLegendStackTokens: IStackTokens = {\n  childrenGap: 3,\n};\n\nexport const mappedItemTextStyles: Partial<ITextStyles> = {\n  root: {\n    fontSize: FontSizes.smallPlus,\n  },\n};\n\nexport const mappedItemLegendStyles: IStackItemStyles = {\n  root: {\n    maxHeight: 150,\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n};\n","import {\n  Slider,\n  getTheme,\n  IconButton,\n  FontSizes,\n  ISliderStyles,\n  Callout,\n  DirectionalHint,\n} from \"@fluentui/react\";\nimport { useId } from \"@fluentui/react-hooks\";\nimport { useExploreDispatch } from \"pages/Explore/state/hooks\";\nimport { setLayerOpacity } from \"pages/Explore/state/mosaicSlice\";\nimport { ILayerState } from \"pages/Explore/types\";\nimport { useState } from \"react\";\nimport { activeCmdButtonStyles, cmdButtonStyles } from \"./LegendCmdBar\";\n\ninterface LayerOptionsProps {\n  layer: ILayerState;\n}\n\nexport const OpacityCmdButton: React.FC<LayerOptionsProps> = ({\n  layer,\n  children,\n}) => {\n  const dispatch = useExploreDispatch();\n  const [showOpacity, setShowOpacity] = useState<boolean>(false);\n  const buttonId = useId(\"opacity-button\");\n\n  const handleChange = (value: number) => {\n    const layerId = layer.layerId;\n    layerId && dispatch(setLayerOpacity({ id: layerId, value }));\n  };\n\n  return (\n    <>\n      <IconButton\n        id={buttonId}\n        checked={showOpacity}\n        title=\"Adjust layer opacity\"\n        aria-label={`Set ${layer.collection?.title} ${layer.renderOption?.name} opacity`}\n        iconProps={{ iconName: \"CircleHalfFull\" }}\n        styles={\n          layer.layer.opacity === 100 ? cmdButtonStyles : activeCmdButtonStyles\n        }\n        onClick={() => setShowOpacity(!showOpacity)}\n      />\n      {showOpacity && (\n        <Callout\n          target={`#${buttonId}`}\n          gapSpace={5}\n          isBeakVisible={false}\n          directionalHint={DirectionalHint.topAutoEdge}\n          onDismiss={() => setShowOpacity(false)}\n          setInitialFocus\n        >\n          <Slider\n            label=\"Layer opacity\"\n            aria-label=\"Layer opacity\"\n            min={0}\n            max={100}\n            step={1}\n            value={layer.layer.opacity}\n            onChange={handleChange}\n            showValue={false}\n            styles={sliderStyles}\n          />\n          {children}\n        </Callout>\n      )}\n    </>\n  );\n};\n\nconst theme = getTheme();\n\nconst sliderStyles: Partial<ISliderStyles> = {\n  root: { width: 175, padding: 10 },\n  titleLabel: { fontSize: FontSizes.size12 },\n  activeSection: {\n    background: theme.palette.themePrimary,\n  },\n  inactiveSection: {\n    background: theme.palette.themeLighter,\n  },\n};\n","import {\n  IconButton,\n  IContextualMenuItem,\n  IContextualMenuProps,\n} from \"@fluentui/react\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport {\n  moveLayerDown,\n  moveLayerUp,\n  pinCurrentMosaic,\n  setCurrentEditingLayerId,\n} from \"pages/Explore/state/mosaicSlice\";\nimport { ILayerState } from \"pages/Explore/types\";\nimport { useCallback, useMemo } from \"react\";\nimport { cmdButtonStyles } from \"./LegendCmdBar\";\n\ntype LayerOverflowOptionsProps = {\n  layer: ILayerState;\n};\n\nconst LayerOverflowOptions: React.FC<LayerOverflowOptionsProps> = ({\n  layer: { layerId, isPinned },\n}) => {\n  const dispatch = useExploreDispatch();\n  const { currentEditingLayerId, layerOrder } = useExploreSelector(s => s.mosaic);\n  const { previewMode } = useExploreSelector(s => s.detail);\n  const isEditing = layerId === currentEditingLayerId;\n\n  const handlePin = useCallback(() => {\n    currentEditingLayerId && dispatch(pinCurrentMosaic());\n  }, [currentEditingLayerId, dispatch]);\n\n  const handleEdit = useCallback(() => {\n    // If there is a layer being edited, pin it so the current map isn't disrupted\n    // when reloading this layer to the sidebar.\n    handlePin();\n    dispatch(setCurrentEditingLayerId(layerId));\n  }, [dispatch, handlePin, layerId]);\n\n  const handleMoveUp = useCallback(() => {\n    dispatch(moveLayerUp(layerId));\n  }, [dispatch, layerId]);\n\n  const handleMoveDown = useCallback(() => {\n    dispatch(moveLayerDown(layerId));\n  }, [dispatch, layerId]);\n\n  const canMoveUp = layerOrder[0] !== layerId;\n  const canMoveDown = layerOrder[layerOrder.length - 1] !== layerId;\n\n  const pinOrEditItem: IContextualMenuItem = useMemo(() => {\n    if (isPinned && !isEditing) {\n      return {\n        key: \"re-edit\",\n        text: \"Edit layer and filter options\",\n        iconProps: { iconName: \"Edit\" },\n        onClick: handleEdit,\n        disabled: previewMode.enabled,\n      };\n    }\n\n    return {\n      key: \"re-pin\",\n      text: \"Stop editing\",\n      iconProps: { iconName: \"PencilReply\" },\n      onClick: handlePin,\n      disabled: previewMode.enabled,\n    };\n  }, [handleEdit, handlePin, isEditing, isPinned, previewMode.enabled]);\n\n  const menuProps: IContextualMenuProps = useMemo(() => {\n    return {\n      items: [\n        pinOrEditItem,\n        {\n          key: \"moveup\",\n          text: \"Move layer up\",\n          iconProps: { iconName: \"Up\" },\n          disabled: !canMoveUp,\n          onClick: handleMoveUp,\n        },\n        {\n          key: \"movedown\",\n          text: \"Move layer down\",\n          iconProps: { iconName: \"Down\" },\n          disabled: !canMoveDown,\n          onClick: handleMoveDown,\n        },\n      ],\n      styles: {\n        subComponentStyles: {\n          menuItem: {\n            linkContent: { fontSize: 13 },\n            icon: { fontSize: 13 },\n          },\n        },\n      },\n    };\n  }, [pinOrEditItem, canMoveUp, handleMoveUp, canMoveDown, handleMoveDown]);\n\n  return (\n    <IconButton\n      role=\"menuitem\"\n      aria-label=\"More actions\"\n      title=\"More actions\"\n      menuIconProps={menuIconProps}\n      menuProps={menuProps}\n      styles={cmdButtonStyles}\n    />\n  );\n};\n\nexport default LayerOverflowOptions;\n\nconst menuIconProps = { iconName: \"MoreVertical\" };\n","import {\n  FontSizes,\n  getTheme,\n  IButtonStyles,\n  IconButton,\n  IStackTokens,\n  mergeStyleSets,\n  Stack,\n} from \"@fluentui/react\";\nimport { useExploreDispatch } from \"pages/Explore/state/hooks\";\nimport { setLayerVisible } from \"pages/Explore/state/mosaicSlice\";\nimport { ILayerState } from \"pages/Explore/types\";\nimport { OpacityCmdButton } from \"./LayerOptions\";\nimport LayerOverflowOptions from \"./LayerOverflowOptions\";\n\ninterface LegendCmdBarProps {\n  layer: ILayerState;\n  isExpanded: boolean;\n  onExpandedChange: (value: boolean) => void;\n  isExpandDisabled: boolean;\n}\n\nconst LegendCmdBar = ({\n  layer,\n  isExpanded,\n  onExpandedChange,\n  isExpandDisabled = false,\n}: LegendCmdBarProps) => {\n  const dispatch = useExploreDispatch();\n\n  const handleVisible = () => {\n    dispatch(setLayerVisible({ id: layer.layerId, value: !layer.layer.visible }));\n  };\n\n  const expand = settings.expand[isExpanded ? \"true\" : \"false\"];\n  const view = settings.view[layer.layer.visible ? \"true\" : \"false\"];\n  const handleExpand = () => onExpandedChange(!isExpanded);\n\n  const btnOpacity = <OpacityCmdButton layer={layer} />;\n  const btnVisible = (\n    <IconButton\n      role=\"menuitem\"\n      aria-label={view.title}\n      title={view.title}\n      iconProps={{ iconName: view.icon }}\n      onClick={handleVisible}\n      styles={cmdButtonStyles}\n    />\n  );\n\n  return (\n    <Stack\n      horizontal\n      horizontalAlign=\"center\"\n      tokens={stackTokens}\n      role=\"menubar\"\n      aria-orientation=\"horizontal\"\n    >\n      {btnVisible}\n      {btnOpacity}\n      <IconButton\n        aria-label={expand.title}\n        title={expand.title}\n        disabled={isExpandDisabled}\n        iconProps={{ iconName: expand.icon }}\n        onClick={handleExpand}\n        styles={cmdButtonStyles}\n      />\n      <LayerOverflowOptions layer={layer} />\n    </Stack>\n  );\n};\n\nexport default LegendCmdBar;\n\nconst settings = {\n  expand: {\n    true: { icon: \"ChevronDown\", title: \"Collapse legend\" },\n    false: { icon: \"ChevronUp\", title: \"Expand legend\" },\n  },\n  view: {\n    true: { icon: \"FluentView\", title: \"Hide layer from map\" },\n    false: { icon: \"FluentUnview\", title: \"Show layer on map\" },\n  },\n};\n\nconst theme = getTheme();\nconst stackTokens: IStackTokens = {\n  childrenGap: 2,\n};\nexport const cmdButtonStyles: IButtonStyles = {\n  root: {\n    width: 18,\n    height: 18,\n    padding: 2,\n  },\n  rootHasMenu: {\n    width: 18,\n    height: 18,\n    padding: 2,\n  },\n  icon: {\n    color: theme.palette.neutralSecondaryAlt,\n    fontSize: FontSizes.small,\n    width: 16,\n  },\n  menuIcon: {\n    color: theme.palette.neutralSecondaryAlt,\n    fontSize: FontSizes.small,\n    width: 16,\n  },\n};\n\nexport const activeCmdButtonStyles = mergeStyleSets(cmdButtonStyles, {\n  icon: { color: theme.palette.themePrimary },\n});\n","import {\n  Shimmer,\n  ShimmerElementType,\n  Stack,\n  StackItem,\n  Text,\n} from \"@fluentui/react\";\nimport { ILegendConfig } from \"pages/Explore/types\";\nimport * as qs from \"query-string\";\nimport { FC } from \"react\";\nimport { IntervalMap, useInterval } from \"../helpers\";\nimport {\n  ColorSwatch,\n  mappedItemLegendStackTokens,\n  mappedItemLegendStyles,\n  mappedItemTextStyles,\n} from \"./ClassMap\";\n\ninterface IntervalProps {\n  params: qs.ParsedQuery<string>;\n  legendConfig?: ILegendConfig;\n}\n\nconst DEFAULT_SCALE_FACTOR = 1;\n\nconst Interval: FC<IntervalProps> = ({ params, legendConfig }) => {\n  const classmapName =\n    params.colormap_name && Array.isArray(params.colormap_name)\n      ? params.colormap_name[0]\n      : params.colormap_name;\n\n  const { isLoading, data: intervals } = useInterval(classmapName, legendConfig);\n\n  const definition = classmapName\n    ? intervals\n    : params.colormap && JSON.parse(params.colormap as string);\n  const loading = isLoading && (\n    <Shimmer\n      shimmerElements={[{ type: ShimmerElementType.line, height: 20, width: 233 }]}\n    />\n  );\n\n  const labelScaleFactor = legendConfig?.scaleFactor ?? DEFAULT_SCALE_FACTOR;\n\n  return (\n    <StackItem styles={mappedItemLegendStyles} className=\"custom-overflow\">\n      {loading}\n      <Stack tokens={mappedItemLegendStackTokens}>\n        {definition && makeSwatches(definition, labelScaleFactor)}\n      </Stack>\n    </StackItem>\n  );\n};\n\nexport default Interval;\n\nconst makeSwatches = (\n  intervals: IntervalMap,\n  scaleFactor: number = DEFAULT_SCALE_FACTOR\n) => {\n  return intervals.map(([[min, max], rgba]) => {\n    const formattedMin = (min * scaleFactor).toLocaleString();\n    const formattedMax = (max * scaleFactor).toLocaleString();\n\n    return (\n      <StackItem key={`interval-${min}-${max}`}>\n        <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 5 }}>\n          <ColorSwatch color={rgba} />\n          <Text\n            styles={mappedItemTextStyles}\n          >{`${formattedMin} – ${formattedMax}`}</Text>\n        </Stack>\n      </StackItem>\n    );\n  });\n};\n","import { getTheme, IButtonStyles, IconButton, Stack } from \"@fluentui/react\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { pinCurrentMosaic, removeLayerById } from \"pages/Explore/state/mosaicSlice\";\nimport { ILayerState } from \"pages/Explore/types\";\n\ninterface LegendCmdBarProps {\n  layer: ILayerState;\n}\n\nconst LegendBumperBar = ({ layer }: LegendCmdBarProps) => {\n  const dispatch = useExploreDispatch();\n  const { previewMode } = useExploreSelector(s => s.detail);\n\n  const handlePin = () => {\n    const layerId = layer.layerId;\n    const isPinned = layer.isPinned;\n    isPinned ? dispatch(removeLayerById(layerId)) : dispatch(pinCurrentMosaic());\n  };\n\n  const info = layer.isPinned\n    ? { icon: \"FluentPinFilled\", title: \"Unpin layer and remove from map\" }\n    : { icon: \"FluentPinOutline\", title: \"Pin layer to map and perform new search\" };\n\n  const btnPin = (\n    <IconButton\n      aria-label={info.title}\n      title={info.title}\n      iconProps={{ iconName: info.icon }}\n      onClick={handlePin}\n      styles={bumperButtonStyles}\n      disabled={previewMode.enabled}\n    />\n  );\n\n  return (\n    <Stack horizontal horizontalAlign=\"center\">\n      {btnPin}\n    </Stack>\n  );\n};\n\nexport default LegendBumperBar;\n\nconst theme = getTheme();\nconst bumperButtonStyles: IButtonStyles = {\n  root: {\n    width: 18,\n    height: 18,\n    padding: \"0px 12px 0px 16px\",\n  },\n  rootDisabled: {\n    background: theme.semanticColors.bodyBackground,\n  },\n  rootHovered: {\n    background: theme.semanticColors.bodyBackground,\n  },\n  iconDisabled: {\n    backgroundColor: theme.semanticColors.bodyBackground,\n    \"& svg path\": {\n      fill: theme.semanticColors.buttonBackgroundDisabled,\n    },\n  },\n};\n","import React, { useState } from \"react\";\nimport {\n  FontSizes,\n  FontWeights,\n  getTheme,\n  IStackStyles,\n  IStackTokens,\n  ITextStyles,\n  Separator,\n  Stack,\n  Text,\n} from \"@fluentui/react\";\nimport * as qs from \"query-string\";\n\nimport { ILayerState, ILegendConfig } from \"pages/Explore/types\";\nimport { LegendTypes } from \"pages/Explore/enums\";\nimport ColorMap from \"./legendTypes/ColorMap\";\nimport ClassMap from \"./legendTypes/ClassMap\";\nimport { hasClassmapValues } from \"./helpers\";\nimport { IStacCollection } from \"types/stac\";\n\nimport LegendCmdBar from \"./LegendCmdBar\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport Interval from \"./legendTypes/Interval\";\nimport LegendBumperBar from \"./LegendBumperBar\";\n\ninterface LegendProps {\n  layer: ILayerState;\n}\n\nconst Legend = ({ layer }: LegendProps) => {\n  const { zoom } = useExploreSelector(s => s.map);\n  const [isExpanded, setIsExpanded] = useState(true);\n  const { renderOption, collection } = layer;\n\n  if (!renderOption) return null;\n\n  const renderConfig = qs.parse(renderOption.options || \"\");\n  const legendConfig = renderOption.legend;\n  const isZoomVisible = zoom + 0.5 >= layer.layer.minZoom;\n  const styles = isZoomVisible ? visibleStyles : nonVisibleStyles;\n  const zoomMsg = isZoomVisible ? \"\" : \"Layer not visible at this zoom level. \";\n\n  const legend = getLegendType(renderConfig, legendConfig, collection);\n\n  const layerSubtitle = layer.isCustomQuery ? \"Custom\" : layer.query.name;\n  const subtitle = `${layerSubtitle} | ${renderOption.name}`;\n  const renderDesc = (\n    <Text block nowrap styles={styles.subHeader} title={zoomMsg || subtitle}>\n      {subtitle}\n    </Text>\n  );\n\n  const handleExpandChange = (value: boolean) => {\n    setIsExpanded(value);\n  };\n\n  return (\n    <>\n      <Stack horizontal>\n        <LegendBumperBar layer={layer} />\n        <Stack tokens={tokens} styles={legendHeaderStyles} grow={true}>\n          <Stack horizontal horizontalAlign=\"space-between\">\n            <Stack horizontal horizontalAlign=\"start\" verticalAlign=\"start\">\n              <Text\n                block\n                nowrap\n                styles={styles.header}\n                title={zoomMsg || collection?.title}\n              >\n                {collection?.title}\n              </Text>\n            </Stack>\n            <LegendCmdBar\n              layer={layer}\n              isExpanded={isExpanded}\n              onExpandedChange={handleExpandChange}\n              isExpandDisabled={!legend}\n            />\n          </Stack>\n          <div style={legendBodyStyles}>{renderDesc}</div>\n          {isExpanded && <div style={legendBodyStyles}>{legend}</div>}\n        </Stack>\n      </Stack>\n      <Separator className=\"legend-item-separator\" styles={legendSeparatorStyles} />\n    </>\n  );\n};\n\nexport default Legend;\n\nconst getLegendType = (\n  params: qs.ParsedQuery<string>,\n  legendConfig: ILegendConfig | undefined,\n  collection: IStacCollection | null\n) => {\n  // Legend configs are optional, but if they exist, use them to set the values\n  if (legendConfig) {\n    switch (legendConfig.type) {\n      case LegendTypes.classmap:\n        return (\n          <ClassMap\n            params={params}\n            collection={collection}\n            legendConfig={legendConfig}\n          />\n        );\n      case LegendTypes.continuous:\n        return <ColorMap params={params} legendConfig={legendConfig} />;\n      case LegendTypes.interval:\n        return <Interval params={params} legendConfig={legendConfig} />;\n      case LegendTypes.none:\n        return null;\n      default:\n        throw new Error(`Unknown legend type: ${legendConfig.type}`);\n    }\n  }\n\n  if (\"rescale\" in params) {\n    return <ColorMap params={params} legendConfig={legendConfig} />;\n  }\n\n  if (hasClassmapValues(collection, params.assets)) {\n    return (\n      <ClassMap\n        params={params}\n        collection={collection}\n        legendConfig={legendConfig}\n      />\n    );\n  }\n  return null;\n};\n\nconst theme = getTheme();\nconst tokens: IStackTokens = {\n  childrenGap: 6,\n};\n\nconst legendHeaderStyles: IStackStyles = {\n  root: {\n    paddingLeft: 2,\n    paddingRight: 6,\n  },\n};\n\nconst legendBodyStyles: React.CSSProperties = {\n  paddingLeft: 1,\n};\n\nconst headerStyles: ITextStyles = {\n  root: {\n    fontWeight: FontWeights.semibold,\n    maxWidth: 250,\n  },\n};\n\nconst nonVisibleHeaderStyles: ITextStyles = {\n  root: {\n    color: theme.semanticColors.disabledBodyText,\n    fontStyle: \"italic\",\n    fontWeight: FontWeights.semibold,\n    maxWidth: 250,\n  },\n};\n\nconst subHeaderStyles: ITextStyles = {\n  root: {\n    fontSize: FontSizes.smallPlus,\n    maxWidth: 325,\n  },\n};\n\nconst nonVisibleSubHeaderStyles: ITextStyles = {\n  root: {\n    fontSize: FontSizes.smallPlus,\n    color: theme.semanticColors.disabledBodyText,\n    fontStyle: \"italic\",\n    maxWidth: 325,\n  },\n};\n\nconst visibleStyles = {\n  header: headerStyles,\n  subHeader: subHeaderStyles,\n};\n\nconst nonVisibleStyles = {\n  header: nonVisibleHeaderStyles,\n  subHeader: nonVisibleSubHeaderStyles,\n};\n\nconst legendSeparatorStyles = {\n  root: {\n    fontSize: 18,\n    marginTop: 2,\n  },\n};\n","import {\n  IStackStyles,\n  Stack,\n  getTheme,\n  IStackTokens,\n  IconButton,\n  IButtonStyles,\n  IIconProps,\n} from \"@fluentui/react\";\nimport { useLocalStorage } from \"react-use\";\n\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { controlStyle } from \"../PanelControl\";\nimport Legend from \"./Legend\";\n\nexport const LegendControl = () => {\n  const [isOpen, setIsOpen] = useLocalStorage(\"legend-control-open\", true);\n  const { layers, layerOrder } = useExploreSelector(s => s.mosaic);\n\n  // Generate legends for each layer, in order\n  const legends = layerOrder\n    .map(id => id && <Legend key={`legend-${id}`} layer={layers[id]} />)\n    .filter(Boolean);\n\n  // Keep the panel rendered even if it's closed to preserve the state of any command options\n  const openStyle = { display: isOpen ? \"block\" : \"none\" };\n  const legendPanel = (\n    <Stack\n      styles={panelStyles}\n      style={openStyle}\n      tokens={stackTokens}\n      data-cy={\"explore-legend\"}\n    >\n      {legends}\n    </Stack>\n  );\n\n  const legendTitle = isOpen ? \"Hide Legend\" : \"Open Legend\";\n  const legendButton = (\n    <div style={buttonStyle} title={legendTitle}>\n      <div>\n        <IconButton\n          ariaLabel=\"Open legend\"\n          className=\"azure-maps-control-button\"\n          styles={legendButtonStyles}\n          iconProps={iconProps}\n          onClick={() => setIsOpen(!isOpen)}\n        />\n      </div>\n    </div>\n  );\n\n  const hasLegends = legends.length > 0;\n  return hasLegends ? (\n    <div className=\"explorer-map-component\">\n      {legendPanel}\n      {legendButton}\n    </div>\n  ) : null;\n};\n\nconst theme = getTheme();\nconst stackTokens: IStackTokens = {\n  childrenGap: 2,\n};\nconst panelStyles: IStackStyles = {\n  root: {\n    background: theme.semanticColors.bodyBackground,\n    padding: \"10px 0px 10px 0px\",\n    borderRadius: 2,\n    position: \"absolute\",\n    zIndex: 1,\n    bottom: 75,\n    right: 10,\n    boxShadow: \"rgb(0 0 0 / 16%) 0 0 4px\",\n    width: 370,\n  },\n};\n\nconst legendButtonStyles: IButtonStyles = {\n  icon: {\n    color: theme.semanticColors.bodyText,\n\n    width: 18,\n    height: 18,\n  },\n};\n\nconst buttonStyle = { right: 2, bottom: 32, ...controlStyle };\nconst iconProps: IIconProps = {\n  iconName: \"Layer\",\n  styles: {\n    root: {\n      fill: \"rgb(131, 136, 141)\",\n      width: 20,\n    },\n  },\n};\n","import { cloneDeep } from \"lodash-es\";\n\nimport { CQL_PROP_IDX, CQL_VALS_IDX } from \"pages/Explore/utils/constants\";\nimport { CqlExpression } from \"pages/Explore/utils/cql/types\";\nimport { IStacFilter } from \"types/stac\";\n\nexport const stripCommonFilterElements = (cqlFilter: IStacFilter) => {\n  // Pluck out the properties we want to use as variables\n  const aoiExp = getByProperty(\"geometry\", cqlFilter);\n  const dtExp = getByProperty(\"datetime\", cqlFilter);\n\n  const aoiVal = aoiExp?.args[CQL_VALS_IDX];\n  const dtVal = dtExp?.args[CQL_VALS_IDX];\n\n  // Create a mapping between the variable name and the value\n  const aoi = replaceValueWithVar(aoiExp, \"aoi\", \"$\");\n  const datetime = replaceValueWithVar(dtExp, \"daterange\", \"^\");\n\n  // Reconstruct the full body with the special expression values mapped to the\n  // variable names. Remove any optional ones like datetime.\n  const body = getAllWithout([\"geometry\", \"datetime\"], cqlFilter);\n  const fullBody = [aoi?.exp, datetime?.exp, ...body].filter(Boolean);\n\n  // Return a data structure allowing the template to be rendered\n  return {\n    datetime: { ...datetime, value: dtVal },\n    aoi: { ...aoi, value: aoiVal },\n    fullBody,\n  };\n};\n\nconst getByProperty = (\n  property: string,\n  cqlFilter: IStacFilter\n): CqlExpression | undefined => {\n  const exp = cqlFilter.filter.args.find(\n    exp => exp?.args[CQL_PROP_IDX]?.property === property\n  );\n  return exp;\n};\n\nconst getAllWithout = (properties: string[], cqlFilter: IStacFilter) => {\n  const exp = cqlFilter.filter.args.filter(\n    exp => !properties.includes(exp.args[CQL_PROP_IDX].property)\n  );\n  return exp;\n};\n\nconst replaceValueWithVar = (\n  exp: CqlExpression | undefined,\n  varName: string,\n  replaceChar: string\n) => {\n  if (!exp)\n    return {\n      replace: { this: \"\", with: \"\" },\n      exp: null,\n    };\n\n  const len = varName.length;\n  if (len < 3) {\n    throw new Error(`Variable name must be at least 3 characters long`);\n  }\n\n  const placeholder = \"\".padEnd(len - 2, replaceChar);\n  const newExp = cloneDeep(exp);\n  newExp.args[CQL_VALS_IDX] = placeholder;\n\n  return {\n    replace: {\n      this: `\"${placeholder}\"`,\n      with: varName,\n    },\n    exp: newExp,\n  };\n};\n","import stringify from \"json-stringify-pretty-compact\";\nimport hljs from \"highlight.js/lib/core\";\nimport python from \"highlight.js/lib/languages/python\";\nimport \"highlight.js/styles/github.css\";\n\nimport { IStacFilter, IStacItem } from \"types/stac\";\nimport { STAC_URL } from \"utils/constants\";\nimport { stripCommonFilterElements } from \"./helpers\";\n\nhljs.registerLanguage(\"python\", python);\n\nexport const createCqlPythonSnippet = (cql: IStacFilter | undefined) => {\n  if (!cql) return null;\n\n  const templateValue = stripCommonFilterElements(cql);\n  if (!templateValue) return null;\n\n  const { aoi, datetime, fullBody } = templateValue;\n\n  const placeholderBody = stringify({ op: \"and\", args: fullBody });\n  const body = placeholderBody\n    .replace(aoi.replace.this, aoi.replace.with)\n    .replace(datetime.replace.this, datetime.replace.with);\n\n  // Datetime expression is optional, only include the variable assignment if it exists\n  const datetimeAssignment = datetime.exp\n    ? `\n# Define your temporal range\ndaterange = ${stringify(datetime.value)}\n`\n    : \"\";\n\n  const template = `from pystac_client import Client\nimport planetary_computer as pc\n\n# Search against the Planetary Computer STAC API\ncatalog = Client.open(\n  \"${STAC_URL}\"\n)\n\n# Define your area of interest\naoi = ${stringify(aoi.value)}\n${datetimeAssignment}\n# Define your search with CQL2 syntax\nsearch = catalog.search(filter_lang=\"cql2-json\", filter=${body})\n\n# Grab the first item from the search results and sign the assets\nfirst_item = next(search.get_items())\npc.sign_item(first_item).assets`;\n\n  return hljs.highlight(template, { language: \"python\" });\n};\n\nexport const createItemPythonSnippet = (item: IStacItem | null) => {\n  if (!item) return null;\n\n  const itemLink = item.links.find(link => link.rel === \"self\");\n  if (!itemLink) return null;\n\n  let dataAssetEntries = Object.entries(item.assets).filter(\n    ([, asset]) => asset.roles?.includes(\"data\") && asset.type?.includes(\"geotiff\")\n  );\n\n  const hasDataAssets = Boolean(dataAssetEntries?.length);\n  if (hasDataAssets) {\n    dataAssetEntries = Object.entries(item.assets).filter(([, asset]) =>\n      asset.type?.includes(\"geotiff\")\n    );\n  }\n\n  const [firstDataAsset, ...otherDataAssets] = dataAssetEntries;\n\n  // Generate a comment indicating other data assets that might be useful\n  const formattedOtherAssets = otherDataAssets?.length\n    ? `(other asset keys to use: ${otherDataAssets\n        .map(a => `'${a[0]}'`)\n        .join(\", \")})`\n    : \"\";\n\n  const assetTemplate = hasDataAssets\n    ? `signed_item = planetary_computer.sign(item)\n\n# Open one of the data assets ${formattedOtherAssets}\nasset_href = signed_item.assets[\"${firstDataAsset[0]}\"].href\nds = rioxarray.open_rasterio(asset_href)\nds\n`\n    : `# No data assets in this item, show the STAC data\nitem\n`;\n\n  const template = `import pystac\nimport planetary_computer\nimport rioxarray\n\nitem_url = \"${itemLink.href}\"\n\n# Load the individual item metadata and sign the assets\nitem = pystac.Item.from_file(item_url)\n\n${assetTemplate}\n`;\n\n  return hljs.highlight(template, { language: \"python\" });\n};\n","import { useCallback, useState } from \"react\";\nimport {\n  Callout,\n  DirectionalHint,\n  FontWeights,\n  FontSizes,\n  PrimaryButton,\n  Stack,\n  mergeStyleSets,\n  getTheme,\n  Text,\n  DefaultButton,\n  StackItem,\n} from \"@fluentui/react\";\nimport { useId } from \"@fluentui/react-hooks\";\nimport { useCopyToClipboard } from \"react-use\";\n\nimport { HUB_URL } from \"utils/constants\";\nimport NewTabLink from \"components/controls/NewTabLink\";\nimport { useCqlFormat } from \"pages/Explore/utils/hooks/useStacFilter\";\nimport { createCqlPythonSnippet, createItemPythonSnippet } from \"./pythonSnippet\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\n\ninterface Props {\n  visible: boolean;\n  buttonId: string;\n  onDismiss: () => void;\n  snippetType?: \"query\" | \"item\";\n}\n\nconst SnippetCopyPanel = ({\n  visible,\n  buttonId,\n  onDismiss,\n  snippetType = \"query\",\n}: Props) => {\n  const labelId = useId(\"callout-label\");\n  const descriptionId = useId(\"callout-description\");\n  const [clipboardState, copyToClipboard] = useCopyToClipboard();\n  const [isRecentCopy, setIsRecentCopy] = useState<boolean>(false);\n  const cql = useCqlFormat();\n  const item = useExploreSelector(s => s.detail.selectedItem);\n  const snippet =\n    snippetType === \"query\"\n      ? createCqlPythonSnippet(cql)\n      : createItemPythonSnippet(item);\n  const title =\n    snippetType === \"query\" ? (\n      <>\n        <Text>\n          Use the code below to recreate this search in the Planetary Computer Hub or\n          other Python analytic environments. Read more about searching using the{\" \"}\n          <NewTabLink href=\"https://github.com/radiantearth/stac-api-spec/tree/master/fragments/filter#overview\">\n            STAC API\n          </NewTabLink>\n          .\n        </Text>\n      </>\n    ) : (\n      \"Use the code below to access this individual item's data assets.\"\n    );\n\n  const isCopySuccess = clipboardState.value && isRecentCopy;\n\n  // Briefly change the copy button icon when a user copies to indicate success\n  const copyIcon = isCopySuccess ? \"SkypeCheck\" : \"Copy\";\n  const copyIconColor = isCopySuccess\n    ? theme.palette.green\n    : theme.palette.neutralPrimary;\n\n  const handleCopy = useCallback(() => {\n    if (!snippet?.code) return;\n    setIsRecentCopy(true);\n    copyToClipboard(snippet.code);\n    setTimeout(() => setIsRecentCopy(false), 3000);\n  }, [copyToClipboard, snippet]);\n\n  if (!visible || !snippet) return null;\n\n  return (\n    <Callout\n      ariaLabelledBy={labelId}\n      ariaDescribedBy={descriptionId}\n      role=\"alertdialog\"\n      className={styles.callout}\n      gapSpace={6}\n      target={`#${buttonId}`}\n      onDismiss={onDismiss}\n      setInitialFocus\n      isBeakVisible={false}\n      directionalHint={DirectionalHint.rightBottomEdge}\n    >\n      <Stack tokens={{ childrenGap: 6 }}>\n        <Text block className={styles.title}>\n          Explore results\n        </Text>\n        <Text>{title}</Text>\n        <StackItem>\n          <Stack horizontal horizontalAlign={\"start\"} tokens={{ childrenGap: 6 }}>\n            <DefaultButton\n              styles={{ icon: { color: copyIconColor } }}\n              iconProps={{ iconName: copyIcon }}\n              onClick={handleCopy}\n            >\n              Copy\n            </DefaultButton>\n            <NewTabLink\n              As={PrimaryButton}\n              href={HUB_URL}\n              title=\"Open the Planetary Computer Hub\"\n            >\n              Open Hub\n            </NewTabLink>\n          </Stack>\n        </StackItem>\n        <StackItem>\n          <div className=\"input_area\" style={{ marginTop: 6 }}>\n            <pre dangerouslySetInnerHTML={{ __html: snippet.value }} />\n          </div>\n        </StackItem>\n      </Stack>\n    </Callout>\n  );\n};\n\nexport default SnippetCopyPanel;\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  callout: {\n    maxWidth: 700,\n    padding: \"20px 24px\",\n    backgroundColor: theme.semanticColors.bodyBackground,\n  },\n  title: {\n    fontSize: FontSizes.mediumPlus,\n    fontWeight: FontWeights.semibold,\n  },\n});\n","import { PrimaryButton, Stack, getTheme } from \"@fluentui/react\";\nimport { useBoolean, useId } from \"@fluentui/react-hooks\";\nimport SnippetCopyPanel from \"./SnippetCopyPanel\";\n\nconst ExploreInHub = () => {\n  const [isCalloutVisible, { toggle }] = useBoolean(false);\n  const buttonId = useId(\"callout-button\");\n\n  return (\n    <Stack className=\"explorer-explore-in-hub\" styles={sidebarBottomButtonStyles}>\n      <PrimaryButton id={buttonId} onClick={toggle} data-cy=\"explore-in-hub\">\n        Explore results in the Hub\n      </PrimaryButton>\n\n      <SnippetCopyPanel\n        buttonId={buttonId}\n        visible={isCalloutVisible}\n        onDismiss={toggle}\n      />\n    </Stack>\n  );\n};\n\nexport default ExploreInHub;\n\nconst theme = getTheme();\nexport const sidebarBottomButtonStyles = {\n  root: {\n    marginTop: 0,\n    padding: 8,\n    borderTop: \"1px solid\",\n    borderColor: theme.palette.neutralLighter,\n    backgroundColor: theme.semanticColors.bodyBackground,\n  },\n};\n","import { IButtonStyles, PrimaryButton, Stack } from \"@fluentui/react\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { toggleShowSidebar } from \"pages/Explore/state/mapSlice\";\nimport { sidebarBottomButtonStyles } from \"../ExploreInHub\";\n\nexport const MobileViewMapButton = () => {\n  const dispatch = useExploreDispatch();\n  const handleClick = () => {\n    dispatch(toggleShowSidebar());\n  };\n\n  return (\n    <Stack className=\"explorer-mobile-view-map\" styles={sidebarBottomButtonStyles}>\n      <PrimaryButton\n        styles={mapViewStyles}\n        onClick={handleClick}\n        iconProps={mapIconProps}\n      >\n        View map\n      </PrimaryButton>\n    </Stack>\n  );\n};\n\nexport const MobileViewSidebarButton = () => {\n  const dispatch = useExploreDispatch();\n  const { showSidebar, sidebarPanel } = useExploreSelector(s => s.map);\n  const { previewMode } = useExploreSelector(s => s.detail);\n\n  const handleClick = () => {\n    dispatch(toggleShowSidebar());\n  };\n\n  if (showSidebar || previewMode.enabled) return null;\n\n  const panelText = [\"animation\", \"image\"].includes(sidebarPanel)\n    ? \"Config\"\n    : \"Search\";\n  return (\n    <PrimaryButton\n      className=\"explorer-mobile-view-sidebar\"\n      styles={backToSidebarStyles}\n      onClick={handleClick}\n      iconProps={sidebarIconProps}\n    >\n      View {panelText}\n    </PrimaryButton>\n  );\n};\n\nconst sidebarIconProps = { iconName: \"ChevronLeft\" };\nconst backToSidebarStyles: IButtonStyles = {\n  root: {\n    position: \"absolute\",\n    bottom: 10,\n    left: 10,\n    zIndex: 1,\n    border: \"1px solid darkgray\",\n  },\n};\n\nconst mapViewStyles = { root: { margin: \"auto\", display: \"block\" } };\nconst mapIconProps = { iconName: \"Nav2DMapView\" };\n","import React from \"react\";\n\nimport { formatDatetimeHuman } from \"pages/Explore/utils/time\";\nimport { IStacItem } from \"types/stac\";\n\ninterface ItemTimeProps {\n  item: IStacItem;\n}\n\nexport const ItemTime: React.FC<ItemTimeProps> = ({ item }) => {\n  // Items typically have a datetime, if not, they'll have start_/end_datetime\n  const date = item.properties?.datetime as string;\n  const dateRange = [\n    item.properties?.start_datetime,\n    item.properties?.end_datetime,\n  ].filter(Boolean);\n  const hasRange = dateRange.length > 0;\n\n  if (hasRange) {\n    return (\n      <span title=\"Acquired between\">\n        {formatDatetimeHuman(dateRange[0], false, true)} —{\" \"}\n        {formatDatetimeHuman(dateRange[1], false, true)}\n      </span>\n    );\n  }\n\n  return <span title=\"Acquisition date (UTC)\">{formatDatetimeHuman(date)}</span>;\n};\n","// Remove characters from middle of string to make it a certain length\n//\n// @param {string} input - The string to truncate\n// @param {number} length - The length to truncate to (default 30)\n// @param {string} [chars='...'] - The characters to add in the middle of the truncated string\n// @returns {string} The truncated string\nexport const truncateMiddle = (\n  input: string | number | undefined,\n  length: number = 40,\n  chars: string = \"...\"\n): string => {\n  if (!input) return \"\";\n  const src = input.toString();\n  if (src.length <= length) {\n    return src;\n  }\n\n  const halfLength = Math.floor(length / 2);\n  const front = src.substring(0, halfLength);\n  const back = src.substring(src.length - halfLength);\n\n  return front + chars + back;\n};\n","import { getTheme, IButtonStyles, IconButton, Stack } from \"@fluentui/react\";\nimport atlas from \"azure-maps-control\";\nimport { isNull } from \"lodash-es\";\nimport {\n  setNextItemPreview,\n  setPrevItemPreview,\n  DetailState,\n} from \"pages/Explore/state/detailSlice\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport React from \"react\";\nimport { IStacItem } from \"types/stac\";\nimport { ZOOM_DURATION } from \"../../hooks/useZoomEvents\";\n\ninterface PreviewActionBarProps {\n  item: IStacItem;\n  mapRef: React.MutableRefObject<atlas.Map | null>;\n  previewModeState: DetailState[\"previewMode\"];\n}\n\nexport const PreviewActionBar: React.FC<PreviewActionBarProps> = ({\n  item,\n  mapRef,\n  previewModeState: { currentIndex, items },\n}) => {\n  const dispatch = useExploreDispatch();\n  const { previousZoom, previousCenter } = useExploreSelector(s => s.map);\n\n  const handleSearchExtent = () => {\n    mapRef.current?.setCamera({\n      zoom: previousZoom,\n      center: previousCenter,\n      type: \"ease\",\n      duration: ZOOM_DURATION,\n    });\n  };\n\n  const handleItemExtent = () => {\n    mapRef.current?.setCamera({\n      bounds: item.bbox,\n      type: \"ease\",\n      padding: 50,\n      duration: ZOOM_DURATION,\n    });\n  };\n\n  const handleNext = () => {\n    dispatch(setNextItemPreview());\n  };\n\n  const handlePrev = () => {\n    dispatch(setPrevItemPreview());\n  };\n\n  const hasNext = !isNull(currentIndex) ? currentIndex < items.length - 1 : false;\n  const hasPrev = !isNull(currentIndex) ? currentIndex > 0 : false;\n\n  return (\n    <Stack horizontal tokens={{ childrenGap: 2 }} horizontalAlign=\"center\">\n      <IconButton\n        title=\"View previous search result item\"\n        ariaLabel=\"View previous search result item\"\n        iconProps={{ iconName: \"ChevronLeftMed\" }}\n        styles={smallIconStyles}\n        disabled={!hasPrev}\n        onClick={handlePrev}\n      />\n      <IconButton\n        title=\"Zoom to original search extent\"\n        ariaLabel=\"Zoom to original search extent\"\n        iconProps={{ iconName: \"FitPage\" }}\n        styles={iconStyles}\n        onClick={handleSearchExtent}\n      />\n      <IconButton\n        title=\"Zoom to item extent\"\n        ariaLabel=\"Zoom to item extent\"\n        iconProps={{ iconName: \"ZoomToFit\" }}\n        styles={iconStyles}\n        onClick={handleItemExtent}\n      />\n      <IconButton\n        title=\"View next search result item\"\n        ariaLabel=\"View next search result item\"\n        iconProps={{ iconName: \"ChevronRightMed\" }}\n        styles={smallIconStyles}\n        disabled={!hasNext}\n        onClick={handleNext}\n      />\n    </Stack>\n  );\n};\n\nconst theme = getTheme();\nconst smallIconStyles: IButtonStyles = {\n  icon: {\n    fontSize: 13,\n  },\n  rootDisabled: {\n    backgroundColor: theme.palette.neutralLighterAlt,\n  },\n};\n\nconst iconStyles: IButtonStyles = {\n  icon: {\n    fontSize: 16,\n  },\n};\n","import {\n  getTheme,\n  IButtonStyles,\n  IconButton,\n  IContextualMenuProps,\n} from \"@fluentui/react\";\n\ninterface PreviewMessageCloseButtonProps {\n  onClick: (restoreExtent: boolean) => void;\n}\n\nexport const PreviewMessageCloseButton: React.FC<PreviewMessageCloseButtonProps> = ({\n  onClick,\n}) => {\n  const handleCloseRestore = () => {\n    onClick(true);\n  };\n  const handleClose = () => {\n    onClick(false);\n  };\n\n  const closeMessage = \"Exit preview and keep current map extent\";\n\n  const menuItems: IContextualMenuProps = {\n    items: [\n      {\n        key: \"close-current-bounds\",\n        text: closeMessage,\n        onClick: handleClose,\n      },\n      {\n        key: \"close-original-bounds\",\n        text: \"Exit and return to original search extent\",\n        onClick: handleCloseRestore,\n      },\n    ],\n  };\n\n  return (\n    <IconButton\n      split\n      title={closeMessage}\n      ariaLabel={closeMessage}\n      iconProps={{ iconName: \"Cancel\" }}\n      menuProps={menuItems}\n      styles={closeButtonStyles}\n      onClick={handleClose}\n    />\n  );\n};\n\nconst theme = getTheme();\nconst closeButtonStyles: IButtonStyles = {\n  icon: {\n    fontSize: 12,\n  },\n  root: {\n    color: theme.semanticColors.bodyText,\n  },\n  rootHovered: {\n    color: theme.semanticColors.bodyText,\n  },\n  menuIcon: {},\n  menuIconHovered: {\n    backgroundColor: theme.semanticColors.buttonBackgroundHovered,\n  },\n  splitButtonMenuButton: {\n    color: theme.semanticColors.bodyText,\n    backgroundColor: theme.semanticColors.bodyBackground,\n    border: \"none\",\n    paddingRight: 0,\n  },\n  splitButtonMenuIcon: {\n    fontSize: 8,\n    width: 18,\n  },\n  splitButtonDivider: {\n    backgroundColor: \"#c8c8c8\",\n    width: 1,\n    right: 26,\n    position: \"absolute\",\n    top: 4,\n    bottom: 4,\n  },\n};\n","import {\n  getTheme,\n  Icon,\n  IIconStyles,\n  ISeparatorStyles,\n  IStackStyles,\n  ITextStyles,\n  Separator,\n  Stack,\n  Text,\n  TooltipHost,\n} from \"@fluentui/react\";\nimport atlas from \"azure-maps-control\";\nimport { ItemTime } from \"pages/Explore/components/controls/ItemTime\";\nimport { resetDetail } from \"pages/Explore/state/detailSlice\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { restorePreviousCenterAndZoom } from \"pages/Explore/state/mapSlice\";\nimport React from \"react\";\nimport { MOBILE_WIDTH } from \"utils/constants\";\nimport { MapMessage } from \"../../../controls/MapMessages\";\nimport { truncateMiddle } from \"./helpers\";\nimport { PreviewActionBar } from \"./PreviewActionBar\";\nimport { PreviewMessageCloseButton } from \"./PreviewMessageCloseButton\";\n\ninterface PreviewMessageProps {\n  mapRef: React.MutableRefObject<atlas.Map | null>;\n}\n\nexport const PreviewMessage: React.FC<PreviewMessageProps> = ({ mapRef }) => {\n  const dispatch = useExploreDispatch();\n  const { selectedItem, previewMode } = useExploreSelector(s => s.detail);\n\n  if (!selectedItem || !previewMode.enabled) {\n    return null;\n  }\n\n  const handleClose = (restoreExtent: boolean = false) => {\n    if (restoreExtent) {\n      dispatch(restorePreviousCenterAndZoom());\n    }\n    dispatch(resetDetail());\n  };\n\n  const description =\n    \"Item preview locks your current search and allows you visualize individual results on the map, rather than the default mosaic. Close out of preview mode to continue your search.\";\n  const header = (\n    <Stack\n      horizontal\n      horizontalAlign=\"space-between\"\n      verticalAlign=\"center\"\n      styles={containerStyles}\n    >\n      <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 4 }}>\n        <Text block styles={headerTitleStyles}>\n          Item preview\n        </Text>\n        <TooltipHost content={description}>\n          <Icon iconName=\"info\" styles={tooltipIconStyles} />\n        </TooltipHost>\n      </Stack>\n      <PreviewMessageCloseButton onClick={handleClose} />\n    </Stack>\n  );\n\n  const content = (\n    <Stack tokens={{ childrenGap: 4 }}>\n      <Text block title={`Selected item id: ${selectedItem.id}`}>\n        {truncateMiddle(selectedItem.id)}\n      </Text>\n      <div\n        style={{\n          fontSize: 13,\n          color: theme.palette.neutralSecondary,\n        }}\n      >\n        <ItemTime item={selectedItem} />\n      </div>\n    </Stack>\n  );\n\n  return (\n    <MapMessage>\n      {header}\n      <Separator styles={separatorStyles} />\n      {content}\n      <PreviewActionBar\n        item={selectedItem}\n        mapRef={mapRef}\n        previewModeState={previewMode}\n      />\n    </MapMessage>\n  );\n};\n\nconst theme = getTheme();\n\nconst headerTitleStyles: ITextStyles = {\n  root: {\n    textAlign: \"left\",\n    fontWeight: 500,\n  },\n};\n\nconst containerStyles: IStackStyles = {\n  root: {\n    minWidth: 320,\n    [`@media(max-width: ${MOBILE_WIDTH}px)`]: {\n      maxWidth: 250,\n    },\n  },\n};\n\nconst tooltipIconStyles: IIconStyles = {\n  root: {\n    cursor: \"default\",\n    visibility: \"hidden\",\n  },\n};\n\nconst separatorStyles: Partial<ISeparatorStyles> = {\n  root: {\n    padding: 4,\n  },\n  content: {\n    display: \"block\",\n  },\n};\n","import { useEffect, useState, useRef } from \"react\";\nimport * as atlas from \"azure-maps-control\";\nimport \"azure-maps-control/dist/atlas.min.css\";\n\nimport { useExploreSelector } from \"../../state/hooks\";\nimport {\n  useMosaicLayer,\n  useItemBoundsLayer,\n  useMapEvents,\n  useMapDrawTools,\n  useZoomEvents,\n  useMapControls,\n  useMapZoomToLayer,\n  useMapZoomToExtent,\n  useCollectionBoundsLayer,\n  useUrlState,\n} from \"./hooks\";\nimport { ZoomMessage, ExtentMessage } from \"../controls/MapMessages\";\n\nimport PlaceSearchControl from \"./components/PlaceSearch\";\nimport {\n  IStyleFunctionOrObject,\n  IProgressIndicatorStyleProps,\n  IProgressIndicatorStyles,\n  ProgressIndicator,\n} from \"@fluentui/react\";\nimport MapSettingsControl from \"./components/MapSettingsControl\";\nimport { DEFAULT_MAP_STYLE } from \"pages/Explore/utils/constants\";\nimport LegendControl from \"./components/LegendControl\";\nimport { MobileViewSidebarButton } from \"../MobileViewInMap/ViewInMap.index\";\nimport { addEntityHeader } from \"./helpers\";\nimport { PreviewMessage } from \"./components/ItemPreview/PreviewMessage\";\n\nconst mapContainerId: string = \"viewer-map\";\n\nconst ExploreMap = () => {\n  const mapRef = useRef<atlas.Map | null>(null);\n  const { center, zoom, showSidebar } = useExploreSelector(s => s.map);\n  const [mapReady, setMapReady] = useState<boolean>(false);\n  const mapHandlers = useMapEvents(mapRef);\n  // const { status: sessionStatus } = useSession();\n\n  // Initialize the map\n  useEffect(() => {\n    const onReady = () => {\n      setMapReady(true);\n    };\n\n    if (!mapRef.current) {\n      const map = new atlas.Map(mapContainerId, {\n        view: \"Auto\",\n        center: center,\n        zoom: zoom,\n        language: \"en-US\",\n        showFeedbackLink: false,\n        showLogo: false,\n        style: DEFAULT_MAP_STYLE,\n        renderWorldCopies: true,\n        authOptions: {\n          authType: atlas.AuthenticationType.subscriptionKey,\n          subscriptionKey: process.env.REACT_APP_AZMAPS_KEY,\n        },\n        transformRequest: addEntityHeader,\n      });\n\n      map.events.add(\"ready\", onReady);\n      map.events.add(\"moveend\", mapHandlers.onMapMove);\n      map.events.add(\"styledata\", mapHandlers.onStyleDataLoaded);\n      map.events.add(\"data\", mapHandlers.onDataEvent);\n\n      mapRef.current = map;\n    }\n  }, [\n    center,\n    zoom,\n    mapHandlers.onMapMove,\n    mapHandlers.onStyleDataLoaded,\n    mapHandlers.onDataEvent,\n  ]);\n\n  useEffect(() => {\n    // Azure maps is putting 2 shortcut elements with the same id on the page,\n    // and it's causing an accessibility error.\n    const elNames = [\"#atlas-map-shortcuts\", \"#atlas-map-style\", \"#atlas-map-state\"];\n    elNames.forEach(elName => {\n      const els = document.querySelectorAll(elName);\n      if (els.length === 2) {\n        els[1].remove();\n      }\n    });\n  }, [mapReady]);\n\n  // When logged in, transform requests to include auth header\n  // useEffect(() => {\n  //   if (sessionStatus.isLoggedIn) {\n  //     console.log(\"Activating auth headers for tile requests\");\n  //     mapRef.current?.setServiceOptions({ transformRequest: addAuthHeaders });\n  //   } else {\n  //     mapRef.current?.setServiceOptions({\n  //       transformRequest: () => {\n  //         return {};\n  //       },\n  //     });\n  //   }\n  // }, [addAuthHeaders, sessionStatus]);\n\n  useItemBoundsLayer(mapRef, mapReady);\n  useCollectionBoundsLayer(mapRef, mapReady);\n  useMosaicLayer(mapRef, mapReady);\n  useZoomEvents(mapRef);\n  useMapControls(mapRef, mapReady);\n  useUrlState();\n  useMapDrawTools(mapRef, mapReady);\n\n  const { zoomToLayer, showZoomMsg, nonVisibleLayers } = useMapZoomToLayer();\n  const zoomMsg = (\n    <ZoomMessage onClick={zoomToLayer} layerVisibility={nonVisibleLayers} />\n  );\n\n  const { showExtentMsg, zoomToExtent } = useMapZoomToExtent(mapRef);\n  const extentMsg = (\n    <ExtentMessage onClick={zoomToExtent} layerVisibility={nonVisibleLayers} />\n  );\n\n  const loadingIndicator = (\n    <ProgressIndicator\n      aria-label=\"Map tile loading indicator\"\n      barHeight={1}\n      styles={progressIndicatorStyles}\n    />\n  );\n\n  // Class used to sync state via responsive media queries in css\n  const visibilityClass = !showSidebar ? \"explorer-sidebar-hidden\" : \"\";\n\n  return (\n    <div className={`explorer-map ${visibilityClass}`} style={mapContainerStyle}>\n      {mapHandlers.areTilesLoading && loadingIndicator}\n      {showZoomMsg && zoomMsg}\n      {showExtentMsg && extentMsg}\n      <PreviewMessage mapRef={mapRef} />\n      <PlaceSearchControl mapRef={mapRef} />\n      <MapSettingsControl mapRef={mapRef} />\n      <LegendControl />\n      <MobileViewSidebarButton />\n      <div id={mapContainerId} style={mapElementStyle} />\n    </div>\n  );\n};\n\nexport default ExploreMap;\n\nconst mapContainerStyle: React.CSSProperties = {\n  width: \"100%\",\n  height: \"100%\",\n  position: \"relative\",\n};\n\nconst mapElementStyle = { width: \"100%\", height: \"100%\" };\n\nconst progressIndicatorStyles: IStyleFunctionOrObject<\n  IProgressIndicatorStyleProps,\n  IProgressIndicatorStyles\n> = {\n  root: { position: \"absolute\", width: \"100%\", zIndex: 1 },\n  itemProgress: { padding: 0 },\n};\n","import * as atlas from \"azure-maps-control\";\nimport { useCallback } from \"react\";\nimport intersects from \"@turf/boolean-intersects\";\nimport bboxToPolygon from \"@turf/bbox-polygon\";\n\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { setCamera, setZoom } from \"pages/Explore/state/mapSlice\";\nimport { BBox } from \"geojson\";\nimport { stacCollectionDatasource } from \"pages/Explore/utils/layers\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport { ILayerState, ILayerZoomVisibility } from \"pages/Explore/types\";\n\n/*\n *  Handle zoom toast for layers with min zoom level\n */\nconst useMapZoomToLayer = () => {\n  const dispatch = useExploreDispatch();\n  const {\n    map: { zoom },\n    detail: {\n      display: { showSelectedItemAsLayer },\n    },\n  } = useExploreSelector(s => s);\n  const currentMosaic = useExploreSelector(selectCurrentMosaic);\n  const { currentEditingLayerId, layers: allMosaics } = useExploreSelector(\n    s => s.mosaic\n  );\n  const searchIdLoaded = Boolean(currentMosaic.query.searchId);\n\n  const visibleInZoom = useCallback(\n    (layer: ILayerState) => {\n      return zoom + 0.5 >= layer.layer.minZoom;\n    },\n    [zoom]\n  );\n\n  // Check zoom visibility for the currently edited layer\n  const currentLayerNotVisible =\n    !visibleInZoom(currentMosaic) && searchIdLoaded && !showSelectedItemAsLayer;\n\n  const zoomToLayer = useCallback(() => {\n    dispatch(setZoom(currentMosaic.layer.minZoom));\n  }, [dispatch, currentMosaic.layer.minZoom]);\n\n  // Check zoom visibility for all pinned layers\n  const layersOutOfZoom = Object.entries(allMosaics).filter(\n    ([id, layer]) => id !== currentEditingLayerId && !visibleInZoom(layer)\n  );\n  const nonVisibleLayers: ILayerState[] = layersOutOfZoom.map(([, layer]) => layer);\n  const layers: ILayerZoomVisibility = {\n    current: currentLayerNotVisible ? currentMosaic : null,\n    others: nonVisibleLayers,\n  };\n\n  const showZoomMsg = currentLayerNotVisible || nonVisibleLayers.length > 0;\n  return { showZoomMsg, zoomToLayer, nonVisibleLayers: layers };\n};\n\nconst useMapZoomToExtent = (mapRef: React.MutableRefObject<atlas.Map | null>) => {\n  const dispatch = useExploreDispatch();\n  const mosaic = useExploreSelector(selectCurrentMosaic);\n\n  const viewport = mapRef.current\n    ? bboxToPolygon(mapRef.current?.getCamera().bounds as BBox)?.geometry\n    : null;\n  const collectionGeoms = mosaic.collection?.extent.spatial.bbox.map(box =>\n    bboxToPolygon(box as BBox)\n  );\n\n  const showExtentMsg =\n    !!collectionGeoms?.length &&\n    !!viewport &&\n    !collectionGeoms.some(geom => intersects(geom, viewport));\n\n  const zoomToExtent = () => {\n    const fc = stacCollectionDatasource.toJson();\n    const overallBbox = atlas.data.BoundingBox.fromData(fc);\n    dispatch(setCamera({ bounds: overallBbox }));\n  };\n\n  return { showExtentMsg, zoomToExtent };\n};\n\nexport { useMapZoomToLayer, useMapZoomToExtent };\n","import { IconButton, useTheme } from \"@fluentui/react\";\nimport { useCallback } from \"react\";\nimport { useExploreDispatch, useExploreSelector } from \"../../state/hooks\";\nimport { toggleShowSidebar } from \"../../state/mapSlice\";\nimport { SIDEBAR_WIDTH } from \"../../utils/constants\";\n\nconst MinimizeButton = () => {\n  const dispatch = useExploreDispatch();\n  const showSidebar = useExploreSelector(s => s.map.showSidebar);\n  const theme = useTheme();\n  const bgColor = theme.semanticColors.bodyBackground;\n\n  const toggleSidebar = useCallback(() => {\n    dispatch(toggleShowSidebar());\n  }, [dispatch]);\n\n  const direction = showSidebar ? \"Left\" : \"Right\";\n  const title = showSidebar ? \"Hide\" : \"Show\";\n\n  return (\n    <div\n      className=\"explorer-map-component\"\n      style={{\n        position: \"absolute\",\n        top: 175,\n        left: showSidebar ? SIDEBAR_WIDTH - 1 : 8,\n        zIndex: 1,\n        padding: \"8px 1px\",\n        borderRadius: \"0  4px 4px 0\",\n        backgroundColor: bgColor,\n        transition: \"left .3s\",\n        borderRight: \"1px solid\",\n        borderTop: \"1px solid\",\n        borderBottom: \"1px solid\",\n        borderLeft: 0,\n        borderTopColor: theme.palette.neutralLight,\n        borderBottomColor: theme.palette.neutralLight,\n        borderRightColor: theme.palette.neutralLight,\n      }}\n    >\n      <IconButton\n        onClick={toggleSidebar}\n        iconProps={{ iconName: `Caret${direction}Solid8` }}\n        styles={{\n          root: { width: 20 },\n          rootHovered: { backgroundColor: bgColor },\n          rootFocused: { backgroundColor: bgColor },\n          icon: { fontSize: 12, color: theme.palette.neutralTertiary },\n          iconHovered: {\n            backgroundColor: bgColor,\n            color: theme.semanticColors.bodyText,\n          },\n        }}\n        title={`${title} sidebar`}\n        aria-label={`${title} sidebar`}\n      />\n    </div>\n  );\n};\n\nexport default MinimizeButton;\n","import React, { useCallback, useState } from \"react\";\nimport {\n  getTheme,\n  IButtonStyles,\n  IconButton,\n  IContextualMenuItem,\n  IContextualMenuProps,\n  IImageStyles,\n  Image,\n  ImageFit,\n  IStackItemStyles,\n  Link,\n  StackItem,\n} from \"@fluentui/react\";\nimport { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\nimport { useConst } from \"@fluentui/react-hooks\";\n\nimport { CollectionImageExport } from \"pages/Explore/state/imageSlice\";\nimport { useExploreDispatch } from \"pages/Explore/state/hooks\";\nimport { ImageExportResponse } from \"./types\";\n\nconst ImageViewer = React.lazy(() => import(\"./ImageViewer\"));\n\ninterface Props {\n  imageResponse: ImageExportResponse;\n  collectionId: string;\n  onRemove: ActionCreatorWithPayload<CollectionImageExport, string>;\n}\n\nexport const ImageResult: React.FC<Props> = ({\n  imageResponse,\n  collectionId,\n  onRemove,\n}) => {\n  const dispatch = useExploreDispatch();\n  const [displayedImage, setDisplayedImage] = useState<ImageExportResponse | null>();\n\n  const handleViewerClose = useCallback(() => {\n    setDisplayedImage(null);\n  }, []);\n\n  const handleViewClick = useCallback(() => {\n    setDisplayedImage(imageResponse);\n  }, [imageResponse]);\n\n  const menuProps: IContextualMenuProps = useConst({\n    onItemClick(_, item?) {\n      switch (item?.key) {\n        case \"download\":\n          window.open(imageResponse.url, \"_blank\");\n          break;\n        case \"delete\":\n          dispatch(\n            onRemove({\n              image: imageResponse,\n              collectionId: collectionId,\n            })\n          );\n          break;\n        case \"view\":\n          handleViewClick();\n          break;\n        default:\n      }\n    },\n    shouldFocusOnMount: true,\n    items: menuItems,\n  });\n\n  return (\n    <StackItem styles={rowStyles}>\n      <IconButton\n        menuProps={menuProps}\n        styles={iconButtonStyles}\n        iconProps={iconButtonProps}\n      />\n      <Link aria-label=\"Click to display full size image\" onClick={handleViewClick}>\n        <Image\n          styles={imageStyles}\n          alt=\"layer Image\"\n          src={imageResponse.url}\n          imageFit={ImageFit.contain}\n        />\n      </Link>\n      {displayedImage && (\n        <ImageViewer\n          ImageResponse={displayedImage}\n          collectionId={collectionId}\n          onClose={handleViewerClose}\n        />\n      )}\n    </StackItem>\n  );\n};\n\nconst menuItems: IContextualMenuItem[] = [\n  {\n    key: \"view\",\n    iconProps: { iconName: \"FullScreen\" },\n    text: \"View larger version\",\n    ariaLabel: \"View large image\",\n  },\n  {\n    key: \"download\",\n    iconProps: { iconName: \"Download\" },\n    text: \"Download full size\",\n    ariaLabel: \"Download full size image\",\n  },\n  {\n    key: \"delete\",\n    text: \"Remove\",\n    iconProps: { iconName: \"Delete\" },\n    ariaLabel: \"Remove image\",\n  },\n];\n\nconst theme = getTheme();\nconst rowStyles: IStackItemStyles = {\n  root: {\n    position: \"relative\",\n  },\n};\n\nconst imageStyles: Partial<IImageStyles> = {\n  root: {\n    backgroundColor: \"black\",\n    width: 180,\n    height: 180,\n    borderRadius: \"4px\",\n  },\n  image: {\n    maxWidth: 180,\n    maxHeight: 180,\n  },\n};\n\nconst iconButtonStyles: IButtonStyles = {\n  root: {\n    border: `1px solid ${theme.palette.neutralQuaternary}`,\n    position: \"absolute\",\n    right: 4,\n    top: 4,\n    zIndex: 1,\n    borderRadius: 20,\n    padding: 3,\n    color: theme.semanticColors.bodyText,\n    backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n  },\n  rootFocused: {\n    padding: 3,\n  },\n  menuIcon: { display: \"none\" },\n};\nconst iconButtonProps = { iconName: \"More\" };\n","import {\n  getTheme,\n  IShimmerColors,\n  IStackStyles,\n  IStackTokens,\n  Label,\n  Separator,\n  Shimmer,\n  ShimmerElementType,\n  Stack,\n} from \"@fluentui/react\";\nimport { ActionCreatorWithPayload } from \"@reduxjs/toolkit\";\nimport { CollectionImageExport } from \"pages/Explore/state/imageSlice\";\nimport { ImageResult } from \"./ImageResult\";\nimport { ImageExportResponse } from \"./types\";\n\ninterface Props {\n  collectionId: string;\n  images: ImageExportResponse[];\n  isLoading: boolean;\n  onRemove: ActionCreatorWithPayload<CollectionImageExport, string>;\n}\n\nexport const ImageResults: React.FC<Props> = ({\n  collectionId,\n  images,\n  isLoading,\n  onRemove,\n}) => {\n  const imageShimmer = (\n    <Shimmer\n      styles={shimmerStyles}\n      shimmerColors={shimmerColors}\n      shimmerElements={shimmerElements}\n    />\n  );\n\n  return (\n    <>\n      <Separator />\n      <Label>Images:</Label>\n      <Stack\n        horizontal\n        wrap\n        className=\"custom-overflow\"\n        styles={resultStyles}\n        tokens={resultTokens}\n      >\n        {isLoading && imageShimmer}\n        {images\n          .slice()\n          .reverse()\n          .map(image => {\n            return (\n              <ImageResult\n                key={image.url}\n                collectionId={collectionId}\n                imageResponse={image}\n                onRemove={onRemove}\n              />\n            );\n          })}\n      </Stack>\n    </>\n  );\n};\n\nconst theme = getTheme();\n\nconst resultTokens: IStackTokens = {\n  childrenGap: 10,\n};\n\nconst resultStyles: IStackStyles = {\n  root: {\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n};\n\nconst shimmerStyles = {\n  root: {\n    border: `1px solid ${theme.palette.neutralLighter}`,\n    borderRadius: 4,\n  },\n};\nconst shimmerColors: IShimmerColors = {\n  shimmer: theme.palette.neutralLighterAlt,\n  shimmerWave: theme.palette.neutralQuaternary,\n};\n\nconst shimmerElements = [\n  {\n    type: ShimmerElementType.line,\n    height: 180,\n    width: 180,\n  },\n];\n","import { IMessageBarStyles, MessageBar, MessageBarType } from \"@fluentui/react\";\nimport { AxiosError } from \"axios\";\n\ninterface ImageErrorProps {\n  error: AxiosError<any, any>;\n}\n\nexport const ImageExportError: React.FC<ImageErrorProps> = ({ error }) => {\n  if (!error) return null;\n\n  const { response } = error;\n  const msg = \"Sorry, something went wrong with that request.\";\n  const errorText = response?.status === 400 ? response?.data.error || msg : msg;\n  return (\n    <MessageBar styles={errorBarStyles} messageBarType={MessageBarType.error}>\n      {errorText}\n    </MessageBar>\n  );\n};\n\nconst errorBarStyles: IMessageBarStyles = {\n  root: {\n    marginTop: 10,\n  },\n};\n","import { getTheme, IconButton, Separator, Stack } from \"@fluentui/react\";\n\ninterface ExporterHeaderProps {\n  title: string;\n  subTitle: string;\n  onClose: () => void;\n}\n\nexport const ExporterHeader: React.FC<ExporterHeaderProps> = ({\n  title,\n  subTitle,\n  onClose,\n  children,\n}) => {\n  return (\n    <>\n      <Stack horizontal horizontalAlign=\"space-between\">\n        <h3 style={headerStyles}>{title}</h3>\n        <IconButton\n          title=\"Close\"\n          aria-label=\"Close Image export panel\"\n          styles={buttonStyles}\n          iconProps={iconProps}\n          onClick={onClose}\n        />\n      </Stack>\n      {children}\n      <Separator styles={{ root: { padding: \"0 4px\" } }} />\n      <h4 style={headerStyles}>{subTitle}</h4>\n    </>\n  );\n};\n\nconst theme = getTheme();\n\nconst buttonStyles = {\n  root: { color: theme.semanticColors.bodyText },\n  rootHovered: {\n    color: theme.palette.neutralDark,\n  },\n};\nconst iconProps = { iconName: \"Cancel\" };\nconst headerStyles = { marginBottom: 4 };\n","import { Text } from \"@fluentui/react\";\nimport { IMosaicRenderOption } from \"pages/Explore/types\";\nimport { IStacCollection } from \"types/stac\";\nimport { ExporterHeader } from \"../BaseExporter/ExporterHeader\";\n\ninterface Props {\n  collection: IStacCollection | null;\n  renderOption: IMosaicRenderOption | null;\n  handleClose: () => void;\n}\nexport const AnimationIntro: React.FC<Props> = ({\n  collection,\n  renderOption,\n  handleClose,\n}) => {\n  if (!collection) return null;\n\n  return (\n    <ExporterHeader\n      title=\"Timelapse Animation\"\n      subTitle={`${collection.title || collection.id}, ${renderOption?.name}`}\n      onClose={handleClose}\n    >\n      <Text>Generate an animated image of this dataset over time. </Text>\n      <Text>\n        Keep in mind that many datasets have irregular temporal availability, varied\n        cloud cover, or other changes which might affect the quality of your results.\n        You may need to experiment to get a good result!\n      </Text>\n    </ExporterHeader>\n  );\n};\n","import React from \"react\";\nimport {\n  ContextualMenu,\n  getTheme,\n  IconButton,\n  mergeStyleSets,\n  Stack,\n} from \"@fluentui/react\";\nimport { useBoolean, useId } from \"@fluentui/react-hooks\";\n\ninterface AnimationSettingsProps {\n  showProgressBar: boolean;\n  showBranding: boolean;\n  onSettingsChange: (key: string, value: boolean) => void;\n}\n\nexport const AnimationSettings: React.FC<AnimationSettingsProps> = ({\n  showProgressBar,\n  showBranding,\n  onSettingsChange,\n}) => {\n  const [showMenu, { setFalse: hideMenu, toggle }] = useBoolean(false);\n\n  const buttonId = useId(\"query-dropdown-button\");\n  return (\n    <Stack>\n      <IconButton\n        id={buttonId}\n        className={styles.button}\n        iconProps={{ iconName: \"Settings\" }}\n        title=\"Settings\"\n        onClick={toggle}\n      />\n      <ContextualMenu\n        target={`#${buttonId}`}\n        hidden={!showMenu}\n        onDismiss={hideMenu}\n        items={[\n          {\n            key: \"progress-bar\",\n            text: \"Include progress bar\",\n            canCheck: true,\n            checked: showProgressBar,\n            onClick: e => {\n              e?.preventDefault();\n              onSettingsChange(\"showProgressBar\", !showProgressBar);\n            },\n          },\n          {\n            key: \"branding\",\n            text: \"Include branding\",\n            canCheck: true,\n            checked: showBranding,\n            onClick: e => {\n              e?.preventDefault();\n              onSettingsChange(\"showBranding\", !showBranding);\n            },\n          },\n        ]}\n      />\n    </Stack>\n  );\n};\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  button: {\n    color: theme.semanticColors.bodyText,\n    \"&:hover\": {\n      color: theme.semanticColors.bodyText,\n    },\n  },\n});\n","import { CSSProperties } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Calendar,\n  Callout,\n  DirectionalHint,\n  getTheme,\n  Icon,\n  Label,\n  Stack,\n  TextField,\n  TooltipHost,\n} from \"@fluentui/react\";\nimport { useBoolean, useId } from \"@fluentui/react-hooks\";\n\nimport { IStacCollection } from \"types/stac\";\nimport TemporalExtent from \"components/stac/TemporalExtent\";\nimport { firstInputStyle, stackTokens } from \"./AnimationExporter.index\";\n\ninterface AnimationStartFieldProps {\n  collection: IStacCollection | null;\n  validations: string[];\n  value: string;\n  onChange: (key: string, newValue: string | undefined) => void;\n}\n\nexport const AnimationStartField: React.FC<AnimationStartFieldProps> = ({\n  collection,\n  validations,\n  value,\n  onChange,\n}) => {\n  const id = useId();\n  const [showCalendar, { setFalse: hideCalendar, toggle }] = useBoolean(false);\n  const temporal = collection?.extent?.temporal || null;\n\n  const tooltip = temporal && (\n    <Stack horizontal verticalAlign=\"center\" tokens={stackTokens}>\n      <Label>Start datetime (UTC)</Label>\n      <TooltipHost\n        content={<TemporalExtent extent={temporal} label=\"Valid date range\" />}\n      >\n        <Icon iconName=\"Info\" styles={tooltipIconStyles} />\n      </TooltipHost>\n    </Stack>\n  );\n\n  const dateValue = value ? dayjs(value).toDate() : undefined;\n\n  const handleDateSelect = (date: Date) => {\n    // Parse the value of the existing time and add it to the new date\n    const time = dayjs(value).format(\"HH:mm:ss\");\n    const newValue = dayjs(date).format(`YYYY-MM-DDT${time}Z`);\n    onChange(\"start\", newValue);\n    hideCalendar();\n  };\n\n  const handleDateChange = (\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    newValue: string | undefined\n  ) => onChange(e.currentTarget.name, newValue);\n\n  const field = (\n    <>\n      <div style={containerStyles}>\n        <TextField\n          title=\"Timelapse starting datetime in UTC (YYYY-MM-DDTHH:mm:ssZ)\"\n          name=\"start\"\n          placeholder=\"YYYY-MM-DD\"\n          value={value}\n          onChange={handleDateChange}\n          errorMessage={validations[0]}\n          styles={firstInputStyle}\n          onRenderLabel={() => tooltip}\n        />\n        <button\n          id={id}\n          title=\"Calendar selector\"\n          style={calendarButtonStyle}\n          onClick={toggle}\n        >\n          <Icon iconName=\"Calendar\" />\n        </button>\n      </div>\n      <Callout\n        target={`#${id}`}\n        hidden={!showCalendar}\n        isBeakVisible={false}\n        directionalHint={DirectionalHint.topRightEdge}\n        onDismiss={hideCalendar}\n      >\n        <Calendar\n          showMonthPickerAsOverlay\n          showGoToToday={false}\n          value={dateValue}\n          onSelectDate={handleDateSelect}\n        />\n      </Callout>\n    </>\n  );\n\n  return field;\n};\n\nconst theme = getTheme();\n\nconst calendarButtonStyle: CSSProperties = {\n  cursor: \"pointer\",\n  position: \"absolute\",\n  top: 37,\n  right: 4,\n  background: theme.semanticColors.bodyBackground,\n  border: \"none\",\n};\n\nconst containerStyles: CSSProperties = {\n  position: \"relative\",\n};\n\nconst tooltipIconStyles = {\n  root: {\n    cursor: \"pointer\",\n  },\n};\n","import * as atlas from \"azure-maps-control\";\nimport dayjs, { ManipulateType } from \"dayjs\";\nimport { LayerType } from \"pages/Explore/enums\";\nimport {\n  IAnimationHint,\n  ILayerState,\n  IMosaicRenderOption,\n} from \"pages/Explore/types\";\nimport { DEFAULT_MIN_ZOOM } from \"pages/Explore/utils/constants\";\nimport { IStacCollection } from \"types/stac\";\nimport {\n  AnimationConfig,\n  AnimationFrameSettings,\n  AnimationValidation,\n} from \"./types\";\n\nconst MAX_FRAMES = 24;\n\nexport const validate = (\n  animationConfig: AnimationConfig,\n  collection: IStacCollection | null,\n  layer: ILayerState[\"layer\"] | null,\n  drawnBbox: atlas.data.BoundingBox | null\n) => {\n  const { start, step, unit, frames, duration, zoom } = animationConfig;\n  const validations: AnimationValidation = {\n    start: [],\n    frames: [],\n    duration: [],\n    step: [],\n    map: [],\n    isValid: false,\n  };\n\n  const startDate = dayjs(start);\n\n  const collectionStart = getCollectionStart(collection);\n  const collectionEnd = getCollectionEnd(collection);\n\n  if (!start) {\n    validations.start.push(\"Required.\");\n  }\n\n  if (!startDate.isValid()) {\n    validations.start.push(\"Invalid datetime.\");\n  }\n\n  if (!step) {\n    validations.step.push(\"Required.\");\n  }\n\n  if (!frames) {\n    validations.frames.push(\"Required.\");\n  }\n\n  if (frames > MAX_FRAMES) {\n    validations.frames.push(`Max ${MAX_FRAMES} frames.`);\n  }\n\n  if (!duration) {\n    validations.duration.push(\"Required.\");\n  }\n\n  if (frames < 2) {\n    validations.frames.push(\"Must be > 2.\");\n  }\n\n  if (duration < 10) {\n    validations.duration.push(\"Must be > 10ms.\");\n  }\n\n  if (step < 1) {\n    validations.step.push(\"Must be > 1.\");\n  }\n\n  if (startDate.isBefore(collectionStart)) {\n    validations.start.push(`Must be after ${collectionStart.format(\"YYYY-MM-DD\")}`);\n  }\n\n  if (startDate.add(step * frames, unit as ManipulateType).isAfter(collectionEnd)) {\n    validations.frames.push(\n      `Frames go past dataset end date of ${collectionEnd.format(\"YYYY-MM-DD\")}`\n    );\n  }\n\n  if (zoom < (layer?.minZoom || DEFAULT_MIN_ZOOM)) {\n    validations.map.push(\"Zoom in to see layer.\");\n  }\n\n  if (!drawnBbox) {\n    validations.map.push(\"Please draw an export area on the map.\");\n  }\n\n  validations.isValid =\n    Object.values(validations).reduce(\n      (acc, curr) => acc + (Array.isArray(curr) ? curr.length : 0),\n      0\n    ) === 0;\n\n  return validations;\n};\n\nconst getCollectionStart = (collection: IStacCollection | null) => {\n  if (!collection) {\n    return dayjs();\n  }\n  const temporal = collection.extent.temporal.interval;\n  const collectionStart = temporal.reduce((acc, curr) => {\n    if (dayjs(acc).isBefore(dayjs(curr[0]))) {\n      return acc;\n    }\n    return curr[0];\n  }, temporal[0][0]);\n  return dayjs(collectionStart);\n};\n\nconst getCollectionEnd = (collection: IStacCollection | null) => {\n  if (!collection) {\n    return dayjs();\n  }\n  const temporal = collection.extent.temporal.interval;\n  const collectionEnd = temporal.reduce((acc, curr) => {\n    if (dayjs(acc).isAfter(dayjs(curr[1]))) {\n      return acc;\n    }\n    return curr[1];\n  }, temporal[0][1]);\n\n  return collectionEnd ? dayjs(collectionEnd) : dayjs();\n};\n\nexport const getDefaultSettings = (\n  collection: IStacCollection | null,\n  hint: IAnimationHint | undefined\n) => {\n  const collectionStart = getCollectionStart(collection);\n  const collectionEnd = getCollectionEnd(collection);\n\n  const diff = collectionEnd.diff(collectionStart, \"d\") / 2;\n  const defaultStart = collectionStart\n    .add(diff, \"d\")\n    .utc()\n    .startOf(\"d\")\n    .toISOString();\n  const defaultSettings: AnimationFrameSettings = {\n    start: defaultStart,\n    step: hint?.step || 1,\n    unit: hint?.unit || \"months\",\n    frames: hint?.frameCount || 6,\n    duration: hint?.duration || 400,\n    showBranding: true,\n    showProgressBar: true,\n  };\n\n  return defaultSettings;\n};\n\nexport const isValidCollection = (\n  collection: IStacCollection | null,\n  renderOption: IMosaicRenderOption | null\n) => {\n  if (!collection || !renderOption) {\n    return false;\n  }\n\n  // If the start/end dates of the temporal extent are the same, then the collection is invalid.\n  const temporal = collection.extent.temporal.interval;\n  const isTemporalValid = !temporal\n    .map(([start, end]) => dayjs(start).isSame(dayjs(end)))\n    .every(Boolean);\n\n  const isRenderTypeValid = renderOption.type === LayerType.tile;\n\n  return isTemporalValid && isRenderTypeValid;\n};\n","import {\n  DefaultButton,\n  Dropdown,\n  FontSizes,\n  getTheme,\n  IDropdownOption,\n  IDropdownStyles,\n  IStackStyles,\n  ITextFieldStyles,\n  ITextStyles,\n  PrimaryButton,\n  Stack,\n  StackItem,\n  Text,\n  TextField,\n} from \"@fluentui/react\";\nimport { AxiosError } from \"axios\";\nimport { isEmpty } from \"lodash-es\";\nimport { SidebarPanels } from \"pages/Explore/enums\";\n\nimport {\n  addAnimation,\n  removeAnimation,\n  selectAnimationFrameSettings,\n  selectAnimationsByCollection,\n  updateAnimationSettings,\n} from \"pages/Explore/state/animationSlice\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport {\n  setBboxDrawMode,\n  setDrawnShape,\n  setShowSidebar,\n  setSidebarPanel,\n} from \"pages/Explore/state/mapSlice\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport { makeFilterBody, useCollectionMosaicInfo } from \"pages/Explore/utils/hooks\";\nimport { collectionFilter } from \"pages/Explore/utils/stac\";\nimport { useEffect } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { MOBILE_WIDTH } from \"utils/constants\";\nimport { useAnimationExport } from \"utils/requests\";\nimport { ImageResults } from \"../BaseExporter\";\nimport { ImageExportError } from \"../BaseExporter/ImageExportError\";\nimport { AnimationIntro } from \"./AnimationIntro\";\nimport { AnimationSettings } from \"./AnimationSettings\";\nimport { AnimationStartField } from \"./AnimationStartField\";\nimport { getDefaultSettings, validate } from \"./helpers\";\nimport { AnimationConfig, AnimationMosaicSettings } from \"./types\";\n\nexport const AnimationExporter: React.FC = () => {\n  const dispatch = useExploreDispatch();\n  const { collection, renderOption, query, layer } =\n    useExploreSelector(selectCurrentMosaic);\n  const { zoom, sidebarPanel, drawnShape, isDrawBboxMode } = useExploreSelector(\n    s => s.map\n  );\n  const animations = useExploreSelector(s =>\n    selectAnimationsByCollection(s, collection?.id)\n  );\n  const animationSettings = useExploreSelector(s =>\n    selectAnimationFrameSettings(s, collection?.id)\n  );\n  const { data: mosaicInfo } = useCollectionMosaicInfo(collection?.id);\n  const isMobileView = useMedia(`(max-width: ${MOBILE_WIDTH}px)`);\n\n  const drawnBbox = drawnShape?.bbox || null;\n\n  // Build up the config payload to be used to request an animation\n  // based on the current map/filter state.\n  const collectionFragment = collectionFilter(collection?.id);\n  const cql = makeFilterBody([collectionFragment], query, query.cql);\n  const mosaicConfig: AnimationMosaicSettings = {\n    bbox: drawnBbox,\n    zoom: Math.round(zoom),\n    render_params: renderOption?.options + `&collection=${collection?.id}`,\n    cql,\n  };\n\n  const frameSettings = isEmpty(animationSettings)\n    ? getDefaultSettings(collection, mosaicInfo?.animationHint)\n    : animationSettings;\n  const requestBody: AnimationConfig = { ...mosaicConfig, ...frameSettings };\n\n  const {\n    data: animationResp,\n    isLoading,\n    error,\n    refetch: fetchAnimation,\n    remove: removeAnimationResponse,\n  } = useAnimationExport(requestBody);\n\n  // When an animation response is received, add it to the list of animations\n  // for this collection and reset the payload state used to request it.\n  useEffect(() => {\n    if (\n      animationResp &&\n      collection &&\n      !animations.find(a => a.url === animationResp.url)\n    ) {\n      dispatch(\n        addAnimation({\n          collectionId: collection.id,\n          image: animationResp,\n        })\n      );\n      removeAnimationResponse();\n    }\n  }, [animationResp, animations, collection, dispatch, removeAnimationResponse]);\n\n  const handleExportClick = () => {\n    fetchAnimation({ stale: true });\n  };\n\n  const handleChange = (\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    newValue: string | undefined\n  ) => {\n    const fieldName = e.currentTarget.name;\n    const value = parseInt(newValue || \"0\", 10);\n    handleSettingsChange(fieldName, value);\n  };\n\n  const handleUnitChange = (_: any, option: IDropdownOption | undefined) =>\n    handleSettingsChange(\"unit\", option?.key as string);\n\n  const handleSettingsChange = (\n    key: string,\n    value: string | number | boolean | undefined\n  ) => {\n    collection?.id &&\n      dispatch(\n        updateAnimationSettings({\n          collectionId: collection?.id,\n          animationSettings: {\n            ...frameSettings,\n            [key]: value,\n          },\n        })\n      );\n  };\n\n  const handleClose = () => {\n    dispatch(setSidebarPanel(SidebarPanels.itemSearch));\n    dispatch(setDrawnShape(null));\n    dispatch(setBboxDrawMode(false));\n    removeAnimationResponse();\n  };\n\n  const validation = validate(requestBody, collection, layer, drawnBbox);\n  const exportEnabled = !isLoading && validation.isValid;\n  const drawExportEnabled = !isDrawBboxMode;\n\n  const drawButtonText = drawnBbox ? \"Re-draw export area\" : \"Draw export area\";\n  const drawButton = (\n    <StackItem>\n      <Text block>Start by selecting the area you want to capture on the map.</Text>\n      <DefaultButton\n        styles={buttonStyles}\n        text={drawButtonText}\n        iconProps={{ iconName: \"SingleColumnEdit\" }}\n        onClick={() => {\n          dispatch(setBboxDrawMode(true));\n          isMobileView && dispatch(setShowSidebar(false));\n          removeAnimationResponse();\n        }}\n        disabled={!drawExportEnabled}\n      />\n    </StackItem>\n  );\n\n  const panel = (\n    <Stack styles={containerStyles} tokens={panelTokens}>\n      <AnimationIntro\n        collection={collection}\n        renderOption={renderOption}\n        handleClose={handleClose}\n      />\n      {drawButton}\n      <Stack\n        horizontal\n        horizontalAlign=\"start\"\n        tokens={stackTokens}\n        verticalAlign={\"start\"}\n      >\n        <AnimationStartField\n          collection={collection}\n          value={frameSettings.start}\n          validations={validation.start}\n          onChange={handleSettingsChange}\n        />\n        <TextField\n          type=\"number\"\n          name=\"step\"\n          label={\"Increment\"}\n          min={1}\n          step={1}\n          defaultValue={frameSettings.step.toString()}\n          onChange={handleChange}\n          styles={inputStyles}\n          errorMessage={validation.step[0]}\n        />\n        <Dropdown\n          label=\"Unit\"\n          options={units}\n          defaultSelectedKey={frameSettings.unit}\n          onChange={handleUnitChange}\n          styles={unitStyles}\n        />\n      </Stack>\n      <Stack horizontal horizontalAlign=\"start\" tokens={stackTokens}>\n        <TextField\n          type=\"number\"\n          label=\"No. of frames\"\n          name=\"frames\"\n          min={2}\n          max={48}\n          step={1}\n          defaultValue={frameSettings.frames.toString()}\n          onChange={handleChange}\n          styles={firstInputStyle}\n          errorMessage={validation.frames[0]}\n        />\n        <TextField\n          type=\"number\"\n          label=\"Frame duration (ms)\"\n          name=\"duration\"\n          min={1}\n          step={1}\n          defaultValue={frameSettings.duration.toString()}\n          styles={inputStyles}\n          onChange={handleChange}\n          errorMessage={validation.duration[0]}\n        />\n      </Stack>\n      <StackItem shrink={false}>\n        <Stack\n          horizontal\n          horizontalAlign=\"start\"\n          verticalAlign=\"center\"\n          tokens={stackTokens}\n          styles={buttonStyles}\n        >\n          <PrimaryButton disabled={!exportEnabled} onClick={handleExportClick}>\n            Generate animation\n          </PrimaryButton>\n          <AnimationSettings\n            showProgressBar={frameSettings.showProgressBar}\n            showBranding={frameSettings.showBranding}\n            onSettingsChange={handleSettingsChange}\n          />\n        </Stack>\n\n        {Boolean(validation.map.length) && (\n          <Text block styles={errorTextStyles}>\n            * {validation.map[0]}\n          </Text>\n        )}\n        <ImageExportError error={error as AxiosError<any, any>} />\n      </StackItem>\n\n      {(animations.length || isLoading) && collection && (\n        <ImageResults\n          collectionId={collection.id}\n          images={animations}\n          isLoading={isLoading}\n          onRemove={removeAnimation}\n        />\n      )}\n    </Stack>\n  );\n\n  return sidebarPanel === SidebarPanels.animation ? panel : null;\n};\n\nconst theme = getTheme();\nexport const stackTokens = { childrenGap: 6 };\nconst panelTokens = { childrenGap: 10 };\n\nconst units: IDropdownOption[] = [\n  { key: \"mins\", text: \"Minutes\" },\n  { key: \"hours\", text: \"Hours\" },\n  { key: \"days\", text: \"Days\" },\n  { key: \"weeks\", text: \"Weeks\" },\n  { key: \"months\", text: \"Months\" },\n  { key: \"years\", text: \"Years\" },\n];\n\nconst containerStyles: Partial<IStackStyles> = {\n  root: {\n    height: \"100%\",\n    overflowY: \"auto\",\n    overflowX: \"clip\",\n    padding: 10,\n  },\n};\n\nexport const firstInputStyle: Partial<ITextFieldStyles> = {\n  root: {\n    width: 172,\n  },\n};\n\nconst inputStyles: Partial<ITextFieldStyles> = {\n  root: {\n    width: 136,\n  },\n};\n\nconst unitStyles: Partial<IDropdownStyles> = {\n  root: {\n    width: 90,\n  },\n};\n\nconst buttonStyles: Partial<IStackStyles> = {\n  root: {\n    marginTop: 10,\n  },\n};\n\nconst errorTextStyles: Partial<ITextStyles> = {\n  root: {\n    color: theme.semanticColors.errorText,\n    fontSize: FontSizes.small,\n  },\n};\n","import { AnimationExporter } from \"./AnimationExporter.index\";\n\nexport default AnimationExporter;\n","import {\n  Image,\n  ImageFit,\n  ImageLoadState,\n  Shimmer,\n  ShimmerElementType,\n  useTheme,\n} from \"@fluentui/react\";\nimport { useCallback } from \"react\";\nimport { useBoolean } from \"react-use\";\nimport { IStacItem } from \"types/stac\";\nimport { useItemPreviewUrl } from \"utils\";\nimport { useExploreSelector } from \"../state/hooks\";\nimport { selectCurrentMosaic } from \"../state/mosaicSlice\";\nimport collections from \"config/datasets.yml\";\n\ninterface ItemPreviewProps {\n  item: IStacItem;\n  size?: number;\n  border?: \"top\" | \"side\";\n}\n\nconst ItemPreview = ({ item, size = 100, border = \"side\" }: ItemPreviewProps) => {\n  const theme = useTheme();\n  const [loading, setLoading] = useBoolean(true);\n  const { renderOption } = useExploreSelector(selectCurrentMosaic);\n\n  const handleStateChange = useCallback(\n    (state: ImageLoadState) => {\n      setLoading(state === ImageLoadState.notLoaded);\n    },\n    [setLoading]\n  );\n\n  const previewAssetUrl = useItemPreviewUrl(item, renderOption, size);\n\n  // Check that the item assets have an asset with a rel of preview\n  const hasPreviewAsset = Object.values(item.assets).some(asset =>\n    asset.roles?.includes(\"overview\")\n  );\n\n  const previewUrl = hasPreviewAsset\n    ? previewAssetUrl\n    : collections[item.collection]?.defaultPreviewImage;\n\n  if (!previewUrl) return null;\n  if (!renderOption) return null;\n\n  return (\n    <>\n      {loading && (\n        <Shimmer\n          shimmerColors={{\n            background: theme.palette.neutralLight,\n            shimmer: theme.palette.white,\n            shimmerWave: theme.palette.neutralLighter,\n          }}\n          shimmerElements={[\n            { type: ShimmerElementType.line, height: size, width: size },\n          ]}\n        />\n      )}\n      <Image\n        src={previewUrl}\n        alt={`Rendered thumbnail for item: ${item.id}`}\n        imageFit={ImageFit.contain}\n        onLoadingStateChange={handleStateChange}\n        styles={{\n          root: {\n            background: theme.palette.black,\n            display: loading ? \"none\" : \"block\",\n            maxWidth: size,\n            maxHeight: size,\n            height: size,\n          },\n        }}\n        data-cy=\"preview-thumbnail\"\n      />\n    </>\n  );\n};\n\nexport default ItemPreview;\n","import { FontIcon, Stack } from \"@fluentui/react\";\nimport { mergeStyles } from \"@fluentui/react/lib/Styling\";\n\ninterface IconValueProps {\n  iconName: string;\n  title: string;\n  value: string;\n  iconSize?: number;\n}\n\nconst IconValue = ({ iconName, title, value, iconSize = 20 }: IconValueProps) => {\n  const iconClass = mergeStyles({\n    fontSize: iconSize,\n    height: 20,\n    width: 20,\n  });\n\n  return (\n    <Stack horizontal tokens={{ childrenGap: 8 }} styles={containerStyles}>\n      <span>{value} </span>\n      <FontIcon\n        title={title}\n        aria-label={title}\n        iconName={iconName}\n        className={iconClass}\n      />\n    </Stack>\n  );\n};\n\nexport default IconValue;\n\nconst containerStyles = {\n  root: {\n    fontSize: \"inherit\",\n  },\n};\n","import { getTheme, Stack, StackItem } from \"@fluentui/react\";\nimport { isNumber } from \"lodash-es\";\n\nimport { IStacItem } from \"types/stac\";\nimport IconValue from \"./IconValue\";\nimport { ItemTime } from \"./ItemTime\";\n\ninterface PriorityAttributesProps {\n  item: IStacItem;\n}\n\n// Show high-priority attributes if they exist\nconst PriorityAttributes = ({ item }: PriorityAttributesProps) => {\n  const cloud = item.properties?.[\"eo:cloud_cover\"];\n\n  return (\n    <Stack\n      horizontal\n      horizontalAlign={\"space-between\"}\n      tokens={{ childrenGap: 5 }}\n      styles={containerStyles}\n    >\n      <ItemTime item={item} />\n      <StackItem styles={cloudContainerStyles}>\n        {isNumber(cloud) && (\n          <IconValue\n            iconName=\"Cloud\"\n            value={`${cloud.toFixed(1)}%`}\n            title=\"Cloud Cover %\"\n          />\n        )}\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default PriorityAttributes;\n\nconst theme = getTheme();\nconst containerStyles = {\n  root: {\n    color: theme.palette.neutralSecondary,\n  },\n};\n\nconst cloudContainerStyles = {\n  root: {\n    paddingRight: 8,\n    fontSize: \"inherit\",\n  },\n};\n","import { mergeStyleSets, getTheme, FontSizes } from \"@fluentui/react\";\n\nconst theme = getTheme();\n\nexport const headerButtonStyle = mergeStyleSets({\n  root: {\n    float: \"right\",\n    top: -32,\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginLeft: 10,\n    backgroundColor: theme.semanticColors.bodyBackground,\n    border: \"1px solid\",\n    borderColor: theme.palette.themePrimary,\n  },\n  icon: {\n    fontSize: FontSizes.size24,\n  },\n});\n\nexport const checkedHeaderButtonStyle = mergeStyleSets({\n  ...headerButtonStyle,\n  iconChecked: {\n    color: theme.semanticColors.bodyBackground,\n  },\n  rootChecked: {\n    backgroundColor: theme.palette.accent,\n    borderColor: theme.palette.neutralLight,\n  },\n  rootCheckedHovered: {\n    backgroundColor: theme.palette.themeSecondary,\n  },\n});\n","import { IconButton, TooltipHost } from \"@fluentui/react\";\nimport { useId, useConst, useBoolean } from \"@fluentui/react-hooks\";\n\nimport SnippetCopyPanel from \"../ExploreInHub/SnippetCopyPanel\";\nimport { headerButtonStyle } from \"./styles\";\n\nconst ItemSnippetButton = () => {\n  const tooltipId = useId(\"tooltip\");\n  const buttonId = useId(\"targetButton\");\n  const [isCalloutVisible, { toggle }] = useBoolean(false);\n\n  const label = \"Show a code snippet to access this item's data assets\";\n\n  const calloutProps = useConst({\n    gapSpace: 0,\n    target: `#${buttonId}`,\n  });\n\n  return (\n    <>\n      <TooltipHost content={label} calloutProps={calloutProps}>\n        <IconButton\n          id={buttonId}\n          onClick={toggle}\n          iconProps={{ iconName: \"Code\" }}\n          ariaLabel={label}\n          aria-describedby={tooltipId}\n          styles={headerButtonStyle}\n          data-cy=\"item-snippet-button\"\n        />\n      </TooltipHost>\n      <SnippetCopyPanel\n        snippetType=\"item\"\n        buttonId={buttonId}\n        visible={isCalloutVisible}\n        onDismiss={toggle}\n      />\n    </>\n  );\n};\n\nexport default ItemSnippetButton;\n","import { IconButton, TooltipHost } from \"@fluentui/react\";\nimport { useId, useConst } from \"@fluentui/react-hooks\";\nimport { setShowItemAsDetailLayer } from \"pages/Explore/state/detailSlice\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { useCallback } from \"react\";\nimport { checkedHeaderButtonStyle } from \"./styles\";\n\nconst MapButton = () => {\n  const dispatch = useExploreDispatch();\n  const {\n    previewMode,\n    display: { showSelectedItemAsLayer: showItemAsLayer },\n  } = useExploreSelector(s => s.detail);\n\n  const tooltipId = useId(\"tooltip\");\n  const buttonId = useId(\"targetButton\");\n  const label = showItemAsLayer\n    ? \"Remove this item from the map\"\n    : \"View this item on the map\";\n\n  const calloutProps = useConst({\n    gapSpace: 0,\n    target: `#${buttonId}`,\n  });\n\n  const handleClick = useCallback(() => {\n    dispatch(setShowItemAsDetailLayer(!showItemAsLayer));\n  }, [dispatch, showItemAsLayer]);\n\n  return (\n    <TooltipHost content={label} calloutProps={calloutProps}>\n      <IconButton\n        id={buttonId}\n        onClick={handleClick}\n        checked={showItemAsLayer}\n        disabled={previewMode.enabled}\n        iconProps={iconProps}\n        ariaLabel={label}\n        aria-describedby={tooltipId}\n        styles={checkedHeaderButtonStyle}\n        data-cy=\"item-map-button\"\n      />\n    </TooltipHost>\n  );\n};\n\nexport default MapButton;\n\nconst iconProps = { iconName: \"Nav2DMapView\" };\n","import { FontWeights, Text, useTheme } from \"@fluentui/react\";\nimport { IStacItem } from \"types/stac\";\nimport PriorityAttributes from \"../controls/PriorityAttributes\";\nimport ItemSnippetButton from \"./ItemSnippetButton\";\nimport MapButton from \"./MapButton\";\n\ninterface HeaderCardProps {\n  collectionName: string | undefined;\n  item: IStacItem;\n}\n\nconst HeaderCard = ({ collectionName, item }: HeaderCardProps) => {\n  const theme = useTheme();\n\n  return (\n    <div\n      style={{\n        padding: 15,\n        borderTop: \"1px solid\",\n        borderBottom: \"1px solid\",\n        borderTopColor: theme.palette.neutralLight,\n        borderBottomColor: theme.palette.neutralLight,\n      }}\n    >\n      <MapButton />\n      <ItemSnippetButton />\n      <Text\n        block\n        variant={\"medium\"}\n        styles={{ root: { fontWeight: FontWeights.semibold } }}\n      >\n        {collectionName}\n      </Text>\n      <Text\n        block\n        variant={\"large\"}\n        styles={{ root: { fontWeight: FontWeights.bold, overflowWrap: \"anywhere\" } }}\n      >\n        {item.id}\n      </Text>\n      <div style={{ paddingTop: 3 }}>\n        <PriorityAttributes item={item} />\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderCard;\n","import { FontWeights, Text, useTheme } from \"@fluentui/react\";\n\ninterface DetailListItemProps {\n  label: string | undefined | React.ReactNode;\n  value: string | undefined | React.ReactNode;\n}\n\nconst DetailListItem = ({ label, value }: DetailListItemProps) => {\n  const theme = useTheme();\n  return (\n    <div\n      style={{\n        padding: 8,\n        borderTop: \"1px solid\",\n        borderTopColor: theme.palette.neutralLight,\n      }}\n    >\n      <Text block styles={{ root: { fontWeight: FontWeights.semibold } }}>\n        {label}\n      </Text>\n      <Text block styles={{ root: { marginLeft: 4, overflowWrap: \"anywhere\" } }}>\n        {value}\n      </Text>\n    </div>\n  );\n};\n\nexport default DetailListItem;\n","import NewTabLink from \"components/controls/NewTabLink\";\nimport { IStacItem } from \"types/stac\";\nimport DetailListItem from \"./DetailListItem\";\n\ninterface LinkListItemsProps {\n  item: IStacItem;\n}\n\nconst LinkListItems = ({ item }: LinkListItemsProps) => {\n  const selfLink = item.links?.find(link => link.rel === \"self\");\n  const parentLink = item.links?.find(link => link.rel === \"parent\");\n\n  const selfLinkItem = selfLink ? (\n    <DetailListItem\n      key=\"link-self\"\n      label=\"STAC Item\"\n      value={<NewTabLink href={selfLink.href}>{item.id}</NewTabLink>}\n    />\n  ) : null;\n  const parentLinkItem = parentLink ? (\n    <DetailListItem\n      key=\"link-parent\"\n      label=\"STAC Collection\"\n      value={<NewTabLink href={parentLink.href}>{item.collection}</NewTabLink>}\n    />\n  ) : null;\n  const links = [selfLinkItem, parentLinkItem].filter(Boolean);\n\n  return <>{links}</>;\n};\n\nexport default LinkListItems;\n","import { IStacItem } from \"types/stac\";\nimport { stacFormatter } from \"utils/stac\";\nimport DetailListItem from \"./DetailListItem\";\nimport LinkListItems from \"./LinkListItems\";\n\ninterface MetadataListProps {\n  item: IStacItem;\n}\n\nconst MetadataList = ({ item }: MetadataListProps) => {\n  return (\n    <>\n      {item.properties &&\n        Object.entries(item.properties).map(([key, val]) => {\n          return (\n            <DetailListItem\n              key={key}\n              label={stacFormatter.label(key)}\n              value={stacFormatter.format(val, key, item)}\n            />\n          );\n        })}\n      <LinkListItems item={item} key=\"detail-link-list\" />\n    </>\n  );\n};\n\nexport default MetadataList;\n","import {\n  MessageBar,\n  PivotItem,\n  Text,\n  getTheme,\n  Stack,\n  StackItem,\n} from \"@fluentui/react\";\nimport NewTabLink from \"components/controls/NewTabLink\";\nimport { IStacItem } from \"types/stac\";\nimport { mediaTypeOverride } from \"utils/stac\";\nimport DetailListItem from \"./DetailListItem\";\n\ninterface AssetListProps {\n  item: IStacItem;\n}\n\nconst AssetList = ({ item }: AssetListProps) => {\n  const theme = getTheme();\n  const assetItems = Object.entries(item.assets).map(([key, asset]) => {\n    const role = asset?.roles?.[0];\n    const type = mediaTypeOverride(asset.type);\n\n    return (\n      <DetailListItem\n        key={key}\n        label={asset.title}\n        value={\n          <Stack tokens={{ childrenGap: 3 }}>\n            <StackItem>\n              <Text styles={{ root: { paddingRight: 4 } }}>{type}</Text>\n              {role && (\n                <Text\n                  styles={{\n                    root: {\n                      backgroundColor: theme.palette.neutralLighter,\n                      padding: \"2px 4px\",\n                      borderRadius: theme.effects.roundedCorner6,\n                    },\n                  }}\n                >\n                  <code>{role}</code>\n                </Text>\n              )}\n            </StackItem>\n            <Text block style={{ fontStyle: \"italic\" }}>\n              {asset.description}\n            </Text>\n            <StackItem>\n              <Text\n                styles={{\n                  root: { paddingRight: 4 },\n                }}\n              >\n                STAC Key:\n              </Text>\n              <code>{key}</code>\n            </StackItem>\n          </Stack>\n        }\n      />\n    );\n  });\n\n  return (\n    <PivotItem headerText=\"Assets\">\n      <MessageBar styles={{ root: { margin: \"10px 0\" } }}>\n        These file assets are accessible via the\n        <NewTabLink href=\"/docs/quickstarts/reading-stac/\">\n          Planetary Computer API\n        </NewTabLink>\n      </MessageBar>\n      {item.assets && assetItems}\n    </PivotItem>\n  );\n};\n\nexport default AssetList;\n","import { ActionButton, FontSizes, useTheme } from \"@fluentui/react\";\nimport { clearDetailView } from \"pages/Explore/state/detailSlice\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { restorePreviousCenterAndZoom } from \"pages/Explore/state/mapSlice\";\nimport { useCallback } from \"react\";\n\nconst BackToListButton = () => {\n  const theme = useTheme();\n  const dispatch = useExploreDispatch();\n  const { previewMode } = useExploreSelector(s => s.detail);\n\n  const label = \"Return to results list\";\n\n  const handleClick = useCallback(() => {\n    dispatch(clearDetailView());\n\n    if (!previewMode.enabled) {\n      dispatch(restorePreviousCenterAndZoom());\n    }\n  }, [dispatch, previewMode.enabled]);\n\n  return (\n    <ActionButton\n      onClick={handleClick}\n      iconProps={{ iconName: \"Back\" }}\n      ariaLabel={label}\n      styles={{\n        icon: {\n          fontSize: FontSizes.size16,\n          color: theme.palette.themeDarkAlt,\n        },\n        root: {\n          position: \"absolute\",\n          zIndex: 1,\n          height: 40,\n          margin: 8,\n          backgroundColor: theme.semanticColors.bodyBackground,\n          boxShadow: theme.effects.elevation4,\n        },\n      }}\n      data-cy=\"back-to-list\"\n    >\n      Back to results\n    </ActionButton>\n  );\n};\n\nexport default BackToListButton;\n","import { CSSProperties } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport {\n  getTheme,\n  IStackItemStyles,\n  Pivot,\n  PivotItem,\n  StackItem,\n} from \"@fluentui/react\";\n\nimport ItemPreview from \"../ItemPreview\";\nimport { useExploreSelector } from \"../../state/hooks\";\nimport HeaderCard from \"./HeaderCard\";\nimport MetadataList from \"./MetadataList\";\nimport AssetList from \"./AssetList\";\nimport BackToListButton from \"./BackToListButton\";\nimport ErrorFallback, { handleErrorBoundaryError } from \"components/ErrorFallback\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\n\nconst ItemDetailPanel = () => {\n  const item = useExploreSelector(s => s.detail.selectedItem);\n  const { collection } = useExploreSelector(selectCurrentMosaic);\n  const title = collection?.title;\n\n  const content = item ? (\n    <div style={itemDetailStylesInner} data-cy=\"detail-dialog\">\n      <BackToListButton />\n      <div style={previewStyles}>\n        <ItemPreview item={item} size={400} border=\"top\" />\n      </div>\n      <HeaderCard collectionName={title} item={item} />\n\n      <Pivot styles={{ link: { width: \"50%\" } }}>\n        <PivotItem headerText=\"Metadata\">\n          <MetadataList item={item} />\n        </PivotItem>\n        <PivotItem headerText=\"Assets\">\n          <AssetList item={item} />\n        </PivotItem>\n      </Pivot>\n    </div>\n  ) : null;\n\n  return (\n    <StackItem\n      className=\"custom-overflow\"\n      styles={itemDetailStylesOuter}\n      data-cy=\"detail-dialog-list\"\n    >\n      <ErrorBoundary\n        FallbackComponent={ErrorFallback}\n        onError={handleErrorBoundaryError}\n      >\n        {content}\n      </ErrorBoundary>\n    </StackItem>\n  );\n};\n\nexport default ItemDetailPanel;\n\nconst theme = getTheme();\nconst itemDetailStylesOuter: Partial<IStackItemStyles> = {\n  root: {\n    height: \"100%\",\n    overflowY: \"auto\",\n    overflowX: \"clip\",\n  },\n};\n\nconst itemDetailStylesInner: CSSProperties = {\n  border: \"1px solid\",\n  borderColor: theme.palette.neutralLight,\n  borderRadius: 4,\n  marginRight: 3,\n};\n\nconst previewStyles: CSSProperties = {\n  minWidth: 400,\n  minHeight: 400,\n};\n","import { getTheme, Icon, IIconStyles, ILinkStyles, Link } from \"@fluentui/react\";\nimport React, { CSSProperties } from \"react\";\nimport { IStacItem } from \"types/stac\";\nimport { resetDetail } from \"../state/detailSlice\";\nimport { useExploreDispatch, useExploreSelector } from \"../state/hooks\";\nimport ItemPreview from \"./ItemPreview\";\n\ninterface ItemPreviewButtonProps {\n  item: IStacItem;\n  onItemPreview: () => void;\n}\n\nexport const ITEM_PREVIEW_BUTTON_CLASSNAME = \"explore-item-preview-button\";\n\nconst ItemPreviewButton: React.FC<ItemPreviewButtonProps> = ({\n  item,\n  onItemPreview,\n}) => {\n  const dispatch = useExploreDispatch();\n  const { selectedItem } = useExploreSelector(s => s.detail);\n  const isSelected = selectedItem?.id === item.id;\n\n  const handlePreviewClick = () => {\n    if (isSelected) {\n      dispatch(resetDetail());\n    } else {\n      onItemPreview();\n    }\n  };\n\n  const icon = isSelected ? \"Cancel\" : \"Nav2DMapView\";\n  const tooltip = isSelected\n    ? \"Close preview mode and return to search\"\n    : \"Lock search and preview this item on the map\";\n\n  return (\n    <div style={wrapperStyle}>\n      <div style={{ position: \"absolute\" }}>\n        <ItemPreview item={item} key={item.id} />\n      </div>\n      <Link\n        title={tooltip}\n        className={\n          ITEM_PREVIEW_BUTTON_CLASSNAME + \" \" + (isSelected ? \"selected\" : \"\")\n        }\n        onClick={handlePreviewClick}\n        styles={buttonStyles}\n      >\n        <Icon iconName={icon} styles={iconStyles} />\n      </Link>\n    </div>\n  );\n};\nexport default ItemPreviewButton;\n\nconst theme = getTheme();\nconst wrapperStyle: CSSProperties = {\n  position: \"relative\",\n  minWidth: 100,\n  minHeight: 100,\n  borderRight: theme.palette.neutralLighter,\n  borderRightWidth: 1,\n  borderRightStyle: \"solid\",\n  backgroundColor: theme.palette.black,\n  borderRadius: \"0\",\n};\n\nconst iconStyles: IIconStyles = {\n  root: {\n    color: \"white\",\n    marginTop: 4,\n    marginLeft: 7,\n  },\n};\n\nconst buttonStyles: ILinkStyles = {\n  root: {\n    opacity: 0,\n    transition: \"opacity 0.25s linear\",\n    borderColor: \"rgba(255, 255, 255, 0.5)\",\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n    position: \"absolute\",\n    left: \"calc(50% - 15px)\",\n    top: \"calc(50% - 15px)\",\n    borderRadius: \"50%\",\n    height: 30,\n    width: 30,\n    \"&:focus\": {\n      opacity: \"1 !important\",\n    },\n    \"&:hover\": {\n      opacity: \"1 !important\",\n    },\n    \"&.selected\": {\n      opacity: \"0.8 \",\n    },\n  },\n};\n","import {\n  getTheme,\n  ILinkStyleProps,\n  ILinkStyles,\n  IStackStyles,\n  IStyle,\n  IStyleFunctionOrObject,\n  Link,\n  Stack,\n  Text,\n} from \"@fluentui/react\";\nimport { CSSProperties, useCallback } from \"react\";\nimport { IStacItem } from \"types/stac\";\nimport { setItemDetail } from \"../state/detailSlice\";\nimport { useExploreDispatch, useExploreSelector } from \"../state/hooks\";\nimport { clearBoundaryShape, setBoundaryShape } from \"../state/mapSlice\";\nimport PriorityAttributes from \"./controls/PriorityAttributes\";\nimport ItemPreviewButton from \"./ItemPreviewButton\";\n\ntype ItemResultProps = {\n  item: IStacItem;\n  index: number;\n  onItemPreview: (index: number) => void;\n};\n\nconst ItemResult = ({ item, index, onItemPreview }: ItemResultProps) => {\n  const dispatch = useExploreDispatch();\n  const { selectedItem, previewMode } = useExploreSelector(s => s.detail);\n\n  const showBounds = useCallback(() => {\n    dispatch(setBoundaryShape(item.geometry));\n  }, [dispatch, item.geometry]);\n\n  const removeBounds = useCallback(() => {\n    dispatch(clearBoundaryShape());\n  }, [dispatch]);\n\n  const handleSelectItem = useCallback(() => {\n    dispatch(setItemDetail(item));\n  }, [dispatch, item]);\n\n  const handleItemPreviewClick = useCallback(() => {\n    onItemPreview(index);\n  }, [index, onItemPreview]);\n\n  const selected = selectedItem?.id === item.id && previewMode.enabled;\n  const activeContainerStyle = selected ? selectedContainerStyles : containerStyles;\n\n  const label = item.properties?.title || item.id;\n\n  return (\n    <Stack\n      horizontal\n      styles={activeContainerStyle}\n      onMouseEnter={showBounds}\n      onMouseLeave={removeBounds}\n    >\n      <ItemPreviewButton item={item} onItemPreview={handleItemPreviewClick} />\n      <Link onClick={handleSelectItem} styles={linkStyle} data-cy=\"item-result\">\n        <Stack verticalAlign={\"space-evenly\"} style={detailsContainerStyle}>\n          <Text styles={idStyles}>{label}</Text>\n          <div style={attributeStyle}>\n            <PriorityAttributes item={item} />\n          </div>\n        </Stack>\n      </Link>\n    </Stack>\n  );\n};\n\nexport default ItemResult;\n\nconst theme = getTheme();\n\nconst hoverStyle: IStyle = {\n  background: theme.palette.themeLighterAlt,\n  transition: \"background 0.25s linear\",\n  boxShadow: theme.effects.elevation8,\n  color: theme.palette.black,\n  textDecoration: \"none\",\n};\n\nconst activeStyle: IStyle = {\n  textDecoration: \"none\",\n  color: theme.palette.black,\n};\n\nconst linkStyle: IStyleFunctionOrObject<ILinkStyleProps, ILinkStyles> = {\n  root: {\n    width: \"100%\",\n    paddingLeft: 10,\n    \":focus\": activeStyle,\n    \":active\": activeStyle,\n    \":hover\": activeStyle,\n    \":active:hover\": activeStyle,\n  },\n};\n\nconst idStyles = {\n  root: {\n    fontWeight: \"600\",\n    overflowWrap: \"anywhere\",\n  },\n};\n\nconst attributeStyle: CSSProperties = {\n  fontSize: 13,\n};\n\nconst rootContainerStyle: IStyle = {\n  borderStyle: \"solid\",\n  borderRadius: 2,\n  overflow: \"hidden\",\n  color: theme.palette.black,\n  backgroundColor: theme.semanticColors.bodyBackground,\n  marginBottom: 6,\n  padding: 0,\n  width: \"99%\",\n  \":hover\": hoverStyle,\n  \":active:hover\": activeStyle,\n  \"&:hover .explore-item-preview-button\": {\n    opacity: 0.8,\n  },\n};\n\nconst containerStyles: IStackStyles = {\n  root: {\n    borderWidth: 1,\n    borderColor: theme.palette.neutralQuaternary,\n    ...rootContainerStyle,\n  },\n};\n\nconst selectedContainerStyles: IStackStyles = {\n  root: {\n    borderWidth: 2,\n    borderColor: theme.palette.themePrimary,\n    background: `${theme.palette.neutralLighter} !important`,\n    ...rootContainerStyle,\n  },\n};\n\nconst detailsContainerStyle = {\n  height: \"100%\",\n  width: \"100%\",\n  paddingRight: 10,\n};\n","import { IconButton } from \"@fluentui/react\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport {\n  pinCurrentMosaic,\n  selectCurrentMosaic,\n} from \"pages/Explore/state/mosaicSlice\";\n\nexport const PinLayer = () => {\n  const dispatch = useExploreDispatch();\n  const { isPinned } = useExploreSelector(selectCurrentMosaic);\n  const { previewMode } = useExploreSelector(s => s.detail);\n\n  const handleClick = () => {\n    dispatch(pinCurrentMosaic());\n  };\n\n  const title = isPinned\n    ? \"Stop editing and return to pinned layers\"\n    : \"Pin this layer to the map and perform a new search\";\n\n  const disabled = previewMode.enabled;\n  return (\n    <IconButton\n      title={title}\n      aria-label={title}\n      iconProps={{ iconName: isPinned ? \"PencilReply\" : \"FluentPinOutline\" }}\n      onClick={handleClick}\n      disabled={disabled}\n      data-cy=\"pin-layer-header-button\"\n    />\n  );\n};\n","export const operators = {\n  \"=\": \"=\",\n  \"<\": \"<\",\n  \"<=\": \"≤\",\n  \">\": \">\",\n  \">=\": \"≥\",\n  between: \"between\",\n  like: \"LIKE\",\n  isnull: \"IS NULL\",\n  in: \"in\",\n  anyinteracts: \"\",\n  intersects: \"\",\n};\n\nexport const opEnglish = {\n  \">\": \"after\",\n  \">=\": \"on or after\",\n  \"<\": \"before\",\n  \"<=\": \"on or before\",\n  \"=\": \"on\",\n  between: \"between\",\n  like: \"like\",\n  isnull: \"is null\",\n  in: \"in\",\n  anyinteracts: \"\",\n  intersects: \"\",\n};\n","import { Stack, Text, FontWeights, Icon, getTheme } from \"@fluentui/react\";\ninterface SectionProps {\n  title: string;\n  icon: string;\n}\n\nconst Section: React.FC<SectionProps> = ({ title, icon, children }) => {\n  const theme = getTheme();\n\n  return (\n    <Stack>\n      <Stack horizontal tokens={{ childrenGap: 6 }} verticalAlign=\"center\">\n        <Icon\n          iconName={icon}\n          styles={{ root: { color: theme.palette.themePrimary } }}\n        />\n        <Text styles={{ root: { fontWeight: FontWeights.bold, marginBottom: 2 } }}>\n          {title}\n        </Text>\n      </Stack>\n      <Stack styles={{ root: { marginLeft: 20 } }}>{children}</Stack>\n    </Stack>\n  );\n};\n\nexport default Section;\n","import { Text } from \"@fluentui/react\";\n\nimport { CqlExpressionParser } from \"pages/Explore/utils/cql\";\nimport { rangeIsOnSameDay } from \"pages/Explore/utils/cql/helpers\";\nimport {\n  CqlOperator,\n  CqlExpression,\n  ICqlExpressionList,\n} from \"pages/Explore/utils/cql/types\";\nimport { formatDatetimeHuman } from \"pages/Explore/utils/time\";\nimport { stacFormatter } from \"utils/stac\";\nimport { opEnglish, operators } from \"../../../query/constants\";\nimport Section from \"./Section\";\n\ninterface QuerySectionProps {\n  cql: ICqlExpressionList;\n}\nconst QuerySection = ({ cql }: QuerySectionProps) => {\n  const expressions = (expression: CqlExpression) => {\n    const exp = new CqlExpressionParser(expression);\n    const propertyLabel = stacFormatter.label(exp.property);\n    const opText = operators[exp.operator];\n    const dateValue = exp.value as string | string[];\n\n    const value = Array.isArray(exp.value) ? exp.value.join(\", \") : exp.value;\n\n    // Special handling for datetime property\n    const label =\n      exp.property === \"datetime\" ? (\n        getDateLabel(exp.property, propertyLabel, dateValue, exp.operator)\n      ) : (\n        <Text>\n          {propertyLabel} {opText} {stacFormatter.format(value, exp.property)}\n        </Text>\n      );\n    return <Text key={`exp-${propertyLabel}-${exp.operator}`}>{label}</Text>;\n  };\n\n  const expressionsLabels = cql.map(expressions);\n\n  // If there is no date expression, use the implicit text that all recent items\n  // are included\n  const implicitDateExpression = !cql\n    .map(exp => new CqlExpressionParser(exp))\n    .find(exp => {\n      return exp.property === \"datetime\";\n    })\n    ? \"All recent data items\"\n    : null;\n\n  return (\n    <Section title=\"Filters Applied\" icon=\"PageListFilter\">\n      {implicitDateExpression}\n      {expressionsLabels}\n    </Section>\n  );\n};\n\nexport default QuerySection;\n\nconst getDateLabel = (\n  property: string,\n  propertyLabel: string,\n  value: string[] | string,\n  op: CqlOperator\n) => {\n  if (Array.isArray(value)) {\n    const isSingleDate = rangeIsOnSameDay(value);\n\n    const labelText = isSingleDate\n      ? `${propertyLabel} ${opEnglish[op]} ${formatDatetimeHuman(value[0])} `\n      : `${propertyLabel} between ${formatDatetimeHuman(\n          value[0]\n        )} and ${formatDatetimeHuman(value[1])}`;\n\n    return <Text>{labelText}</Text>;\n  }\n\n  if (property === \"datetime\") {\n    const labelText = `${propertyLabel} ${opEnglish[op]} ${formatDatetimeHuman(\n      value\n    )}`;\n    return <Text>{labelText}</Text>;\n  }\n};\n","import {\n  Callout,\n  Text,\n  mergeStyleSets,\n  Separator,\n  DirectionalHint,\n  Icon,\n} from \"@fluentui/react\";\nimport { marked } from \"marked\";\nimport DOMPurify from \"dompurify\";\n\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport QuerySection from \"./QuerySection\";\nimport Section from \"./Section\";\nimport NewTabLink from \"components/controls/NewTabLink\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport ErrorFallback, { handleErrorBoundaryError } from \"components/ErrorFallback\";\nimport {\n  selectCurrentCql,\n  selectCurrentMosaic,\n} from \"pages/Explore/state/mosaicSlice\";\n\ninterface QueryInfoProps {\n  onDismiss: () => void;\n  targetElementId: string;\n}\n\nconst QueryInfo: React.FC<QueryInfoProps> = ({ onDismiss, targetElementId }) => {\n  const { collection, renderOption } = useExploreSelector(selectCurrentMosaic);\n  const cql = useExploreSelector(selectCurrentCql);\n\n  const collectionSection = collection ? (\n    <Section title={collection?.title} icon={\"World\"}>\n      <Text>\n        {collection?.[\"msft:short_description\"]}{\" \"}\n        <NewTabLink\n          href={`//${window.location.host}/dataset/${collection?.id}`}\n          title=\"See full dataset description\"\n        >\n          <Icon iconName=\"NavigateExternalInline\" />\n        </NewTabLink>\n      </Text>\n    </Section>\n  ) : null;\n\n  const querySection = <QuerySection cql={cql} />;\n\n  const renderDesc = renderOption?.description ? (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: marked.parseInline(DOMPurify.sanitize(renderOption.description)),\n      }}\n    />\n  ) : (\n    renderOption?.name\n  );\n  const renderSection = (\n    <Section title=\"Rendering\" icon=\"MapLayers\">\n      {renderDesc}\n    </Section>\n  );\n\n  return (\n    <>\n      <Callout\n        className={styles.callout}\n        role=\"alertdialog\"\n        gapSpace={0}\n        target={`#${targetElementId}`}\n        onDismiss={onDismiss}\n        directionalHint={DirectionalHint.rightCenter}\n        setInitialFocus\n      >\n        <ErrorBoundary\n          FallbackComponent={ErrorFallback}\n          onError={handleErrorBoundaryError}\n        >\n          {collectionSection}\n          <Separator />\n          {querySection}\n          <Separator />\n          {renderSection}\n        </ErrorBoundary>\n      </Callout>\n    </>\n  );\n};\nexport default QueryInfo;\n\nconst styles = mergeStyleSets({\n  callout: {\n    width: 420,\n    padding: \"20px 24px\",\n  },\n});\n","import {\n  ContextualMenuItemType,\n  IButtonStyles,\n  IconButton,\n  IContextualMenuProps,\n} from \"@fluentui/react\";\nimport { useId, useBoolean } from \"@fluentui/react-hooks\";\nimport { SidebarPanels } from \"pages/Explore/enums\";\n\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { setSidebarPanel } from \"pages/Explore/state/mapSlice\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport { isValidCollection } from \"../../exporters/AnimationExporter/helpers\";\nimport QueryInfo from \"../QueryInfo\";\nimport { useSortMenuItem } from \"./useSortMenuItem\";\n\nexport const SearchResultHeaderMenu: React.FC = () => {\n  const dispatch = useExploreDispatch();\n  const { collection, renderOption } = useExploreSelector(selectCurrentMosaic);\n  const [isQueryInfoVisible, { toggle }] = useBoolean(false);\n  const sortItem = useSortMenuItem();\n  const buttonId = useId(\"explore-results-menu-button\");\n\n  const isValidExport = isValidCollection(collection, renderOption);\n  const invalidExportMsg = \"This layer isn't available for image export.\";\n\n  const menuProps: IContextualMenuProps = {\n    items: [\n      sortItem,\n      {\n        key: \"separator1\",\n        itemType: ContextualMenuItemType.Divider,\n      },\n      {\n        key: \"details\",\n        text: \"Filter details\",\n        ariaLabel: \"Details of current filter settings\",\n        iconProps: { iconName: \"Info\" },\n        onClick: toggle,\n        \"data-cy\": \"query-detail-button\",\n      },\n      {\n        key: \"collection\",\n        text: `Data Catalog page (${collection?.id})`,\n        iconProps: { iconName: \"ProductCatalog\" },\n        onClick: () => {\n          window.open(\n            `//${window.location.host}/dataset/${collection?.id}`,\n            \"_blank\"\n          );\n        },\n      },\n      {\n        key: \"exports\",\n        text: \"Export\",\n        itemType: ContextualMenuItemType.Divider,\n      },\n      {\n        key: \"animate\",\n        text: \"Generate timelapse animation\",\n        ariaLabel: \"Generate timelapse animation base on current filter settings\",\n        title: !isValidExport ? invalidExportMsg : undefined,\n        iconProps: { iconName: \"PlaybackRate1x\" },\n        onClick: () => {\n          dispatch(setSidebarPanel(SidebarPanels.animation));\n        },\n        disabled: !isValidExport,\n      },\n      {\n        key: \"image\",\n        text: \"Generate snapshot image\",\n        ariaLabel: \"Generate timelapse animation base on current filter settings\",\n        title: !isValidExport ? invalidExportMsg : undefined,\n        iconProps: { iconName: \"Photo2\" },\n        onClick: () => {\n          dispatch(setSidebarPanel(SidebarPanels.image));\n        },\n        disabled: !isValidExport,\n      },\n    ],\n  };\n\n  return (\n    <>\n      {isQueryInfoVisible && (\n        <QueryInfo onDismiss={toggle} targetElementId={buttonId} />\n      )}\n      <IconButton\n        id={buttonId}\n        title=\"More options\"\n        styles={iconButtonStyles}\n        iconProps={iconProps}\n        menuProps={menuProps}\n        data-cy=\"explore-results-menu-button\"\n      />\n    </>\n  );\n};\n\nconst iconProps = { iconName: \"More\" };\nconst iconButtonStyles: IButtonStyles = {\n  menuIcon: { display: \"none\" },\n};\n","import { IContextualMenuItem } from \"@fluentui/react\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\n\nimport {\n  selectCurrentMosaic,\n  setMosaicQuery,\n} from \"pages/Explore/state/mosaicSlice\";\nimport { IMosaic, ISortDir } from \"pages/Explore/types\";\n\nexport const useSortMenuItem = (): IContextualMenuItem => {\n  const dispatch = useExploreDispatch();\n  const { query } = useExploreSelector(selectCurrentMosaic);\n  const { previewMode } = useExploreSelector(s => s.detail);\n\n  const clickHandler = (dir: ISortDir) => {\n    return (\n      e:\n        | React.MouseEvent<HTMLElement, MouseEvent>\n        | React.KeyboardEvent<HTMLElement>\n        | undefined\n    ) => {\n      const updatedMosaic: IMosaic = {\n        ...query,\n        sortby: dir,\n      };\n      dispatch(setMosaicQuery(updatedMosaic));\n      e?.preventDefault();\n    };\n  };\n\n  return {\n    key: \"sortby\",\n    text: \"Sort order\",\n    iconProps: { iconName: \"Sort\" },\n    disabled: previewMode.enabled,\n    \"data-cy\": \"sortby\",\n    subMenuProps: {\n      items: [\n        {\n          key: \"sortby-date-desc\",\n          text: \"Date descending\",\n          title: \"Show newest results first\",\n          \"data-cy\": \"sortby-desc\",\n          iconProps: { iconName: \"SortDown\" },\n          canCheck: true,\n          checked: !query.sortby || query.sortby === \"desc\",\n          onClick: clickHandler(\"desc\"),\n        },\n        {\n          key: \"sortby-date-asc\",\n          text: \"Date ascending\",\n          title: \"Show oldest results first\",\n          iconProps: { iconName: \"SortUp\" },\n          canCheck: true,\n          checked: query.sortby === \"asc\",\n          onClick: clickHandler(\"asc\"),\n        },\n      ],\n    },\n  };\n};\n","import {\n  FontSizes,\n  FontWeights,\n  IStackTokens,\n  Spinner,\n  SpinnerSize,\n  Stack,\n  Text,\n} from \"@fluentui/react\";\n\nimport { IStacSearchResult } from \"types/stac\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { loadingStyle } from \"./SearchResultsPane\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport PinLayer from \"../../PinLayer\";\nimport { SearchResultHeaderMenu } from \"./SearchResultHeaderMenu\";\n\ninterface SearchResultsHeaderProps {\n  results: IStacSearchResult | undefined;\n  isLoading: boolean;\n}\n\nconst SearchResultsHeader = ({ results, isLoading }: SearchResultsHeaderProps) => {\n  const { collection } = useExploreSelector(selectCurrentMosaic);\n\n  if (results === undefined) return null;\n\n  const returned = results.features.length;\n  const hasNextLink = results.links.find(l => l.rel === \"next\");\n  const plural = returned === 1 ? \"item\" : \"items\";\n  const preamble = hasNextLink ? \"the first\" : \"\";\n\n  const style = {\n    root: {\n      fontSize: \"12px\",\n      ...loadingStyle(isLoading),\n    },\n  };\n\n  const withResults = (\n    <Text styles={style}>\n      Showing {preamble} {returned} {plural} that matched your filter.\n    </Text>\n  );\n  const withoutResults = (\n    <Text styles={style}>\n      Sorry, no items matched your filter. Try adjusting the query parameters or\n      expand the map area.\n    </Text>\n  );\n  const resultsText = returned !== 0 ? withResults : withoutResults;\n\n  return (\n    <Stack\n      horizontal\n      horizontalAlign=\"space-between\"\n      tokens={tokens}\n      styles={styles}\n    >\n      <Stack tokens={tokens}>\n        <Text styles={headerStyles}>{collection?.title}</Text>\n        <Stack\n          horizontal\n          tokens={tokens}\n          horizontalAlign=\"space-between\"\n          verticalAlign=\"center\"\n        >\n          {resultsText}\n          {isLoading && <Spinner size={SpinnerSize.xSmall} />}\n        </Stack>\n      </Stack>\n      <Stack horizontal verticalAlign=\"start\">\n        <PinLayer />\n        <SearchResultHeaderMenu />\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default SearchResultsHeader;\n\nconst tokens: IStackTokens = {\n  childrenGap: 5,\n};\n\nconst styles = {\n  root: { padding: \"14px 5px 14px 5px\" },\n};\n\nconst headerStyles = {\n  root: { fontSize: FontSizes.medium, fontWeight: FontWeights.bold },\n};\n","import { ReactNode, useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  FocusZone,\n  FocusZoneDirection,\n  IList,\n  List,\n  MessageBar,\n  MessageBarType,\n  Separator,\n  Spinner,\n  Stack,\n  getTheme,\n  IMessageBarStyles,\n  IStackStyles,\n} from \"@fluentui/react\";\nimport { UseQueryResult } from \"react-query\";\n\nimport { IStacCollection, IStacItem, IStacSearchResult } from \"types/stac\";\nimport ItemResult from \"../../../ItemResult\";\nimport ExploreInHub from \"../../../ExploreInHub\";\nimport SearchResultsHeader from \"./SearchResultsHeader\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport ErrorFallback, { handleErrorBoundaryError } from \"components/ErrorFallback\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport NewTabLink from \"components/controls/NewTabLink\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport { MobileViewMapButton } from \"../../../MobileViewInMap/ViewInMap.index\";\nimport {\n  setItemQuickPreview,\n  setSelectedItem,\n} from \"pages/Explore/state/detailSlice\";\nimport { isUndefined } from \"lodash-es\";\nimport { setShowSidebar } from \"pages/Explore/state/mapSlice\";\nimport { useMedia } from \"react-use\";\nimport { MOBILE_WIDTH } from \"utils/constants\";\n\ninterface SearchResultsProps {\n  request: UseQueryResult<IStacSearchResult, Error>;\n  visible: boolean;\n}\n\nconst SearchResultsPane = ({\n  request: { data, isError, isFetching, isPreviousData },\n  visible,\n}: SearchResultsProps) => {\n  const dispatch = useExploreDispatch();\n  const { collection } = useExploreSelector(selectCurrentMosaic);\n  const { previewMode } = useExploreSelector(s => s.detail);\n  const [scrollPos, setScrollPos] = useState(0);\n  const listRef: React.RefObject<IList> = useRef(null);\n  const lastColRef = useRef<IStacCollection | null>();\n  const isMobileView = useMedia(`(max-width: ${MOBILE_WIDTH}px)`);\n  const isCollectionChanged = lastColRef.current !== collection;\n\n  // When the data changes, scroll to the top\n  useEffect(() => {\n    if (!isPreviousData) {\n      setScrollPos(0);\n      listRef.current?.scrollToIndex(0);\n      // When no longer using previous data, the current collection set\n      // reflects the most recent collection used. This is tracked to determine\n      // if we need to ignore \"previousResults\" from the query during a collection\n      // filter change\n      lastColRef.current = collection;\n    }\n  }, [collection, isPreviousData]);\n\n  // Track scroll position in order to show/hide the hood effect\n  const handleScroll = useCallback(e => {\n    const target = e.target as HTMLTextAreaElement;\n    setScrollPos(target.scrollTop);\n  }, []);\n\n  const handleItemPreview = useCallback(\n    (index: number) => {\n      if (data) {\n        const item = data.features[index];\n        if (item) {\n          // On mobile, hide the sidebar when for item preview\n          isMobileView && dispatch(setShowSidebar(false));\n          if (previewMode.enabled) {\n            dispatch(setSelectedItem(item));\n          } else {\n            dispatch(\n              setItemQuickPreview({ items: data.features, currentIndex: index })\n            );\n          }\n        }\n      }\n    },\n    [data, dispatch, isMobileView, previewMode.enabled]\n  );\n\n  if (isError) {\n    return (\n      <>\n        <Separator />\n        <MessageBar\n          messageBarType={MessageBarType.error}\n          styles={errorMessageStyles}\n        >\n          Sorry, we're having trouble completing this search. If the issue persists,\n          please consider submitting an issue on our{\" \"}\n          <NewTabLink\n            style={{ padding: 0 }}\n            href=\"https://github.com/microsoft/PlanetaryComputer\"\n          >\n            GitHub repo\n          </NewTabLink>\n          .\n        </MessageBar>\n      </>\n    );\n  }\n  const loadingIndicator = (\n    <>\n      <Separator />\n      <Spinner />\n    </>\n  );\n\n  // The logic here is complex.\n  // If the collection has changed, and the new collection exists, and the query is returning previous results,\n  // don't render the previous results while the new ones are fetched. Show a loading indicator.\n  if (collection && isCollectionChanged && isPreviousData) return loadingIndicator;\n\n  // If there is no data, but it is currently being fetched, we show a loading indicator\n  if (!data && isFetching) return loadingIndicator;\n\n  // If there is no data, but there is no collection set, we have no query, so don't render anything\n  // (except the show map button on mobile).\n  if (!data || !collection)\n    return (\n      <Stack.Item align=\"center\" styles={mobileViewMapStyle}>\n        <MobileViewMapButton />\n      </Stack.Item>\n    );\n\n  // Otherwise, when the collection has stayed the same, we do keep previous\n  // results displayed, but dimmed, until the new results come in.\n\n  const renderCell = (item?: IStacItem | undefined, index?: number): ReactNode => {\n    if (!item || isUndefined(index)) return null;\n    return (\n      <ItemResult item={item} index={index} onItemPreview={handleItemPreview} />\n    );\n  };\n\n  return (\n    <>\n      <Stack id=\"explorer-search-results\" styles={resultsListStyle}>\n        <ErrorBoundary\n          FallbackComponent={ErrorFallback}\n          onError={handleErrorBoundaryError}\n        >\n          <SearchResultsHeader results={data} isLoading={isFetching} />\n          <div className={scrollPos ? \"hood on\" : \"hood\"} />\n          <div\n            className=\"custom-overflow\"\n            style={{\n              height: \"100%\",\n              overflowY: \"auto\",\n              overflowX: \"hidden\",\n              ...loadingStyle(isFetching),\n            }}\n            onScroll={handleScroll}\n            data-cy=\"search-results-list\"\n          >\n            <FocusZone direction={FocusZoneDirection.vertical}>\n              <List\n                componentRef={listRef}\n                items={data?.features}\n                onRenderCell={renderCell}\n              />\n            </FocusZone>\n          </div>\n        </ErrorBoundary>\n      </Stack>\n      {visible && <ExploreInHub />}\n      {visible && <MobileViewMapButton />}\n    </>\n  );\n};\n\nexport default SearchResultsPane;\n\nconst theme = getTheme();\nexport const loadingStyle = (inLoadingState: boolean) => ({\n  opacity: inLoadingState ? 0.4 : 1,\n  transition: \"opacity 0.1s ease-in-out\",\n});\n\nexport const errorMessageStyles: IMessageBarStyles = {\n  root: { borderRadius: 4, margin: 8, width: \"unset\" },\n};\n\nconst resultsListStyle: Partial<IStackStyles> = {\n  root: {\n    background: theme.palette.neutralLighterAlt,\n    display: \"flex\",\n    height: \"100%\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 1,\n    borderTop: `1px solid ${theme.palette.neutralLight}`,\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n};\n\nconst mobileViewMapStyle = {\n  root: {\n    width: \"100%\",\n    marginTop: \"auto !important\",\n  },\n};\n","import { QueryFunctionContext, useQuery } from \"react-query\";\nimport $RefParser, { JSONSchema } from \"@apidevtools/json-schema-ref-parser\";\nimport { STAC_URL } from \"utils/constants\";\n\nexport const useCollectionQueryables = (collectionId: string | undefined) => {\n  return useQuery([\"queryable\", collectionId], getCollectionQueryables, {\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    retry: false,\n    enabled: Boolean(collectionId),\n  });\n};\n\nconst getCollectionQueryables = async (\n  queryParam: QueryFunctionContext<[\"queryable\", string | undefined]>\n): Promise<JSONSchema> => {\n  const [, collectionId] = queryParam.queryKey;\n\n  const schema = await $RefParser.dereference(\n    `${STAC_URL}/collections/${collectionId}/queryables`\n  );\n\n  return schema;\n};\n","import { parseDatetime } from \"pages/Explore/utils/time\";\nimport {\n  DateRangeAction,\n  DateRangeState,\n  ValidationAction,\n  ValidationState,\n} from \"./types\";\n\nexport const initialValidationState: ValidationState = {\n  start: true,\n  startError: null,\n  end: true,\n  endError: null,\n};\n\nexport const validationReducer = (\n  state: ValidationState,\n  action: ValidationAction\n) => {\n  return { ...state, ...action };\n};\n\nconst now = parseDatetime(new Date());\nexport const initialWorkingDateState: DateRangeState = {\n  start: now,\n  end: now,\n};\n\nexport const dateRangeReducer = (\n  state: DateRangeState,\n  action: DateRangeAction\n): DateRangeState => {\n  return { ...state, ...action };\n};\n","import React from \"react\";\nimport { Dayjs } from \"dayjs\";\nimport { DateRangeState, ValidationAction, ValidationState } from \"./types\";\nimport { initialValidationState } from \"./state\";\nimport { parseDatetime } from \"pages/Explore/utils/time\";\n\nexport interface IDateFieldContext {\n  validMinDate: Dayjs;\n  validMaxDate: Dayjs;\n  workingDates: DateRangeState;\n  validationState: ValidationState;\n  setValidation:\n    | React.Dispatch<ValidationAction>\n    | ((arg: ValidationAction) => void);\n}\n\nconst now = parseDatetime(new Date());\nexport const DateFieldContext = React.createContext<IDateFieldContext>({\n  validMinDate: now,\n  validMaxDate: now,\n  workingDates: { start: now, end: null },\n  setValidation: () => {},\n  validationState: initialValidationState,\n});\n\nexport const DateFieldProvider: React.FC<{ state: IDateFieldContext }> = ({\n  state,\n  children,\n}) => {\n  return (\n    <DateFieldContext.Provider value={state}>{children}</DateFieldContext.Provider>\n  );\n};\n","import { useState, useContext } from \"react\";\nimport {\n  Dropdown,\n  IButtonStyles,\n  IconButton,\n  IDropdownOption,\n  IDropdownStyles,\n  IStackStyles,\n  IStackTokens,\n  Stack,\n} from \"@fluentui/react\";\nimport { dayjs } from \"utils\";\nimport { DateFieldContext } from \"./context\";\nimport { Dayjs } from \"dayjs\";\n\ninterface ICalendarNavControlProps {\n  onChange: (date: Date) => void;\n  navigatedDate: Date;\n}\n\nexport const CalendarNavControl = ({\n  onChange,\n  navigatedDate,\n}: ICalendarNavControlProps) => {\n  const [year, setYear] = useState(navigatedDate.getFullYear());\n  const [month, setMonth] = useState(navigatedDate.getMonth());\n  const { validMaxDate, validMinDate } = useContext(DateFieldContext);\n\n  const changeMonth = (newMonth: number) => {\n    setMonth(newMonth);\n    onChange(new Date(year, newMonth));\n  };\n\n  const changeYear = (newYear: number) => {\n    setYear(newYear);\n    onChange(new Date(newYear, month));\n  };\n\n  const handleNavMonth = (direction: \"next\" | \"previous\") => {\n    return () => {\n      const curDate = dayjs(new Date(year, month, 1));\n      const newDate =\n        direction === \"next\"\n          ? curDate.add(1, \"month\")\n          : curDate.subtract(1, \"month\");\n\n      const newMonth = newDate.month();\n      const newYear = newDate.year();\n      setMonth(newMonth);\n      setYear(newYear);\n      onChange(new Date(newYear, newMonth));\n    };\n  };\n\n  const handleChange = (type: \"year\" | \"month\") => {\n    return (_: any, option?: IDropdownOption<number> | undefined) => {\n      if (!option) return;\n      if (type === \"year\") {\n        changeYear(option.key as number);\n      } else {\n        changeMonth(option.key as number);\n      }\n    };\n  };\n\n  const makeValidator = (year: number) => {\n    return (monthIndex: number): boolean => {\n      const date = dayjs(new Date(year, monthIndex, 1));\n      return (\n        validMinDate.isAfter(date, \"month\") || validMaxDate.isBefore(date, \"month\")\n      );\n    };\n  };\n\n  return (\n    <Stack horizontal horizontalAlign=\"space-between\">\n      <Stack horizontal styles={stackStyles} tokens={stackTokens}>\n        <Dropdown\n          aria-label=\"Select month\"\n          styles={dropdownStyles}\n          options={getMonthsOptions(makeValidator(year))}\n          onChange={handleChange(\"month\")}\n          selectedKey={month}\n        />\n        <Dropdown\n          aria-label=\"Select year\"\n          styles={dropdownStyles}\n          options={getYearOptions(validMinDate, validMaxDate)}\n          onChange={handleChange(\"year\")}\n          selectedKey={year}\n        />\n      </Stack>\n      <Stack horizontal verticalAlign=\"center\">\n        <IconButton\n          aria-label=\"Previous month\"\n          styles={navStyles}\n          iconProps={{ iconName: \"ChevronLeft\" }}\n          onClick={handleNavMonth(\"previous\")}\n        />\n        <IconButton\n          aria-label=\"Next month\"\n          styles={navStyles}\n          iconProps={{ iconName: \"ChevronRight\" }}\n          onClick={handleNavMonth(\"next\")}\n        />\n      </Stack>\n    </Stack>\n  );\n};\n\nconst getMonthsOptions = (\n  validator: (n: number) => boolean\n): IDropdownOption<number>[] => {\n  //NB: JS Date object provides 0-based month\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  return months.map((month, index) => ({\n    key: index,\n    text: month,\n    disabled: validator(index),\n  }));\n};\n\nconst getYearOptions = (start: Dayjs, end: Dayjs): IDropdownOption[] => {\n  // Generate list of years between start and end\n  const startYear = start.year();\n  const endYear = end.year();\n  const years: IDropdownOption[] = [];\n\n  for (let i = startYear; i <= endYear; i++) {\n    years.push({ key: i, text: i.toString() });\n  }\n  return years;\n};\n\nconst navStyles: Partial<IButtonStyles> = {\n  root: {\n    width: 20,\n    height: 20,\n  },\n  icon: {\n    fontSize: 12,\n  },\n};\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  root: {\n    width: 70,\n  },\n};\nconst stackTokens: IStackTokens = { childrenGap: 5 };\nconst stackStyles: IStackStyles = {\n  root: {\n    marginLeft: 8,\n  },\n};\n","import {\n  IStackStyles,\n  IStackTokens,\n  ITextFieldStyles,\n  ITextStyles,\n  MaskedTextField,\n  Stack,\n  Text,\n} from \"@fluentui/react\";\nimport { useState } from \"react\";\n\nimport { RangeType } from \"./types\";\n\ninterface TimeProps {\n  time: string;\n  onChange: (value: string) => void;\n  rangeType: RangeType;\n}\n\nconst defaultStart = \"00:00:00Z\";\nconst defaultEnd = \"23:59:59Z\";\n\nexport const Time: React.FC<TimeProps> = ({ time, rangeType, onChange }) => {\n  const [errorMsg, setErrorMessage] = useState<string>(\"\");\n  const defaultTime = rangeType === \"start\" ? defaultStart : defaultEnd;\n\n  const handleChange = (\n    _: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    newValue?: string | undefined\n  ): void => {\n    // An underscore indicates the mask hasn't been filled out yet\n    if (!newValue || newValue.includes(\"_\")) return;\n    if (!validateTime(newValue)) {\n      setErrorMessage(\"* 00:00:00 – 23:59:59\");\n      return;\n    }\n\n    setErrorMessage(\"\");\n    onChange(newValue || defaultTime);\n  };\n\n  const maskFormat: { [key: string]: RegExp } = {\n    \"*\": /[0-9]/,\n  };\n\n  return (\n    <Stack\n      styles={containerStyles}\n      tokens={containerTokens}\n      horizontal\n      verticalAlign=\"center\"\n    >\n      <Text styles={textStyles}>Time (UTC)</Text>\n      <MaskedTextField\n        maskFormat={maskFormat}\n        maskChar=\"_\"\n        mask=\"**:**:**\"\n        styles={inputStyles}\n        value={time}\n        onChange={handleChange}\n        errorMessage={errorMsg}\n      />\n    </Stack>\n  );\n};\n\nconst containerTokens: IStackTokens = {\n  childrenGap: 4,\n};\n\nconst containerStyles: IStackStyles = {\n  root: {\n    margin: 4,\n    marginLeft: 8,\n    marginTop: 0,\n  },\n};\n\nconst textStyles: ITextStyles = {\n  root: {\n    fontWeight: 600,\n  },\n};\n\nconst inputStyles: Partial<ITextFieldStyles> = {\n  root: {\n    width: 125,\n  },\n};\n\nconst validateTime = (newValue: string): boolean => {\n  try {\n    const [hours, minutes, seconds] = newValue.split(\":\");\n    const hour = parseInt(hours);\n    const minute = parseInt(minutes);\n    const second = parseInt(seconds);\n\n    if (hour > 23 || minute > 59 || second > 59) {\n      return false;\n    }\n    return true;\n  } catch {\n    return false;\n  }\n};\n","import { useRef, useEffect, useContext, useState, useCallback } from \"react\";\nimport {\n  Calendar,\n  Stack,\n  FontSizes,\n  FontWeights,\n  getTheme,\n  ICalendarDayStyles,\n  Label,\n  IStackStyles,\n  ICalendarDayProps,\n  ICalendarMonthStyles,\n  ILabelStyles,\n  MessageBar,\n  MessageBarType,\n  IMessageBarStyles,\n  AnimationDirection,\n  ICalendarStyles,\n  Separator,\n  ISeparatorStyles,\n} from \"@fluentui/react\";\nimport { dayjs, toAbsoluteDate } from \"utils\";\nimport { DateFieldContext } from \"./context\";\nimport { DateRangeAction, RangeType } from \"./types\";\nimport { CalendarNavControl } from \"./CalendarNavControl\";\nimport { Time } from \"./Time\";\nimport {\n  adjustTime,\n  formatDateShort,\n  parseDatetime,\n} from \"pages/Explore/utils/time\";\n\ninterface CalendarControlProps {\n  label: string;\n  rangeType: RangeType;\n  operator: string;\n  onSelectDate: React.Dispatch<DateRangeAction>;\n}\n\nconst CalendarControl = ({\n  label,\n  rangeType,\n  operator,\n  onSelectDate,\n}: CalendarControlProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [invalidDate, setInvalidDate] = useState<Date>();\n  const {\n    validMaxDate,\n    validMinDate,\n    workingDates,\n    validationState,\n    setValidation,\n  } = useContext(DateFieldContext);\n\n  const date = workingDates[rangeType];\n\n  const getErrorMessage = useCallback(\n    (value: Date | string) => {\n      const day = parseDatetime(value);\n      if (!day.isValid()) return \"Invalid date, use MM/DD/YYYY\";\n\n      if (day.isBefore(validMinDate))\n        return `Date must be after ${formatDateShort(\n          validMinDate.subtract(1, \"day\")\n        )}`;\n\n      if (day.isAfter(validMaxDate))\n        return `Date must be before ${formatDateShort(validMaxDate.add(1, \"day\"))}`;\n\n      // Validate date ranges to be start <= end\n      if (operator === \"between\") {\n        if (\n          rangeType === \"start\" &&\n          workingDates?.end &&\n          day.isAfter(workingDates.end)\n        ) {\n          return \"Date must be before End Date\";\n        } else if (\n          rangeType === \"end\" &&\n          workingDates?.start &&\n          day.isBefore(workingDates.start)\n        ) {\n          return \"Date must be after Start Date\";\n        }\n      }\n      return \"\";\n    },\n    [\n      operator,\n      rangeType,\n      validMaxDate,\n      validMinDate,\n      workingDates.end,\n      workingDates.start,\n    ]\n  );\n\n  const setDateValidation = useCallback(\n    (value: Date | undefined) => {\n      if (!value) return false;\n\n      // The calendar control determines validation state by the presence or absence of a\n      // string which is also used as a validation message.\n      const err = getErrorMessage(value);\n      setErrorMessage(err);\n\n      // Dispatch to the parent context using the rangeType key provided\n      const validation = { [rangeType]: !Boolean(err) };\n      if (validation[rangeType] !== validationState[rangeType]) {\n        setValidation(validation);\n      }\n\n      // Track the invalid date. It may not be *currently* valid compared to the other date in the range.\n      // When the other date changes, we'll check this invalid date and it could become valid will need to\n      // be applied to the working dates.\n      if (err) {\n        setInvalidDate(value);\n      } else {\n        setInvalidDate(undefined);\n      }\n\n      const hasError = Boolean(err);\n      return !hasError;\n    },\n    [getErrorMessage, rangeType, setValidation, validationState]\n  );\n\n  const setSelectedDatetime = useCallback(\n    (newDate: Date) => {\n      setDateValidation(newDate);\n      onSelectDate({ [rangeType]: parseDatetime(newDate) });\n    },\n    [onSelectDate, rangeType, setDateValidation]\n  );\n\n  const handleDateChange = useCallback(\n    (newDate: Date) => {\n      if (!date) return;\n\n      // When the date has changed from the calendar, we need to apply the\n      // existing time to the new date.\n      const newDatetime = adjustTime(newDate, date?.format(\"HH:mm:ss\"));\n      setSelectedDatetime(newDatetime.toDate());\n    },\n    [date, setSelectedDatetime]\n  );\n\n  const handleTimeChange = useCallback(\n    (time: string) => {\n      if (!date) return;\n\n      // When the time changes, apply it to the existing selected date.\n      const newDate = adjustTime(date, time);\n      setSelectedDatetime(newDate.toDate());\n    },\n    [date, setSelectedDatetime]\n  );\n\n  // Cross validate date ranges - when rendering, the current invalid date may\n  // have become valid due to changes in the other date range value.\n  useEffect(() => {\n    if (errorMessage && operator === \"between\" && invalidDate) {\n      // Check the validity of the previous invalid date\n      const valid = setDateValidation(invalidDate);\n\n      // If it's now valid, use it as the selected date\n      if (valid) {\n        handleDateChange(invalidDate);\n      }\n    }\n  });\n\n  const [navigatedDate, setNavigatedDate] = useState<Date>(\n    toAbsoluteDate(dayjs(date))\n  );\n\n  if (!date) return null;\n\n  const calDayNav: Partial<ICalendarDayProps> = {\n    navigatedDate: navigatedDate,\n  };\n\n  const navigation = (\n    <CalendarNavControl\n      onChange={date => setNavigatedDate(date)}\n      navigatedDate={navigatedDate}\n    />\n  );\n\n  const validTimeOperator = [\"between\", \"before\", \"after\"].includes(operator);\n\n  return (\n    <Stack styles={controlStyles}>\n      <Label styles={labelStyles}>{label}</Label>\n      {navigation}\n      <Calendar\n        ref={ref}\n        styles={calendarStyles}\n        showMonthPickerAsOverlay={true}\n        highlightSelectedMonth\n        isMonthPickerVisible={false}\n        showGoToToday={false}\n        value={toAbsoluteDate(date)}\n        minDate={toAbsoluteDate(validMinDate)}\n        maxDate={toAbsoluteDate(validMaxDate)}\n        onSelectDate={handleDateChange}\n        calendarDayProps={{ ...calendarDayProps, ...calDayNav }}\n        calendarMonthProps={calendarMonthProps}\n      />\n      {validTimeOperator && (\n        <>\n          <Separator styles={separatorStyles} />\n          <Time\n            time={date.utc().format(\"HH:mm:ss\")}\n            rangeType={rangeType}\n            onChange={handleTimeChange}\n          />\n        </>\n      )}\n      {errorMessage && (\n        <MessageBar styles={errorMsgStyles} messageBarType={MessageBarType.error}>\n          {errorMessage}\n        </MessageBar>\n      )}\n    </Stack>\n  );\n};\n\nexport default CalendarControl;\n\nconst theme = getTheme();\nconst controlStyles: Partial<IStackStyles> = {\n  root: {\n    maxWidth: 220,\n    marginRight: 3,\n  },\n};\n\nconst calendarStyles: Partial<ICalendarStyles> = {\n  root: {\n    minHeight: 231,\n    \"& .ms-FocusZone\": {\n      paddingBottom: 0,\n    },\n  },\n};\n\nconst labelStyles: ILabelStyles = {\n  root: {\n    textTransform: \"uppercase\",\n    marginTop: 8,\n    marginLeft: 8,\n    fontSize: 13,\n  },\n};\n\nconst errorMsgStyles: Partial<IMessageBarStyles> = {\n  root: {\n    margin: 2,\n    borderRadius: 2,\n  },\n};\n\nconst calendarDayStyles: Partial<ICalendarDayStyles> = {\n  dayCell: {\n    fontSize: FontSizes.size14,\n    width: 29,\n    height: 29,\n    lineHeight: 29,\n  },\n  dayButton: {\n    fontSize: FontSizes.size14,\n  },\n  daySelected: {\n    backgroundColor: theme.palette.themePrimary,\n    color: theme.palette.white + \" !important\",\n    fontWeight: FontWeights.semibold,\n    borderRadius: \"100% !important\",\n    \":after\": {\n      border: 0,\n    },\n  },\n  datesAbove: {\n    \":after\": {\n      border: 0,\n    },\n  },\n  datesBelow: {\n    \":after\": {\n      border: 0,\n    },\n  },\n  datesLeft: {\n    \":after\": {\n      border: 0,\n    },\n  },\n  datesRight: {\n    \":after\": {\n      border: 0,\n    },\n  },\n  dayIsToday: {\n    borderRadius: 0,\n    backgroundColor: \"unset\",\n    color: theme.palette.black,\n    fontWeight: FontWeights.regular,\n  },\n  weekDayLabelCell: {\n    fontSize: FontSizes.size14,\n    fontWeight: FontWeights.semibold,\n  },\n  disabledStyle: {\n    color: theme.palette.neutralTertiary,\n  },\n  header: {\n    display: \"none\",\n  },\n  headerIconButton: {\n    color: theme.palette.themePrimary,\n    \":hover\": {\n      color: theme.palette.themePrimary,\n    },\n  },\n  table: {\n    paddingBottom: 0,\n  },\n};\n\nconst monthStyles: Partial<ICalendarMonthStyles> = {\n  navigationButton: {\n    color: theme.palette.themePrimary,\n    \":hover\": {\n      color: theme.palette.themePrimary,\n    },\n  },\n};\n\nconst calendarDayProps: Partial<ICalendarDayProps> = {\n  styles: calendarDayStyles,\n  navigationIcons: {\n    leftNavigation: \"ChevronLeft\",\n    rightNavigation: \"ChevronRight\",\n  },\n};\n\nconst calendarMonthProps: Partial<ICalendarDayProps> = {\n  styles: monthStyles,\n  navigationIcons: {\n    leftNavigation: \"ChevronLeft\",\n    rightNavigation: \"ChevronRight\",\n  },\n  animationDirection: AnimationDirection.Horizontal,\n};\n\nconst separatorStyles: Partial<ISeparatorStyles> = {\n  root: {\n    marginBottom: 4,\n    height: 0,\n  },\n};\n","import { Dayjs } from \"dayjs\";\nimport {\n  CqlPropertyObject,\n  CqlDate,\n  CqlAnyinteractsExpression,\n  CqlGteExpression,\n  CqlLteExpression,\n  CqlTimestampValue,\n} from \"pages/Explore/utils/cql/types\";\nimport {\n  formatDatetime,\n  formatDatetimeHuman,\n  getDayEnd,\n  getDayStart,\n  parseDatetime,\n} from \"pages/Explore/utils/time\";\nimport { dayjs } from \"utils\";\nimport { Message, DateMessage } from \"./DateMessage\";\nimport { DateRangeState, ValidationState } from \"./types\";\n\nexport const getStartRangeValue = (date: CqlDate): Dayjs => {\n  const d = date.isRange ? date.value[0] : date.value;\n  return parseDatetime(d);\n};\n\nexport const getEndRangeValue = (date: CqlDate): Dayjs => {\n  const d = date.isRange ? date.value[1] : new Date();\n  return parseDatetime(d);\n};\n\nexport const getDateDisplayText = (dateExpression: CqlDate) => {\n  return dateExpression.isRange\n    ? dateExpression.value.map(v => formatDatetimeHuman(v, true, true)).join(\" – \")\n    : formatDatetimeHuman(dateExpression.value, true, true);\n};\n\nexport const isSingleDayRange = (dateExpression: CqlDate): boolean => {\n  const min = parseDatetime(dateExpression.min);\n  const max = parseDatetime(dateExpression.max);\n  return min.isSame(max, \"day\");\n};\n\nexport const isValidToApply = (\n  validationState: ValidationState,\n  initialDates: DateRangeState,\n  workingDates: DateRangeState,\n  initialOperator: string,\n  workingOperator: string\n) => {\n  const validDates = validationState.start && validationState.end;\n  const startDateChanged = !initialDates.start.isSame(workingDates.start, \"day\");\n  const endDateChanged =\n    (!initialDates.end && !workingDates.end) ||\n    Boolean(initialDates.end && !initialDates.end.isSame(workingDates.end, \"day\"));\n\n  // Valid if the dates are valid and either the start date or end date has changed\n  const dateChanged = startDateChanged || endDateChanged;\n  const operatorChanged = initialOperator !== workingOperator;\n\n  return validDates && (dateChanged || operatorChanged);\n};\n\nexport const toDateRange = (dateExpression: CqlDate): DateRangeState => {\n  return {\n    start: getStartRangeValue(dateExpression),\n    end: dateExpression.isRange\n      ? getEndRangeValue(dateExpression)\n      : parseDatetime(dateExpression.max),\n  };\n};\n\nexport const getValidDateText = (dateExpression: CqlDate, isRange: boolean) => {\n  const displayMin = (\n    <DateMessage>{formatDatetimeHuman(dateExpression.min)}</DateMessage>\n  );\n  const displayMax = (\n    <DateMessage>{formatDatetimeHuman(dateExpression.max)}</DateMessage>\n  );\n\n  const min = dayjs.utc(dateExpression.min);\n  const max = dayjs.utc(dateExpression.max);\n  const sameDay = min.isSame(max, \"day\");\n\n  if (sameDay) {\n    return <Message>Date only valid on {displayMin}</Message>;\n  }\n\n  return isRange ? (\n    <Message>\n      Valid between {displayMin} and {displayMax}\n    </Message>\n  ) : (\n    <Message>\n      Valid {displayMin} to {displayMax}\n    </Message>\n  );\n};\n\nexport const toCqlExpression = (\n  dateRange: DateRangeState,\n  operator: string\n):\n  | CqlAnyinteractsExpression<string>\n  | CqlGteExpression<string | CqlTimestampValue>\n  | CqlLteExpression<string | CqlTimestampValue> => {\n  const property: CqlPropertyObject = { property: \"datetime\" };\n\n  const start = formatDatetime(dateRange.start);\n  const startOfStartingDay = formatDatetime(getDayStart(dateRange.start));\n  const endOfStartingDay = formatDatetime(getDayEnd(dateRange.start));\n  const end = dateRange.end ? formatDatetime(dateRange.end) : undefined;\n\n  switch (operator) {\n    case \"between\":\n      if (end === undefined) throw new Error(\"Invalid date range: missing 'end'\");\n\n      return {\n        op: \"anyinteracts\",\n        args: [property, { interval: [start, end] }],\n      };\n    case \"on\":\n      return {\n        op: \"anyinteracts\",\n        args: [property, { interval: [startOfStartingDay, endOfStartingDay] }],\n      };\n    case \"after\":\n      return {\n        op: \">=\",\n        args: [property, { timestamp: start }],\n      };\n    case \"before\":\n      return {\n        op: \"<=\",\n        args: [property, { timestamp: start }],\n      };\n    default:\n      throw new Error(`Invalid operator: ${operator} for date range field`);\n  }\n};\n","import { FontSizes, FontWeights, ITextStyles, Text } from \"@fluentui/react\";\n\nexport const DateMessage: React.FC = ({ children }) => {\n  return <Text styles={dateStyles}>{children}</Text>;\n};\n\nexport const Message: React.FC = ({ children }) => {\n  return <Text styles={styles}>{children}</Text>;\n};\n\nconst styles: ITextStyles = {\n  root: {\n    fontSize: FontSizes.size12,\n    fontWeight: FontWeights.semilight,\n  },\n};\n\nconst dateStyles: ITextStyles = {\n  root: {\n    fontSize: FontSizes.size12,\n    fontWeight: 400,\n  },\n};\n","import { useState, useEffect } from \"react\";\nimport {\n  IContextualMenuItem,\n  CommandButton,\n  IContextualMenuProps,\n  IButtonStyles,\n  getTheme,\n  FontWeights,\n} from \"@fluentui/react\";\nimport { CqlDate } from \"pages/Explore/utils/cql/types\";\nimport { DateRangeState } from \"./types\";\n\nconst useOperatorSelector = (\n  dateExpression: CqlDate,\n  initialDateRange: DateRangeState\n) => {\n  const [initialExpression, setInitialExpression] = useState<CqlDate>();\n\n  useEffect(() => {\n    setInitialExpression(dateExpression);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleOperatorChange = (_: any, item: IContextualMenuItem | undefined) => {\n    item && setOperatorSelection(item);\n  };\n\n  const [operatorSelection, setOperatorSelection] = useState<IContextualMenuItem>(\n    opItemFromExpression(dateExpression)\n  );\n\n  const resetOperatorSelection = () => {\n    initialExpression &&\n      setOperatorSelection(opItemFromExpression(initialExpression));\n  };\n\n  const menu: IContextualMenuProps = {\n    items: menuItems,\n    onItemClick: handleOperatorChange,\n  };\n\n  const OperatorSelector = (\n    <CommandButton\n      text={operatorSelection.text}\n      menuProps={menu}\n      styles={opDropdownStyles}\n    />\n  );\n\n  return { OperatorSelector, operatorSelection, resetOperatorSelection };\n};\n\nexport default useOperatorSelector;\n\nconst menuItems: IContextualMenuProps[\"items\"] = [\n  { key: \"between\", text: \"Between dates\" },\n  { key: \"on\", text: \"On date\" },\n  { key: \"before\", text: \"On or before date\" },\n  { key: \"after\", text: \"On or after date\" },\n];\n\nconst opItemFromExpression = (dateExpression: CqlDate): IContextualMenuItem => {\n  const item = menuItems.find(item => {\n    // Range will be anyinteracts with two different days as values\n    if (dateExpression.isRange) {\n      return item.key === \"between\";\n    }\n\n    // Equals is really an anyinteracts with a single day in both values\n    if (\n      dateExpression.operator === \"anyinteracts\" ||\n      dateExpression.operator === \"=\"\n    ) {\n      return item.key === \"on\";\n    }\n\n    if (dateExpression.operator === \"<=\") {\n      return item.key === \"before\";\n    }\n\n    if (dateExpression.operator === \">=\") {\n      return item.key === \"after\";\n    }\n\n    return false;\n  });\n\n  if (!item) {\n    throw new Error(\n      `Unable to find operator \"${dateExpression.operator}\" for date control`\n    );\n  }\n\n  return item;\n};\n\nconst theme = getTheme();\nconst opDropdownStyles: IButtonStyles = {\n  root: {\n    padding: 0,\n  },\n  label: {\n    margin: 0,\n    color: theme.palette.themePrimary,\n    fontWeight: FontWeights.semibold,\n  },\n  menuIcon: {\n    color: theme.palette.themePrimary,\n  },\n};\n","import { useCallback, useEffect, useMemo, useReducer, useRef } from \"react\";\nimport {\n  Stack,\n  IStackTokens,\n  VerticalDivider,\n  IVerticalDividerStyles,\n  Separator,\n  getTheme,\n  DirectionalHint,\n  ISeparatorStyles,\n  IStackStyles,\n  TooltipHost,\n  Text,\n} from \"@fluentui/react\";\n\nimport CalendarControl from \"./CalendarControl\";\nimport { CqlDate } from \"pages/Explore/utils/cql/types\";\nimport { opEnglish } from \"../constants\";\nimport { DateFieldProvider, IDateFieldContext } from \"./context\";\nimport { capitalize } from \"utils\";\nimport {\n  getDateDisplayText,\n  isSingleDayRange,\n  isValidToApply,\n  toCqlExpression,\n  toDateRange,\n} from \"./helpers\";\nimport {\n  dateRangeReducer,\n  initialValidationState,\n  validationReducer,\n} from \"./state\";\nimport useOperatorSelector from \"./useOperatorSelector\";\nimport { useExploreDispatch } from \"pages/Explore/state/hooks\";\nimport { setCustomCqlExpressions } from \"pages/Explore/state/mosaicSlice\";\nimport { DropdownButton } from \"../DropdownButton\";\nimport { PanelControlHandlers } from \"pages/Explore/components/Map/components/PanelControl\";\nimport DropdownLabel from \"../components/DropdownLabel\";\nimport { formatDateShort, getDayEnd, getDayStart } from \"pages/Explore/utils/time\";\n\ninterface DateFieldProps {\n  dateExpression: CqlDate;\n  disabled?: boolean;\n}\n\nexport const DateField = ({ dateExpression, disabled = false }: DateFieldProps) => {\n  const dispatch = useExploreDispatch();\n  const panelRef = useRef<PanelControlHandlers>(null);\n\n  const initialDateRange = useMemo(() => {\n    return toDateRange(dateExpression);\n  }, [dateExpression]);\n\n  const [workingDateRange, workingDateRangeDispatch] = useReducer(\n    dateRangeReducer,\n    initialDateRange\n  );\n\n  const [controlValidState, validationDispatch] = useReducer(\n    validationReducer,\n    initialValidationState\n  );\n\n  const minDay = getDayStart(dateExpression.min);\n  const maxDay = getDayEnd(dateExpression.max);\n\n  const { OperatorSelector, operatorSelection } = useOperatorSelector(\n    dateExpression,\n    initialDateRange\n  );\n\n  const isValid = isValidToApply(\n    controlValidState,\n    initialDateRange,\n    workingDateRange,\n    dateExpression.operator,\n    operatorSelection.key\n  );\n\n  const handleSave = useCallback(() => {\n    if (isValid) {\n      const exp = toCqlExpression(workingDateRange, operatorSelection.key);\n      dispatch(setCustomCqlExpressions(exp));\n    }\n  }, [isValid, workingDateRange, operatorSelection.key, dispatch]);\n\n  const opLabel = opEnglish[dateExpression.operator];\n  const displayText = getDateDisplayText(dateExpression);\n  const isRange = operatorSelection.key === \"between\";\n\n  const providerState: IDateFieldContext = {\n    validMinDate: minDay,\n    validMaxDate: maxDay,\n    workingDates: workingDateRange,\n    setValidation: validationDispatch,\n    validationState: controlValidState,\n  };\n\n  const handleRenderText = () => {\n    const displayValue = `${capitalize(opLabel)} ${displayText}`;\n    return (\n      <DropdownLabel\n        key=\"datefield-button-label\"\n        label=\"Acquired\"\n        displayValue={displayValue}\n        title={displayValue}\n      />\n    );\n  };\n\n  useEffect(() => {\n    handleSave();\n  }, [handleSave, workingDateRange, operatorSelection.key]);\n\n  const isSingleDay = isSingleDayRange(dateExpression);\n  const isDisabled = isSingleDay || disabled;\n  const disabledMsg = isSingleDay ? (\n    <Text>\n      <Text style={{ fontWeight: 500 }}>\n        {formatDateShort(initialDateRange.start)}\n      </Text>{\" \"}\n      is the only date available for this dataset\n    </Text>\n  ) : (\n    \"\"\n  );\n  return (\n    <>\n      <TooltipHost content={disabledMsg}>\n        <DropdownButton\n          ref={panelRef}\n          key={\"query-datetime-field\"}\n          label=\"Date acquired\"\n          directionalHint={DirectionalHint.rightTopEdge}\n          onRenderText={handleRenderText}\n          disabled={isDisabled}\n        >\n          <DateFieldProvider state={providerState}>\n            <Stack\n              horizontal\n              styles={commandBarStyles}\n              horizontalAlign={\"space-between\"}\n            >\n              {OperatorSelector}\n            </Stack>\n            <Separator styles={separatorStyles} />\n            <Stack horizontal tokens={calendarTokens}>\n              <CalendarControl\n                label={isRange ? \"Start date\" : \"\"}\n                rangeType=\"start\"\n                operator={operatorSelection.key}\n                onSelectDate={workingDateRangeDispatch}\n              />\n              {isRange && (\n                <>\n                  <VerticalDivider styles={dividerStyles} />\n                  <CalendarControl\n                    label=\"End date\"\n                    rangeType=\"end\"\n                    operator={operatorSelection.key}\n                    onSelectDate={workingDateRangeDispatch}\n                  />\n                </>\n              )}\n            </Stack>\n          </DateFieldProvider>\n        </DropdownButton>\n      </TooltipHost>\n    </>\n  );\n};\n\nconst theme = getTheme();\nconst calendarTokens: IStackTokens = {\n  childrenGap: 0,\n};\n\nconst commandBarStyles: Partial<IStackStyles> = {\n  root: {\n    paddingLeft: theme.spacing.s1,\n    paddingRight: theme.spacing.s1,\n  },\n};\n\nconst separatorStyles: Partial<ISeparatorStyles> = {\n  root: {\n    padding: 0,\n  },\n  content: {\n    display: \"block\",\n  },\n};\n\nconst dividerStyles: IVerticalDividerStyles = {\n  wrapper: {\n    height: \"auto\",\n  },\n  divider: {\n    height: \"100%\",\n    backgroundColor: theme.palette.neutralLight,\n  },\n};\n","import { JSONSchema } from \"@apidevtools/json-schema-ref-parser\";\n\nconst defaultQueryable: JSONSchema = {\n  $schema: \"http://json-schema.org/draft-07/schema#\",\n  $id: \"https://example.org/queryables\",\n  type: \"object\",\n  title: \"\",\n  properties: {\n    datetime: {\n      description: \"Datetime\",\n      type: \"string\",\n      title: \"Acquired\",\n      format: \"date-time\",\n      pattern: \"(\\\\+00:00|Z)$\",\n    },\n  },\n};\n\nexport default defaultQueryable;\n","import { JSONSchema } from \"@apidevtools/json-schema-ref-parser\";\nimport { IDropdownOption } from \"@fluentui/react\";\nimport { CqlParser } from \"pages/Explore/utils/cql\";\nimport { getQueryableTitle } from \"pages/Explore/utils/stac\";\n\nconst OMITTED_PREFIXES = [\n  \"geometry\",\n  \"proj:\",\n  \"epsg:\",\n  \"label:\",\n  \"classification:\",\n  \"start_datetime\",\n  \"end_datetime\",\n  \"created\",\n  \"updated\",\n];\nconst OMITTED_TYPES = [\"array\"];\n\nexport const getFilteredQueryables = (queryables: JSONSchema | undefined) => {\n  if (!queryables) return;\n\n  const filteredSchema = Object.assign(\n    Object.create(Object.getPrototypeOf(queryables)),\n    queryables\n  );\n\n  Object.keys(filteredSchema.properties).forEach(key => {\n    const isOmittedPrefix = OMITTED_PREFIXES.some(prefix => key.startsWith(prefix));\n    const isOmittedType = OMITTED_TYPES.includes(\n      filteredSchema.properties[key].type\n    );\n\n    if (isOmittedPrefix || isOmittedType) {\n      delete filteredSchema.properties[key];\n    }\n  });\n\n  return filteredSchema;\n};\n\nexport const getCurrentProperties = (cql: CqlParser | null) => {\n  const existing = cql?.expressions.map(exp => exp.property);\n  return existing || [];\n};\n\nexport const makeDropdownItems = (\n  queryable: JSONSchema | undefined,\n  existingProperties: string[]\n): IDropdownOption[] => {\n  const keys = Object.keys(queryable?.properties || {}).sort();\n  const fields = queryable?.properties;\n\n  return keys.map(key => {\n    const field = fields?.[key] as JSONSchema;\n    const exists = existingProperties.includes(key);\n    const text = getQueryableTitle(field, key);\n    const isAcquired = key === \"datetime\";\n    const title = isAcquired ? \"This filter cannot be removed\" : field.description;\n\n    return {\n      key,\n      text,\n      title,\n      data: field,\n      checked: exists,\n      disabled: isAcquired,\n    };\n  });\n};\n","import { JSONSchema } from \"@apidevtools/json-schema-ref-parser\";\nimport {\n  getTheme,\n  IDropdownOption,\n  Dropdown,\n  IDropdownStyles,\n  ITextStyles,\n  FontSizes,\n  IIconStyles,\n} from \"@fluentui/react\";\nimport { useExploreDispatch } from \"pages/Explore/state/hooks\";\nimport {\n  removeCustomCqlExpression,\n  setCustomCqlExpressions,\n} from \"pages/Explore/state/mosaicSlice\";\nimport { CqlParser } from \"pages/Explore/utils/cql\";\nimport { makeDefaultCqlExpression } from \"pages/Explore/utils/cql/helpers\";\nimport { renderPlaceholder } from \"pages/Explore/utils/dropdownRenderers\";\nimport {\n  getCurrentProperties,\n  getFilteredQueryables,\n  makeDropdownItems,\n} from \"./helpers\";\n\ninterface AddAttributeProps {\n  queryables: JSONSchema | undefined;\n  cql: CqlParser | null;\n}\n\nexport const AddFilter = ({ queryables, cql }: AddAttributeProps) => {\n  const dispatch = useExploreDispatch();\n  const existingProperties = getCurrentProperties(cql);\n  const filteredQueryables = getFilteredQueryables(queryables);\n  const options = makeDropdownItems(filteredQueryables, existingProperties);\n\n  const handleChange = (_: any, item: IDropdownOption | undefined) => {\n    const property = item?.key as string;\n    const field = item?.data as JSONSchema;\n\n    if (item?.selected) {\n      const cql = makeDefaultCqlExpression(property, field);\n      dispatch(setCustomCqlExpressions(cql));\n    } else {\n      dispatch(removeCustomCqlExpression(property));\n    }\n  };\n\n  const title = \"Select filters\";\n  return (\n    <Dropdown\n      multiSelect\n      selectedKeys={existingProperties}\n      ariaLabel={title}\n      placeholder={title}\n      options={options}\n      onRenderTitle={renderPlaceholder(\n        \"Options\",\n        title,\n        displayTextStyles,\n        displayIconStyles\n      )}\n      styles={dropdownStyles}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst theme = getTheme();\nconst displayTextStyles: ITextStyles = {\n  root: {\n    color: theme.palette.themePrimary,\n    fontSize: FontSizes.small,\n  },\n};\nconst displayIconStyles: IIconStyles = {\n  root: {\n    marginRight: 4,\n    width: 12,\n    height: 12,\n  },\n};\n\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  title: {\n    color: theme.palette.themePrimary,\n    fontSize: FontSizes.small,\n    span: {\n      position: \"relative\",\n      top: 1,\n      color: theme.palette.themePrimary,\n      fontSize: FontSizes.small,\n    },\n    i: {\n      width: 14,\n      height: 14,\n      marginRight: 6,\n      top: 4,\n    },\n    border: 0,\n    padding: 0,\n    \"&:hover\": {\n      color: theme.palette.themePrimary + \" !important\",\n    },\n    \"&:focus\": {\n      color: theme.palette.themePrimary + \" !important\",\n    },\n    \"&:focus-visible\": {\n      color: theme.palette.themePrimary + \" !important\",\n    },\n    \"&:focus-within\": {\n      color: theme.palette.themePrimary + \" !important\",\n    },\n    lineHeight: \"unset\",\n    display: \"inline\",\n  },\n  dropdownItemSelected: {\n    backgroundColor: theme.palette.white,\n  },\n  caretDownWrapper: {\n    display: \"none\",\n  },\n  dropdown: {\n    \"&:focus:after\": {\n      border: \"0px \",\n    },\n    \"&:focus-visible\": {\n      outline: \"1px solid\",\n      outlineColor: theme.palette.neutralSecondary,\n      borderRadius: 2,\n    },\n  },\n  callout: {\n    minWidth: 200,\n    marginTop: 5,\n  },\n};\n","import { useMemo } from \"react\";\nimport {\n  IStackStyles,\n  Stack,\n  IStackTokens,\n  Text,\n  ITextStyles,\n  Shimmer,\n  ShimmerElementType,\n  Separator,\n  ISeparatorStyles,\n  getTheme,\n} from \"@fluentui/react\";\nimport { FontSizes, FontWeights } from \"@fluentui/style-utilities\";\n\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport { CqlParser } from \"pages/Explore/utils/cql\";\nimport { useCollectionQueryables } from \"pages/Explore/utils/hooks/useCollectionQueryables\";\nimport { DateField } from \"../../query/DateField\";\nimport defaultQueryable from \"pages/Explore/utils/cql/datetimeDefaultQueryable\";\nimport { AddFilter } from \"../../query/AddFilter/AddFilter\";\n\nconst CustomQueryBuilder = () => {\n  const {\n    collection,\n    query: { cql },\n  } = useExploreSelector(selectCurrentMosaic);\n  const { previewMode } = useExploreSelector(s => s.detail);\n  const isFieldDisabled = previewMode.enabled;\n  const {\n    data: apiQueryable,\n    isError,\n    isLoading,\n  } = useCollectionQueryables(collection?.id);\n\n  const queryable = isError ? defaultQueryable : apiQueryable;\n\n  // Get parsed CQL object\n  const parsedCql = useMemo(() => {\n    if (!collection || !queryable) return null;\n    return new CqlParser(cql, collection, queryable);\n  }, [collection, queryable, cql]);\n\n  const dateControl = parsedCql?.dateValue ? (\n    <DateField dateExpression={parsedCql.dateValue} disabled={isFieldDisabled} />\n  ) : null;\n\n  // Get the rest of the controls needed to represent the CQL\n  const expressions = parsedCql?.getExpressions({ omit: [\"datetime\"] });\n  const controls = expressions?.map(e => e.getControl(isFieldDisabled));\n\n  return (\n    <Stack tokens={controlStackTokens}>\n      <Separator styles={separatorStyles} />\n      <Stack horizontal tokens={customStackTokens} styles={customStackStyles}>\n        <Text styles={textStyle}>Custom filters</Text>\n        <AddFilter queryables={queryable} cql={parsedCql} />\n      </Stack>\n      {isLoading && loadingIndicator}\n      {dateControl}\n      {controls}\n      <Separator styles={separatorStyles} />\n    </Stack>\n  );\n};\n\nexport default CustomQueryBuilder;\n\nconst theme = getTheme();\nconst loadingIndicator = (\n  <Shimmer\n    shimmerElements={[{ type: ShimmerElementType.line, height: 34 }]}\n    shimmerColors={{\n      background: theme.palette.neutralLighter,\n      shimmer: theme.palette.neutralLight,\n      shimmerWave: theme.palette.neutralLighterAlt,\n    }}\n  />\n);\n\nconst controlStackTokens: IStackTokens = {\n  childrenGap: 4,\n};\n\nconst customStackStyles: IStackStyles = {\n  root: {\n    alignItems: \"flexStart\",\n    justifyContent: \"space-between\",\n    marginBottom: \"4px\",\n  },\n};\n\nconst customStackTokens: IStackTokens = {\n  childrenGap: 4,\n};\n\nconst textStyle: Partial<ITextStyles> = {\n  root: {\n    fontWeight: FontWeights.bold,\n    fontSize: FontSizes.size14,\n  },\n};\n\nconst separatorStyles: Partial<ISeparatorStyles> = {\n  root: { padding: 0, margin: 0, height: 13 },\n};\n","import {\n  IconButton,\n  IIconProps,\n  ITextStyles,\n  MessageBar,\n  Stack,\n  StackItem,\n  Text,\n} from \"@fluentui/react\";\nimport { useDataConfig } from \"components/state/DataConfigProvider\";\nimport { CatalogCollection } from \"pages/Catalog2/Catalog.Collection\";\nimport { isValidExplorer } from \"utils/collections\";\nimport { useCollections } from \"utils/requests\";\nimport {\n  cancelIcon,\n  contentStyles,\n  iconButtonStyles,\n} from \"./CatalogSelector.index\";\n\ninterface CatalogSelectorGroupProps {\n  groupId: string;\n  category?: string;\n  onButtonClick: (collectionId: string) => void;\n  onCloseClick: () => void;\n  onBackClick: () => void;\n}\n\nexport const CatalogSelectorGroup: React.FC<CatalogSelectorGroupProps> = ({\n  groupId,\n  category,\n  onButtonClick,\n  onCloseClick,\n  onBackClick,\n}) => {\n  const { groupConfig, collectionConfig } = useDataConfig();\n  const { data: stacCollections } = useCollections();\n\n  const group = groupConfig[groupId];\n\n  if (!group) {\n    return (\n      <MessageBar>\n        <Text>Sorry, this group could not be found.</Text>\n      </MessageBar>\n    );\n  }\n\n  const groupCollections =\n    stacCollections?.collections.filter(c => {\n      const isGroup = c[\"msft:group_id\"] === groupId;\n      const isCategory = category\n        ? collectionConfig[c.id].category === category\n        : true;\n      const isValid = isValidExplorer(c);\n\n      return isGroup && isCategory && isValid;\n    }) || [];\n\n  return (\n    <>\n      <Stack\n        horizontal\n        className={contentStyles.header}\n        horizontalAlign={\"space-between\"}\n        verticalAlign={\"center\"}\n      >\n        <StackItem>\n          <IconButton\n            styles={iconButtonStyles}\n            iconProps={backIcon}\n            ariaLabel=\"Return to dataset list\"\n            title=\"Return to dataset list\"\n            onClick={onBackClick}\n          />\n          <span className={`${contentStyles.title} ${contentStyles.titlePadded}`}>\n            {group.title}\n          </span>\n        </StackItem>\n        <IconButton\n          styles={iconButtonStyles}\n          iconProps={cancelIcon}\n          ariaLabel=\"Close collection selector dialog\"\n          onClick={onCloseClick}\n        />\n      </Stack>\n      <Stack styles={groupBodyStyles}>\n        <Text styles={descStyles}>{group.short_description}</Text>\n        {groupCollections.map(collection => (\n          <CatalogCollection\n            asButton\n            key={collection.id}\n            onButtonClick={onButtonClick}\n            collection={collection}\n          />\n        ))}\n      </Stack>\n    </>\n  );\n};\n\nconst backIcon: IIconProps = {\n  iconName: \"Back\",\n};\n\nconst descStyles: ITextStyles = { root: { padding: \"10px 0px\", maxWidth: 600 } };\nconst groupBodyStyles = { root: { padding: \"10px 32px\" } };\n","import { useId, useBoolean } from \"@fluentui/react-hooks\";\nimport {\n  Modal,\n  getTheme,\n  mergeStyleSets,\n  DefaultButton,\n  IconButton,\n  IIconProps,\n  Stack,\n  IButtonStyles,\n} from \"@fluentui/react\";\nimport { useState } from \"react\";\n\nimport { CatalogToc } from \"pages/Catalog2/Catalog.Toc\";\nimport { CatalogCollectionList } from \"pages/Catalog2/Catalog.CollectionList\";\nimport { CatalogFilter } from \"pages/Catalog2/Catalog.Filter\";\nimport { CatalogFilteredCollectionList } from \"pages/Catalog2/Catalog.FilteredCollectionList\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { selectCurrentMosaic, setCollection } from \"pages/Explore/state/mosaicSlice\";\nimport { useCollections } from \"utils/requests\";\nimport { isValidExplorer } from \"utils/collections\";\nimport { renderText } from \"pages/Explore/utils/dropdownRenderers\";\nimport { useUrlStateV2 } from \"../hooks/useUrlStateV2\";\nimport { GROUP_PREFIX } from \"pages/Catalog2/helpers\";\nimport { CatalogSelectorGroup } from \"./CatalogSelector.Group\";\n\nexport const CatalogSelector = () => {\n  const dispatch = useExploreDispatch();\n  const { collection } = useExploreSelector(selectCurrentMosaic);\n  const { previewMode } = useExploreSelector(s => s.detail);\n  const { data: stacCollections } = useCollections();\n  const [filterText, setFilterText] = useState(\"\");\n  const [selectedGroupId, setSelectedGroupId] = useState<string | null>();\n  const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] =\n    useBoolean(false);\n\n  useUrlStateV2();\n\n  const titleId = useId(\"exp-selector-title\");\n\n  const handleFilterChange = (_: any, newValue?: string | undefined) => {\n    setFilterText(newValue || \"\");\n  };\n\n  const handleSelection = (collectionId: string) => {\n    if (!stacCollections) return;\n\n    if (collectionId.startsWith(GROUP_PREFIX)) {\n      setSelectedGroupId(collectionId.substring(GROUP_PREFIX.length));\n      return;\n    }\n\n    const selectedCollection = stacCollections.collections.find(\n      c => c.id === collectionId\n    );\n    selectedCollection && dispatch(setCollection(selectedCollection));\n    hideModal();\n  };\n\n  const handleBack = () => {\n    setSelectedGroupId(null);\n  };\n\n  const toc = (\n    <div style={tocStyle} className=\"catalog-selector-toc\">\n      <div style={tocStickyStyle}>\n        <CatalogToc\n          setHashOnClick={false}\n          preFilterCollectionFn={isValidExplorer}\n          includeStorageDatasets={false}\n        />\n      </div>\n    </div>\n  );\n\n  const groupList = selectedGroupId && (\n    <CatalogSelectorGroup\n      groupId={selectedGroupId}\n      onButtonClick={handleSelection}\n      onCloseClick={hideModal}\n      onBackClick={handleBack}\n    />\n  );\n\n  const collectionList = (\n    <>\n      <div className={contentStyles.header}>\n        <span className={contentStyles.title} id={titleId}>\n          Select a dataset\n        </span>\n        <CatalogFilter filterText={filterText} onFilterChange={handleFilterChange} />\n        <IconButton\n          styles={iconButtonStyles}\n          iconProps={cancelIcon}\n          ariaLabel=\"Close popup modal\"\n          onClick={hideModal}\n        />\n      </div>\n      <Stack horizontal styles={selectorBodyStyles}>\n        {!filterText && toc}\n        {!filterText && (\n          <div style={selectorListStyles}>\n            <CatalogCollectionList\n              itemsAsButton\n              includeStorageDatasets={false}\n              preFilterCollectionFn={isValidExplorer}\n              setFilterText={setFilterText}\n              onButtonClick={handleSelection}\n            />\n          </div>\n        )}\n        {filterText && (\n          <CatalogFilteredCollectionList\n            itemsAsButton\n            includeStorageDatasets={false}\n            preFilterCollectionFn={isValidExplorer}\n            setFilterText={setFilterText}\n            onButtonClick={handleSelection}\n            filterText={filterText}\n          />\n        )}\n      </Stack>\n    </>\n  );\n\n  const buttonText = collection ? collection.title : \"Select a dataset to visualize\";\n\n  return (\n    <>\n      <DefaultButton\n        ariaLabel=\"Select a dataset to visualize\"\n        title=\"Select a dataset to visualize\"\n        text={buttonText}\n        onRenderText={renderText(\"GlobeLocation\", buttonText)}\n        onClick={showModal}\n        styles={buttonStyles}\n        disabled={previewMode.enabled}\n        data-cy=\"collection-selector\"\n      />\n      <Modal\n        titleAriaId={titleId}\n        isOpen={isModalOpen}\n        onDismiss={hideModal}\n        containerClassName={contentStyles.container}\n      >\n        {selectedGroupId ? groupList : collectionList}\n      </Modal>\n    </>\n  );\n};\n\nconst theme = getTheme();\nexport const contentStyles = mergeStyleSets({\n  container: {\n    display: \"flex\",\n    flexFlow: \"column nowrap\",\n    alignItems: \"stretch\",\n    width: \"90%\",\n    maxWidth: 1300,\n    minHeight: \"98vh\",\n  },\n  header: [\n    theme.fonts.large,\n    {\n      flex: \"1 1 auto\",\n      position: \"sticky\",\n      top: 0,\n      background: theme.palette.white,\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\n      color: theme.palette.neutralPrimary,\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      alignItems: \"center\",\n      padding: \"12px 14px\",\n      zIndex: 1,\n      borderBottom: `1px solid ${theme.palette.neutralLight}`,\n    },\n  ],\n  title: {\n    width: 175,\n    fontWeight: 700,\n    fontSize: 21,\n  },\n  titlePadded: {\n    paddingLeft: 5,\n  },\n});\n\nexport const cancelIcon: IIconProps = { iconName: \"Cancel\" };\n\nexport const iconButtonStyles: IButtonStyles = {\n  root: {\n    color: theme.palette.neutralPrimary,\n    marginLeft: \"auto\",\n    marginTop: 4,\n    marginRight: 2,\n  },\n  rootHovered: {\n    color: theme.palette.neutralDark,\n  },\n};\n\nconst tocStyle: React.CSSProperties = {\n  paddingLeft: 8,\n  paddingTop: 4,\n  borderRight: `1px solid ${theme.palette.neutralLighter}`,\n};\n\nconst tocStickyStyle: React.CSSProperties = {\n  position: \"sticky\",\n  top: 65,\n};\n\nconst buttonStyles: Partial<IButtonStyles> = {\n  flexContainer: {\n    justifyContent: \"start\",\n  },\n  root: {\n    paddingLeft: 8,\n    paddingRight: 4,\n    borderColor: theme.palette.neutralTertiaryAlt,\n    backgroundColor: theme.palette.white,\n  },\n  rootHovered: {\n    backgroundColor: theme.palette.white,\n    borderColor: theme.palette.neutralTertiary,\n  },\n  rootPressed: {\n    backgroundColor: theme.palette.white,\n    borderColor: theme.palette.neutralTertiary,\n  },\n  rootExpanded: {\n    backgroundColor: theme.palette.white,\n    borderColor: theme.palette.neutralTertiary,\n  },\n};\n\nconst selectorBodyStyles = { root: { padding: \"0 5px\" } };\nconst selectorListStyles = { marginTop: 15 };\n","import { useCallback } from \"react\";\nimport {\n  Dropdown,\n  IDropdownOption,\n  IDropdownStyles,\n  getTheme,\n} from \"@fluentui/react\";\nimport { useExploreDispatch } from \"../../../state/hooks\";\nimport {\n  renderPlaceholder,\n  renderTitle,\n} from \"pages/Explore/utils/dropdownRenderers\";\n\ntype StateSelectorProps = {\n  options: IDropdownOption[];\n  action: Function;\n  title: string;\n  icon: string;\n  selectedKey: string | null | undefined;\n  disabled?: boolean;\n  getStateValFn?: (key: string | number) => any;\n  cyId: string;\n};\n\nconst StateSelector = ({\n  options,\n  action,\n  title,\n  icon,\n  selectedKey,\n  disabled = false,\n  cyId,\n  getStateValFn,\n}: StateSelectorProps) => {\n  const dispatch = useExploreDispatch();\n\n  const handleSelectionChange = useCallback(\n    (_: any, option: IDropdownOption | undefined): void => {\n      if (option) {\n        const payload = getStateValFn ? getStateValFn(option.key) : option.key;\n        dispatch(action(payload));\n      }\n    },\n    [action, dispatch, getStateValFn]\n  );\n\n  return (\n    <div>\n      <Dropdown\n        options={options}\n        selectedKey={selectedKey}\n        onChange={handleSelectionChange}\n        onRenderTitle={renderTitle(icon)}\n        onRenderPlaceholder={renderPlaceholder(icon, title)}\n        ariaLabel={title}\n        title={title}\n        disabled={disabled}\n        data-cy={cyId}\n        styles={dropdownStyles}\n      />\n    </div>\n  );\n};\n\nexport default StateSelector;\n\nconst theme = getTheme();\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  title: {\n    borderColor: theme.palette.neutralTertiaryAlt,\n    \":hover\": {\n      borderColor: theme.palette.neutralTertiary + \" !important\",\n    },\n  },\n};\n","import { IDropdownOption } from \"@fluentui/react\";\nimport { useEffect } from \"react\";\nimport { useCollectionMosaicInfo } from \"../../../utils/hooks\";\nimport { useExploreDispatch, useExploreSelector } from \"../../../state/hooks\";\nimport { selectCurrentMosaic, setMosaicQuery } from \"../../../state/mosaicSlice\";\nimport StateSelector from \"./StateSelector\";\n\nconst MosaicPresetSelector = () => {\n  const dispatch = useExploreDispatch();\n  const { collection, query, isCustomQuery } =\n    useExploreSelector(selectCurrentMosaic);\n  const { previewMode } = useExploreSelector(s => s.detail);\n\n  const { isSuccess, data: mosaicInfo } = useCollectionMosaicInfo(collection?.id);\n\n  useEffect(() => {\n    if (mosaicInfo && query.name === null) {\n      dispatch(setMosaicQuery(mosaicInfo.mosaics[0]));\n    }\n  }, [dispatch, mosaicInfo, query.name]);\n\n  const mosaicOptions =\n    isSuccess && mosaicInfo?.mosaics\n      ? mosaicInfo.mosaics.map((mosaic): IDropdownOption => {\n          return { key: mosaic.name || \"\", text: mosaic.name || \"\" };\n        })\n      : [];\n\n  const getQueryPresetByName = (key: string | number) => {\n    return mosaicInfo?.mosaics.find(mosaic => mosaic.name === key);\n  };\n\n  return (\n    <StateSelector\n      title=\"Select a preset filter to find data\"\n      icon=\"FluentFilter\"\n      action={setMosaicQuery}\n      options={mosaicOptions}\n      selectedKey={query.name}\n      getStateValFn={getQueryPresetByName}\n      disabled={!collection?.id || isCustomQuery || previewMode.enabled}\n      cyId=\"mosaic-selector\"\n    />\n  );\n};\n\nexport default MosaicPresetSelector;\n","import { isEqual } from \"lodash-es\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { selectCurrentCql } from \"pages/Explore/state/mosaicSlice\";\nimport { CqlExpressionParser } from \"pages/Explore/utils/cql\";\nimport { CqlExpression } from \"pages/Explore/utils/cql/types\";\n\n// Test the current mosaic cql to determine if a property/value combo is present.\n// Assumes only a single level of nesting, as that is what the Explorer can produce.\nconst useCqlPropertyMatcher = () => {\n  const cql = useExploreSelector(selectCurrentCql);\n\n  return (property: string, value: string | number) => {\n    const expression = cql\n      .map((exp: CqlExpression) => new CqlExpressionParser(exp))\n      .find(parser => parser.property === property);\n\n    // If the expression does not include this property at all, then we must\n    // assume this render option is potentially valid.\n    if (!expression) {\n      return true;\n    }\n\n    // Check that the operator and value indicate that we want to include the render option\n    const inclusiveOperators = [\"=\", \">\", \">=\", \"in\", \"between\", \"like\"];\n    const values = Array.isArray(expression.value)\n      ? expression.value\n      : [expression.value];\n    return (\n      (isEqual(values, value) || values.includes(value)) &&\n      inclusiveOperators.includes(expression.operator)\n    );\n  };\n};\n\nexport default useCqlPropertyMatcher;\n","import { useEffect } from \"react\";\nimport { IDropdownOption } from \"@fluentui/react\";\n\nimport { useCollectionMosaicInfo } from \"../../../utils/hooks\";\nimport { selectCurrentMosaic, setRenderOption } from \"../../../state/mosaicSlice\";\nimport { useExploreDispatch, useExploreSelector } from \"../../../state/hooks\";\nimport StateSelector from \"./StateSelector\";\nimport useCqlPropertyMatcher from \"./hooks/useCqlPropertyMatcher\";\nimport { every } from \"lodash-es\";\n\nconst RenderOptionsSelector = () => {\n  const dispatch = useExploreDispatch();\n  const { collection, renderOption } = useExploreSelector(selectCurrentMosaic);\n  const { data: mosaicInfo } = useCollectionMosaicInfo(collection?.id);\n\n  // Set a default render option if none is selected\n  useEffect(() => {\n    if (mosaicInfo?.renderOptions && renderOption === null) {\n      dispatch(setRenderOption(mosaicInfo.renderOptions[0]));\n    }\n  }, [dispatch, mosaicInfo, renderOption]);\n\n  const renderers = mosaicInfo?.renderOptions ?? [];\n\n  const matcher = useCqlPropertyMatcher();\n  const options = renderers.map((renderer): IDropdownOption => {\n    const enabled = every(\n      renderer.conditions?.map(condition =>\n        matcher(condition.property, condition.value)\n      )\n    );\n    return { key: renderer.name, text: renderer.name, disabled: !enabled };\n  });\n\n  const getOptionByName = (key: string | number) => {\n    return mosaicInfo?.renderOptions?.find(mosaic => mosaic.name === key);\n  };\n\n  // If the currently selected option is now disabled, move to the first\n  // non-disabled option\n  const enabledSelectedKey = options.find(\n    option => option.key === renderOption?.name\n  )?.disabled\n    ? options.find(option => !option.disabled)?.key\n    : renderOption?.name;\n\n  if (enabledSelectedKey !== renderOption?.name) {\n    if (enabledSelectedKey) {\n      const newOption = getOptionByName(enabledSelectedKey);\n      newOption && dispatch(setRenderOption(newOption));\n    }\n  }\n  return (\n    <StateSelector\n      title=\"Select a rendering option\"\n      icon=\"Layer\"\n      action={setRenderOption}\n      options={options}\n      selectedKey={renderOption?.name}\n      getStateValFn={getOptionByName}\n      disabled={!Boolean(mosaicInfo?.renderOptions)}\n      cyId=\"render-selector\"\n    />\n  );\n};\nexport default RenderOptionsSelector;\n","import { IStackTokens, Stack } from \"@fluentui/react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nimport CustomQueryBuilder from \"../selectors/CustomQueryBuilder\";\nimport ErrorFallback, { handleErrorBoundaryError } from \"components/ErrorFallback\";\nimport {\n  CatalogSelector,\n  MosaicPresetSelector,\n  RenderOptionsSelector,\n} from \"../selectors\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\n\ninterface SelectorPaneProps {\n  isCustomQuery: boolean;\n}\n\nconst SelectorPane = ({ isCustomQuery }: SelectorPaneProps) => {\n  const { isLoadingInitialState } = useExploreSelector(state => state.mosaic);\n  const contents = !isLoadingInitialState && (\n    <>\n      <CatalogSelector />\n      {!isCustomQuery && <MosaicPresetSelector />}\n      {isCustomQuery && <CustomQueryBuilder />}\n      <RenderOptionsSelector />\n    </>\n  );\n  return (\n    <ErrorBoundary\n      FallbackComponent={ErrorFallback}\n      onError={handleErrorBoundaryError}\n    >\n      <Stack tokens={stackTokens}>{contents}</Stack>\n    </ErrorBoundary>\n  );\n};\n\nexport default SelectorPane;\n\nconst stackTokens: IStackTokens = {\n  childrenGap: 6,\n};\n","import { useCallback } from \"react\";\nimport { FontSizes, Link, Stack } from \"@fluentui/react\";\n\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport {\n  resetMosaicState,\n  selectCurrentMosaic,\n} from \"pages/Explore/state/mosaicSlice\";\n\nconst ResetSelectors = () => {\n  const dispatch = useExploreDispatch();\n  const mosaic = useExploreSelector(selectCurrentMosaic);\n  const disabled = !mosaic.collection;\n\n  const handleClick = useCallback(() => {\n    dispatch(resetMosaicState(mosaic.layerId));\n  }, [dispatch, mosaic.layerId]);\n\n  return (\n    <Stack horizontal horizontalAlign={\"end\"}>\n      <Link\n        disabled={disabled}\n        styles={buttonStyles}\n        onClick={handleClick}\n        title=\"Clear all selectors for current layer\"\n        data-cy=\"reset\"\n      >\n        Clear\n      </Link>\n    </Stack>\n  );\n};\n\nexport default ResetSelectors;\n\nexport const buttonStyles = {\n  root: {\n    fontSize: FontSizes.small,\n  },\n};\n","import { useCallback, useRef } from \"react\";\nimport { Link } from \"@fluentui/react\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { buttonStyles } from \"./ResetSelectors\";\nimport {\n  selectCurrentMosaic,\n  setCustomCqlExpressions,\n  setIsCustomQuery,\n} from \"pages/Explore/state/mosaicSlice\";\nimport { useCollectionMosaicInfo } from \"pages/Explore/utils/hooks\";\n\nconst AdvancedModeButton = () => {\n  const dispatch = useExploreDispatch();\n  const { isCustomQuery, collection } = useExploreSelector(selectCurrentMosaic);\n  const { previewMode } = useExploreSelector(s => s.detail);\n  const { data: mosaicInfo, isSuccess } = useCollectionMosaicInfo(collection?.id);\n  const linkRef = useRef<HTMLElement>(null);\n\n  const handleClick = useCallback(() => {\n    dispatch(setIsCustomQuery(true));\n\n    if (isSuccess && mosaicInfo) {\n      dispatch(setCustomCqlExpressions(mosaicInfo.defaultCustomQuery));\n    }\n  }, [dispatch, isSuccess, mosaicInfo]);\n\n  const disabled = !collection || isCustomQuery || previewMode.enabled;\n  return (\n    <>\n      <Link\n        ref={linkRef}\n        styles={buttonStyles}\n        onClick={handleClick}\n        disabled={disabled}\n        data-cy=\"customize-query\"\n        title=\"Customize the current filters applied to this dataset\"\n      >\n        Advanced\n      </Link>\n    </>\n  );\n};\n\nexport default AdvancedModeButton;\n","import {\n  FontSizes,\n  FontWeights,\n  IStackStyles,\n  IStackTokens,\n  ITextStyles,\n  IVerticalDividerStyles,\n  Stack,\n  Text,\n  VerticalDivider,\n} from \"@fluentui/react\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\n\nimport AdvancedModeButton from \"./AdvancedModeButton\";\nimport ResetSelectors from \"./ResetSelectors\";\n\nexport const TitleHeader = () => {\n  const { collection } = useExploreSelector(selectCurrentMosaic);\n  const commandBar = (\n    <Stack\n      horizontal\n      horizontalAlign=\"end\"\n      tokens={stackTokens}\n      styles={commandBarStyles}\n    >\n      <AdvancedModeButton />\n      <VerticalDivider styles={dividerStyles} />\n      <ResetSelectors />\n    </Stack>\n  );\n  return (\n    <Stack horizontal styles={stackStyles}>\n      <Text styles={sidebarTitleStyles} block>\n        Explore datasets\n      </Text>\n      {collection && commandBar}\n    </Stack>\n  );\n};\n\nconst stackTokens: IStackTokens = {\n  childrenGap: 5,\n};\nconst stackStyles: Partial<IStackStyles> = {\n  root: {\n    justifyContent: \"space-between\",\n  },\n};\nconst dividerStyles: Partial<IVerticalDividerStyles> = {\n  wrapper: {\n    height: 15,\n    marginTop: 9,\n    marginLeft: 0,\n  },\n};\nconst sidebarTitleStyles: Partial<ITextStyles> = {\n  root: {\n    padding: \"5px 0\",\n    fontSize: FontSizes.mediumPlus,\n    fontWeight: FontWeights.bold,\n  },\n};\nconst commandBarStyles: Partial<IStackStyles> = {\n  root: {\n    marginRight: 2,\n  },\n};\n","import { Spinner, SpinnerSize } from \"@fluentui/react\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { loadDataFromQuery } from \"pages/Explore/state/mosaicSlice\";\nimport { useEffect } from \"react\";\n\nconst InitialStateLoader = () => {\n  const dispatch = useExploreDispatch();\n  const { isLoadingInitialState } = useExploreSelector(state => state.mosaic);\n\n  useEffect(() => {\n    dispatch(loadDataFromQuery(true));\n  }, [dispatch]);\n\n  if (isLoadingInitialState) {\n    return <Spinner size={SpinnerSize.large} label=\"Loading initial state...\" />;\n  }\n  return null;\n};\n\nexport default InitialStateLoader;\n","import ItemDetailPanel from \"../../ItemDetailPanel\";\nimport SearchResultsPane from \"../panes/SearchResults/SearchResultsPane\";\nimport SelectorPane from \"../panes/SelectorPane\";\nimport TitleHeader from \"../TitleHeader\";\nimport InitialStateLoader from \"../selectors/InitialStateLoader\";\nimport { IStackStyles, IStackTokens, Stack } from \"@fluentui/react\";\nimport { useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport { useStacFilter } from \"pages/Explore/utils/hooks\";\nimport { useMemo } from \"react\";\n\ninterface CollectionItemFilterProps {\n  sidebarVisibility: string;\n}\n\nexport const CollectionItemFilter: React.FC<CollectionItemFilterProps> = ({\n  sidebarVisibility,\n}) => {\n  const { isCustomQuery } = useExploreSelector(selectCurrentMosaic);\n  const {\n    selectedItem,\n    display: { showItemDetailsPanel: showItemDetail },\n  } = useExploreSelector(s => s.detail);\n  const isDetailView = Boolean(selectedItem) && showItemDetail;\n  const { searchPanelDisplay, detailViewDisplay } = useMemo(() => {\n    return {\n      searchPanelDisplay: isDetailView ? \"none\" : \"flex\",\n      detailViewDisplay: isDetailView ? \"flex\" : \"none\",\n    };\n  }, [isDetailView]);\n  const stacFilter = useStacFilter();\n  const searchPanelStyles: Partial<IStackStyles> = {\n    root: {\n      visibility: sidebarVisibility,\n      display: searchPanelDisplay,\n      transition: \"visibility 0.1s\",\n      padding: 10,\n      paddingBottom: 20,\n    },\n  };\n\n  const itemDetailPanelStyles: Partial<IStackStyles> = {\n    root: {\n      height: \"100%\",\n      minHeight: \"-webkit-fill-available\",\n      display: detailViewDisplay,\n    },\n  };\n  return (\n    <>\n      <Stack\n        id=\"explorer-sidebar-selectors\"\n        styles={searchPanelStyles}\n        tokens={stackTokens}\n      >\n        <TitleHeader />\n        <InitialStateLoader />\n        <SelectorPane isCustomQuery={isCustomQuery} />\n      </Stack>\n      <SearchResultsPane request={stacFilter} visible={!isDetailView} />\n      <Stack styles={itemDetailPanelStyles} tokens={stackTokens}>\n        <ItemDetailPanel />\n      </Stack>\n    </>\n  );\n};\n\nconst stackTokens: IStackTokens = {\n  childrenGap: 5,\n};\n","import { Text } from \"@fluentui/react\";\nimport { IMosaicRenderOption } from \"pages/Explore/types\";\nimport { IStacCollection } from \"types/stac\";\nimport { ExporterHeader } from \"../BaseExporter/ExporterHeader\";\n\ninterface Props {\n  collection: IStacCollection | null;\n  renderOption: IMosaicRenderOption | null;\n  handleClose: () => void;\n}\nexport const ImageIntro: React.FC<Props> = ({\n  collection,\n  renderOption,\n  handleClose,\n}) => {\n  if (!collection) return null;\n\n  return (\n    <ExporterHeader\n      title=\"Image Export\"\n      subTitle={`${collection.title || collection.id}, ${renderOption?.name}`}\n      onClose={handleClose}\n    >\n      <Text>Generate an image of this dataset. </Text>\n      <Text>\n        The image will be generated using the current search. Draw a bounding box for\n        the image and select the image size. The image returned will be at the size\n        provided and will contain the area drawn in the bounding box. Note that the\n        image bounds may be larger than the drawn area.\n      </Text>\n      <Text>Click on the generated image to download or share.</Text>\n    </ExporterHeader>\n  );\n};\n","import React from \"react\";\nimport {\n  ContextualMenu,\n  getTheme,\n  IconButton,\n  mergeStyleSets,\n  Stack,\n} from \"@fluentui/react\";\nimport { useBoolean, useId } from \"@fluentui/react-hooks\";\n\ninterface ImageSettingsProps {\n  showBranding: boolean;\n  onSettingsChange: (key: string, value: boolean) => void;\n}\n\nexport const ImageSettings: React.FC<ImageSettingsProps> = ({\n  showBranding,\n  onSettingsChange,\n}) => {\n  const [showMenu, { setFalse: hideMenu, toggle }] = useBoolean(false);\n\n  const buttonId = useId(\"query-dropdown-button\");\n  return (\n    <Stack>\n      <IconButton\n        id={buttonId}\n        className={styles.button}\n        iconProps={{ iconName: \"Settings\" }}\n        title=\"Settings\"\n        onClick={toggle}\n      />\n      <ContextualMenu\n        target={`#${buttonId}`}\n        hidden={!showMenu}\n        onDismiss={hideMenu}\n        items={[\n          {\n            key: \"branding\",\n            text: \"Include branding\",\n            canCheck: true,\n            checked: showBranding,\n            onClick: e => {\n              e?.preventDefault();\n              onSettingsChange(\"showBranding\", !showBranding);\n            },\n          },\n        ]}\n      />\n    </Stack>\n  );\n};\n\nconst theme = getTheme();\nconst styles = mergeStyleSets({\n  button: {\n    color: theme.semanticColors.bodyText,\n    \"&:hover\": {\n      color: theme.semanticColors.bodyText,\n    },\n  },\n});\n","import {\n  DefaultButton,\n  Dropdown,\n  FontSizes,\n  getTheme,\n  IDropdownOption,\n  IDropdownStyles,\n  IStackStyles,\n  ITextFieldStyles,\n  ITextStyles,\n  PrimaryButton,\n  Stack,\n  StackItem,\n  Text,\n  TextField,\n} from \"@fluentui/react\";\nimport { AxiosError } from \"axios\";\nimport { isEmpty } from \"lodash-es\";\n\nimport {\n  addImage,\n  selectImageSettings,\n  selectImagesByCollection,\n  updateImageSettings,\n  removeImage,\n} from \"pages/Explore/state/imageSlice\";\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport {\n  setBboxDrawMode,\n  setDrawnShape,\n  setShowSidebar,\n  setSidebarPanel,\n} from \"pages/Explore/state/mapSlice\";\nimport { selectCurrentMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport { makeFilterBody } from \"pages/Explore/utils/hooks\";\nimport { collectionFilter } from \"pages/Explore/utils/stac\";\nimport { useImageExport } from \"utils/requests\";\nimport { ImageExportError } from \"../BaseExporter/ImageExportError\";\nimport { ImageIntro } from \"./ImageIntro\";\nimport { ImageResults } from \"../BaseExporter/ImageResults\";\nimport { ImageSettings } from \"./ImageSettings\";\nimport { validate, getDefaultImageSettings } from \"./helpers\";\nimport { ImageConfig, ImageMosaicSettings } from \"./types\";\nimport { SidebarPanels } from \"pages/Explore/enums\";\nimport { useEffect } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { MOBILE_WIDTH } from \"utils/constants\";\n\nexport const ImageExporter: React.FC = () => {\n  const dispatch = useExploreDispatch();\n  const { collection, renderOption, query, layer } =\n    useExploreSelector(selectCurrentMosaic);\n  const { zoom, sidebarPanel, drawnShape, isDrawBboxMode } = useExploreSelector(\n    s => s.map\n  );\n  const images = useExploreSelector(s =>\n    selectImagesByCollection(s, collection?.id)\n  );\n  let imageSettings = useExploreSelector(s =>\n    selectImageSettings(s, collection?.id)\n  );\n  const isMobileView = useMedia(`(max-width: ${MOBILE_WIDTH}px)`);\n\n  if (isEmpty(imageSettings)) {\n    imageSettings = getDefaultImageSettings();\n  }\n\n  // Build up the config payload to be used to request an Image\n  // based on the current map/filter state.\n  const collectionFragment = collectionFilter(collection?.id);\n  const cql = makeFilterBody([collectionFragment], query, query.cql);\n  const mosaicConfig: ImageMosaicSettings = {\n    geometry: drawnShape?.geometry || null,\n    zoom: Math.round(zoom),\n    render_params: renderOption?.options + `&collection=${collection?.id}`,\n    cql,\n  };\n\n  const requestBody: ImageConfig = { ...mosaicConfig, ...imageSettings };\n\n  const {\n    data: ImageResp,\n    isLoading,\n    error,\n    refetch: fetchImage,\n    remove: removeImageResponse,\n  } = useImageExport(requestBody);\n\n  useEffect(() => {\n    // When an Image response is received, add it to the list of Images\n    // for this collection and reset the payload state used to request it.\n    if (ImageResp && collection && !images.find(a => a.url === ImageResp.url)) {\n      dispatch(\n        addImage({\n          collectionId: collection.id,\n          image: ImageResp,\n        })\n      );\n      removeImageResponse();\n    }\n  }, [ImageResp, collection, dispatch, images, removeImageResponse]);\n\n  const handleExportClick = () => {\n    fetchImage({ stale: true });\n  };\n\n  const handleChange = (\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    newValue: string | undefined\n  ) => {\n    const fieldName = e.currentTarget.name;\n    const value = parseInt(newValue || \"0\", 10);\n    handleSettingsChange(fieldName, value);\n  };\n\n  const handleImageSizeChange = (_: any, option: IDropdownOption | undefined) => {\n    const v = option?.key as string;\n    let cols = imageSettings.cols;\n    let rows = imageSettings.rows;\n    if (v && v !== \"custom\") {\n      const dims = v.split(\"x\").map((v, i) => parseInt(v));\n      cols = dims[0];\n      rows = dims[1];\n    }\n    collection?.id &&\n      dispatch(\n        updateImageSettings({\n          collectionId: collection?.id,\n          imageSettings: {\n            ...imageSettings,\n            imageSize: v,\n            cols: cols,\n            rows: rows,\n          },\n        })\n      );\n  };\n\n  const handleSettingsChange = (\n    key: string,\n    value: string | number | boolean | undefined\n  ) => {\n    collection?.id &&\n      dispatch(\n        updateImageSettings({\n          collectionId: collection?.id,\n          imageSettings: {\n            ...imageSettings,\n            [key]: value,\n          },\n        })\n      );\n  };\n\n  const handleClose = () => {\n    dispatch(setSidebarPanel(SidebarPanels.itemSearch));\n    dispatch(setDrawnShape(null));\n    dispatch(setBboxDrawMode(false));\n    removeImageResponse();\n  };\n\n  const validation = validate(requestBody, layer, drawnShape);\n  const exportEnabled = !isLoading && validation.isValid;\n  const drawExportEnabled = !isDrawBboxMode;\n  const customImageSize = imageSettings?.imageSize === \"custom\";\n\n  const drawButtonText = drawnShape ? \"Re-draw export area\" : \"Draw export area\";\n  const drawButton = (\n    <StackItem>\n      <Text block>Start by selecting the area you want to capture on the map.</Text>\n      <DefaultButton\n        styles={buttonStyles}\n        text={drawButtonText}\n        iconProps={{ iconName: \"SingleColumnEdit\" }}\n        onClick={() => {\n          dispatch(setBboxDrawMode(true));\n          isMobileView && dispatch(setShowSidebar(false));\n          removeImageResponse();\n        }}\n        disabled={!drawExportEnabled}\n      />\n    </StackItem>\n  );\n\n  const panel = (\n    <Stack styles={containerStyles} tokens={panelTokens}>\n      <ImageIntro\n        collection={collection}\n        renderOption={renderOption}\n        handleClose={handleClose}\n      />\n      {drawButton}\n      <Stack\n        horizontal\n        horizontalAlign=\"start\"\n        tokens={stackTokens}\n        verticalAlign={\"start\"}\n      >\n        <Dropdown\n          label=\"Image Size\"\n          options={imageSizes}\n          defaultSelectedKey={imageSettings.imageSize}\n          onChange={handleImageSizeChange}\n          styles={dimensionsStyles}\n        />\n      </Stack>\n      {customImageSize && (\n        <Stack horizontal horizontalAlign=\"start\" tokens={stackTokens}>\n          <TextField\n            type=\"number\"\n            label=\"Width (px)\"\n            name=\"cols\"\n            min={2}\n            max={48}\n            step={1}\n            defaultValue={imageSettings.cols.toString()}\n            onChange={handleChange}\n            styles={inputStyles}\n            errorMessage={validation.frames[0]}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Height (px)\"\n            name=\"rows\"\n            min={1}\n            step={1}\n            defaultValue={imageSettings.rows.toString()}\n            styles={inputStyles}\n            onChange={handleChange}\n            errorMessage={validation.duration[0]}\n          />\n        </Stack>\n      )}\n      <StackItem shrink={false}>\n        <Stack\n          horizontal\n          horizontalAlign=\"start\"\n          verticalAlign=\"center\"\n          tokens={stackTokens}\n          styles={buttonStyles}\n        >\n          <PrimaryButton disabled={!exportEnabled} onClick={handleExportClick}>\n            Generate Image\n          </PrimaryButton>\n          <ImageSettings\n            showBranding={imageSettings.showBranding}\n            onSettingsChange={handleSettingsChange}\n          />\n        </Stack>\n\n        {Boolean(validation.map.length) && (\n          <Text block styles={errorTextStyles}>\n            * {validation.map[0]}\n          </Text>\n        )}\n        <ImageExportError error={error as AxiosError<any, any>} />\n      </StackItem>\n\n      {(images.length || isLoading) && collection && (\n        <ImageResults\n          collectionId={collection.id}\n          images={images}\n          isLoading={isLoading}\n          onRemove={removeImage}\n        />\n      )}\n    </Stack>\n  );\n\n  return sidebarPanel === SidebarPanels.image ? panel : null;\n};\n\nconst theme = getTheme();\nexport const stackTokens = { childrenGap: 6 };\nconst panelTokens = { childrenGap: 10 };\n\nconst imageSizes: IDropdownOption[] = [\n  {\n    key: \"1920x1080\",\n    text: \"Large (1920 x 1080)\",\n    title: \"Use to generate a Teams background\",\n  },\n  {\n    key: \"1280x720\",\n    text: \"Medium (1280 x 720)\",\n    title: \"Medium sized image with 16:9 aspect ratio\",\n  },\n  {\n    key: \"1080x1080\",\n    text: \"Square (1080 x 1080)\",\n    title: \"Use for social media posts\",\n  },\n  { key: \"custom\", text: \"Custom\", title: \"Enter image size manually\" },\n];\n\nconst containerStyles: Partial<IStackStyles> = {\n  root: {\n    height: \"100%\",\n    overflowY: \"auto\",\n    overflowX: \"clip\",\n    padding: 10,\n  },\n};\n\nconst inputStyles: Partial<ITextFieldStyles> = {\n  root: {\n    width: 136,\n  },\n};\n\nconst dimensionsStyles: Partial<IDropdownStyles> = {\n  root: {\n    width: 190,\n  },\n};\n\nconst buttonStyles: Partial<IStackStyles> = {\n  root: {\n    marginTop: 10,\n  },\n};\n\nconst errorTextStyles: Partial<ITextStyles> = {\n  root: {\n    color: theme.semanticColors.errorText,\n    fontSize: FontSizes.small,\n  },\n};\n","import { ImageExporter } from \"./ImageExporter.index\";\n\nexport default ImageExporter;\n","import { IDrawnShape, ILayerState } from \"pages/Explore/types\";\nimport { DEFAULT_MIN_ZOOM } from \"pages/Explore/utils/constants\";\nimport { ImageConfig, ImageSettings, ImageValidation } from \"./types\";\n\nexport const validate = (\n  imageConfig: ImageConfig,\n  layer: ILayerState[\"layer\"] | null,\n  drawnShape: IDrawnShape | null\n) => {\n  const { cols, rows, zoom } = imageConfig;\n  const validations: ImageValidation = {\n    start: [],\n    frames: [],\n    duration: [],\n    step: [],\n    map: [],\n    isValid: false,\n  };\n\n  if (!cols) {\n    validations.frames.push(\"Required.\");\n  }\n\n  if (!rows) {\n    validations.frames.push(\"Required.\");\n  }\n\n  if (zoom < (layer?.minZoom || DEFAULT_MIN_ZOOM)) {\n    validations.map.push(\"Zoom in to see layer.\");\n  }\n\n  if (!drawnShape) {\n    validations.map.push(\"Please draw an export area on the map.\");\n  }\n\n  validations.isValid =\n    Object.values(validations).reduce(\n      (acc, curr) => acc + (Array.isArray(curr) ? curr.length : 0),\n      0\n    ) === 0;\n\n  return validations;\n};\n\nexport const getDefaultImageSettings = (): ImageSettings => ({\n  cols: 1280,\n  rows: 720,\n  imageSize: \"1280x720\",\n  showBranding: true,\n});\n","import { useEffect, useMemo } from \"react\";\nimport { IStackStyles, Stack, StackItem } from \"@fluentui/react\";\n\nimport { useExploreDispatch, useExploreSelector } from \"pages/Explore/state/hooks\";\nimport { resetMosaic } from \"pages/Explore/state/mosaicSlice\";\nimport { resetDetail } from \"pages/Explore/state/detailSlice\";\nimport MinimizeButton from \"../controls/ToggleSidebarButton\";\nimport { SIDEBAR_WIDTH } from \"../../utils/constants\";\nimport AnimationExporter from \"./exporters/AnimationExporter\";\nimport { CollectionItemFilter } from \"./CollectionItemFilter/CollectionItemFilter\";\nimport ImageExporter from \"./exporters/ImageExporter\";\nimport { SidebarPanels } from \"pages/Explore/enums\";\n\nexport const Sidebar = () => {\n  const dispatch = useExploreDispatch();\n  const isSidebarVisible = useExploreSelector(s => s.map.showSidebar);\n  const { showSelectedItemAsLayer: isItemLayerVisible } = useExploreSelector(\n    s => s.detail.display\n  );\n  const { sidebarPanel } = useExploreSelector(s => s.map);\n\n  const { width, sidebarVisibility } = useMemo(() => {\n    return {\n      width: isSidebarVisible ? SIDEBAR_WIDTH : 0,\n      sidebarVisibility: isSidebarVisible ? \"visible\" : \"hidden\",\n    };\n  }, [isSidebarVisible]);\n\n  useEffect(() => {\n    return () => {\n      // When Explore unmounts, reset the mosaic state so it's fresh when the\n      // user navigates back\n      dispatch(resetMosaic());\n      dispatch(resetDetail());\n    };\n  }, [dispatch]);\n\n  const sidebarStyles: Partial<IStackStyles> = {\n    root: {\n      width: width,\n      visibility: sidebarVisibility,\n      transition: \"width 0.3s\",\n      minWidth: 8,\n    },\n  };\n\n  // Classes used to sync state via responsive media queries in css\n  let visibilityClass =\n    !isSidebarVisible || isItemLayerVisible ? \"explorer-sidebar-hidden\" : \"\";\n\n  const registeredPanels = {\n    [SidebarPanels.itemSearch]: (\n      <CollectionItemFilter sidebarVisibility={sidebarVisibility} />\n    ),\n    [SidebarPanels.animation]: <AnimationExporter />,\n    [SidebarPanels.image]: <ImageExporter />,\n  };\n\n  return (\n    <>\n      <StackItem\n        styles={sidebarStyles}\n        className={`explorer-sidebar ${visibilityClass}`}\n      >\n        <Stack id=\"explorer-sidebar-content\" styles={sidebarStackStyles}>\n          {registeredPanels[sidebarPanel]}\n        </Stack>\n      </StackItem>\n      <MinimizeButton />\n    </>\n  );\n};\n\nconst sidebarStackStyles: Partial<IStackStyles> = {\n  root: {\n    height: \"100%\",\n  },\n};\n","import { CSSProperties } from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"azure-maps-control/dist/atlas.min.css\";\nimport { IStackStyles, Stack, StackItem, useTheme } from \"@fluentui/react\";\n\nimport { store } from \"./state/store\";\nimport \"./explorer.css\";\n\nimport Layout from \"components/Layout\";\nimport SEO from \"components/Seo\";\nimport ExploreMap from \"./components/Map\";\nimport Sidebar from \"./components/Sidebar\";\nimport { useWindowSize } from \"react-use\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport ErrorFallback, { handleErrorBoundaryError } from \"components/ErrorFallback\";\n\n// TODO: track heights rather than hard code them\nconst heights = {\n  header: 55,\n  footer: 27,\n  buffer: 1,\n};\n\nconst Explorer = () => {\n  const theme = useTheme();\n  const { height } = useWindowSize();\n\n  const bodyHeight = height - heights.header - heights.footer - heights.buffer;\n  const mainStyle: CSSProperties = { height: bodyHeight };\n\n  return (\n    <Layout onGrid={false} allowAnnouncement={false} mainStyle={mainStyle}>\n      <SEO title=\"Explorer\" description=\"Explore Planetary Computer datasets\" />\n      <Provider store={store}>\n        <Stack horizontal styles={contentStyles}>\n          <Sidebar />\n          <StackItem\n            styles={{\n              root: {\n                borderLeft: \"1px solid\",\n                borderLeftColor: theme.palette.neutralLight,\n              },\n            }}\n            grow={1}\n          >\n            <ErrorBoundary\n              FallbackComponent={ErrorFallback}\n              onError={handleErrorBoundaryError}\n            >\n              <ExploreMap />\n            </ErrorBoundary>\n          </StackItem>\n        </Stack>\n      </Provider>\n    </Layout>\n  );\n};\n\nexport default Explorer;\n\nconst contentStyles: Partial<IStackStyles> = {\n  root: {\n    height: \"100%\",\n  },\n};\n"],"names":["ImageViewer","ImageResponse","onClose","collectionId","handleDownload","useCallback","window","open","url","shareUrl","isOpen","onDismiss","horizontal","horizontalAlign","style","headerStyle","styles","iconButtonStyles","iconProps","cancelIcon","ariaLabel","onClick","viewerBodyStyle","tokens","stackTokens","verticalAlign","urlCopyStyle","title","downloadIconProps","src","imageStyles","alt","imageFit","ImageFit","theme","getTheme","iconName","childrenGap","root","color","palette","neutralPrimary","marginTop","marginRight","rootHovered","neutralDark","display","margin","minHeight","backgroundColor","neutralLighter","image","maxWidth","maxHeight","marginLeft","height","width","marginBottom","border","neutralLight","borderRadius","padding","animationSlice","createSlice","name","initialState","animations","settings","reducers","addAnimation","state","action","collectionAnimations","payload","push","removeAnimation","index","findIndex","a","splice","updateAnimationSettings","animationSettings","actions","selectAnimationState","animation","selectCollectionAnimations","selectAnimationsByCollection","createSelector","selectAnimationFrameSettings","ImageSlice","images","addImage","collectionImages","removeImage","updateImageSettings","imageSettings","selectImageState","selectCollectionImages","selectImagesByCollection","Images","selectImageSettings","store","configureStore","reducer","mosaic","mosaicReducer","map","mapReducer","detail","detailReducer","imageSlice","layerControl","atlas","mapStyles","stacItemDatasource","stacCollectionDatasource","collectionLineLayerName","collectionLineLayer","strokeOpacity","strokeColor","strokeWidth","strokeDashArray","filter","collectionOutlineLayer","itemLineLayerName","itemLineLayer","itemOutlineLayerName","itemOutlineLayer","fillColor","mosaicLayerPrefix","addEntityHeader","resourceType","startsWith","DATA_URL","headers","X_REQUEST_ENTITY","REQUEST_ENTITY","makeLayerId","id","makeDatasourceId","mapLayerId","makeLayerOutlineId","makeLayerHeatmapId","mapRef","mapReady","useExploreSelector","s","layers","layerOrder","currentEditingLayerId","stacItemForMosaic","showSelectedItemAsLayer","selectedItem","isItemLayerValid","Boolean","useEffect","current","idx","arr","length","forEach","higherLayerId","lowerLayerId","getLayerById","layersToMove","layerId","layer","getRelatedLayers","relatedLayerId","move","slice","reverse","renderOption","mapLayer","type","LayerType","mosaicLayer","collection","query","isItemForCurrentLayer","searchId","tileLayerOpts","tileUrl","makeRasterTileJsonUrl","visible","opacity","setOptions","add","setupRasterTileLayer","polygonLayer","isValid","vectorOptions","Error","polygonLayerOpts","sourceLayer","fillOpacity","polygonOutlineLayerOpts","minZoom","outline","dsId","datasource","getTileJsonAsset","sources","setupPolygonLayers","getLayers","l","getId","substring","endsWith","remove","heatmap","getById","selectCurrentMosaic","showCollectionOutline","zoom","getSources","includes","bbox","extent","spatial","clear","multiPoly","spatialExtentToMultipolygon","isCollectionBoundsVisible","MAX_ZOOM_FOR_COLLECTION_OUTLINE","boundaryShape","boundaryPoly","geometry","geom","zoomToItem","setCamera","bounds","duration","controls","getControls","position","dispatch","useExploreDispatch","useWindowSize","useState","areTilesLoading","setTilesLoading","bottomLayer","setTimeout","resize","onMapMove","e","camera","getCamera","onStyleDataLoaded","dataType","layerMgr","hasOutlineLayer","firstLayerId","onDataEvent","isSourceLoaded","source","tile","areTilesLoaded","undefined","center","showSidebar","mosaicLayerTileJson","useTileJson","data","layerMinZoom","minzoom","DEFAULT_MIN_ZOOM","setLayerMinZoom","console","error","MapMessage","children","className","mapMessageStyle","top","left","transform","zIndex","borderColor","semanticColors","primaryButtonBorder","bodyBackground","boxShadow","effects","elevation16","ZoomMessage","layerVisibility","block","textAlign","Link","ExtentMessage","Stack","fontStyle","paddingTop","PanelControl","React","ref","label","bottom","right","useBoolean","isCalloutVisible","toggleIsCalloutVisible","toggle","buttonId","useId","r","buttonStyle","controlStyle","useImperativeHandle","togglePanel","panelDir","DirectionalHint","IconButton","iconStyles","Callout","calloutStyle","directionalHint","target","isBeakVisible","setInitialFocus","background","borderCollapse","roundedCorner2","calloutMain","icon","bodyText","lineHeight","fontSize","selectors","svg","fill","AddressPicker","BasePickerListBelow","azMapsDomain","useTheme","handleItemSelected","viewport","btmRightPoint","topLeftPoint","resolveSuggestions","isEmpty","geocodeServiceUrlTemplate","params","authentication","signRequest","axios","suggests","results","formatAddress","address","freeformAddress","countryCodeISO3","renderItem","item","renderSuggestion","result","outerStyle","text","poi","neutralSecondary","FontSizes","panelRef","useRef","handlers","usePlaceSuggestions","fontWeight","FontWeights","Separator","inputProps","placeholder","resolveDelay","pickerSuggestionsProps","suggestionsHeaderText","noResultsFoundText","searchingText","onResolveSuggestions","onRenderSuggestionsItem","onRenderItem","onItemSelected","isCollectionOutlineDisabled","StackItem","Checkbox","disabled","checked","onChange","_","setShowCollectionOutline","DEFAULT_MAP_STYLE","currentMapStyle","setCurrentMapStyle","showLabels","setShowLabels","vis","getStyle","layout","setLayoutProperty","events","rootColormapUrl","rootClassmapUrl","rootIntervalUrl","getLegendMappingByName","queryParam","queryKey","legendType","classmapName","config","qsConfig","qs","trim_start","trimStart","trim_end","trimEnd","skipNull","rootUrl","pcApiClient","legendConfig","img","useColorRamp","colormap_name","scale","makeScale","rescale","labels","colormapName","loading","setLoading","handleStateChange","ImageLoadState","Shimmer","shimmerElements","ShimmerElementType","Image","onLoadingStateChange","customScale","items","makeCustomScale","makeNumericScale","i","key","scaleStyles","Array","isArray","split","parseFloat","low","high","mid","borderWidth","neutralQuaternary","borderStyle","ColorSwatch","join","useQuery","refetchOnWindowFocus","refetchOnMount","enabled","useClassmap","isLoading","classes","definition","colormap","JSON","parse","assetName","assets","asset","item_assets","fv","classValues","f","value","values","description","summary","legendItems","Object","keys","matchingValue","find","Number","getClassNameByValue","elKey","mappedItemStackTokens","shrink","mappedItemTextStyles","mappedItemLegendStyles","mappedItemLegendStackTokens","overflowY","overflowX","OpacityCmdButton","showOpacity","setShowOpacity","cmdButtonStyles","activeCmdButtonStyles","gapSpace","Slider","min","max","step","setLayerOpacity","showValue","sliderStyles","titleLabel","activeSection","themePrimary","inactiveSection","themeLighter","isPinned","previewMode","isEditing","handlePin","pinCurrentMosaic","handleEdit","setCurrentEditingLayerId","handleMoveUp","moveLayerUp","handleMoveDown","moveLayerDown","canMoveUp","canMoveDown","pinOrEditItem","useMemo","menuProps","subComponentStyles","menuItem","linkContent","role","menuIconProps","isExpanded","onExpandedChange","isExpandDisabled","expand","view","btnOpacity","btnVisible","setLayerVisible","true","false","rootHasMenu","neutralSecondaryAlt","menuIcon","mergeStyleSets","intervalName","intervals","labelScaleFactor","scaleFactor","makeSwatches","rgba","formattedMin","toLocaleString","formattedMax","info","btnPin","removeLayerById","bumperButtonStyles","rootDisabled","iconDisabled","buttonBackgroundDisabled","setIsExpanded","renderConfig","options","legend","isZoomVisible","visibleStyles","nonVisibleStyles","zoomMsg","getLegendType","layerSubtitle","isCustomQuery","subtitle","renderDesc","nowrap","subHeader","legendHeaderStyles","grow","header","legendBodyStyles","legendSeparatorStyles","LegendTypes","hasFileValues","hasClassificationClasses","hasClassmapValues","paddingLeft","paddingRight","headerStyles","nonVisibleHeaderStyles","disabledBodyText","subHeaderStyles","nonVisibleSubHeaderStyles","LegendControl","useLocalStorage","setIsOpen","legends","openStyle","legendPanel","panelStyles","legendTitle","legendButton","legendButtonStyles","getByProperty","property","cqlFilter","args","exp","CQL_PROP_IDX","getAllWithout","properties","replaceValueWithVar","varName","replaceChar","replace","this","with","len","padEnd","newExp","cloneDeep","CQL_VALS_IDX","hljs","python","createCqlPythonSnippet","cql","templateValue","aoiExp","dtExp","aoiVal","dtVal","aoi","datetime","body","fullBody","stripCommonFilterElements","stringify","op","datetimeAssignment","template","STAC_URL","language","snippetType","labelId","descriptionId","useCopyToClipboard","clipboardState","copyToClipboard","isRecentCopy","setIsRecentCopy","useCqlFormat","snippet","itemLink","links","link","rel","dataAssetEntries","entries","roles","hasDataAssets","firstDataAsset","otherDataAssets","formattedOtherAssets","assetTemplate","href","createItemPythonSnippet","NewTabLink","isCopySuccess","copyIcon","copyIconColor","green","handleCopy","code","ariaLabelledBy","ariaDescribedBy","callout","DefaultButton","As","PrimaryButton","HUB_URL","dangerouslySetInnerHTML","__html","sidebarBottomButtonStyles","borderTop","MobileViewMapButton","mapViewStyles","toggleShowSidebar","mapIconProps","MobileViewSidebarButton","sidebarPanel","panelText","backToSidebarStyles","sidebarIconProps","ItemTime","date","dateRange","start_datetime","end_datetime","formatDatetimeHuman","truncateMiddle","input","chars","toString","halfLength","Math","floor","front","back","PreviewActionBar","previewModeState","currentIndex","previousZoom","previousCenter","hasNext","isNull","hasPrev","smallIconStyles","setPrevItemPreview","setNextItemPreview","neutralLighterAlt","PreviewMessageCloseButton","handleClose","closeMessage","menuItems","closeButtonStyles","menuIconHovered","buttonBackgroundHovered","splitButtonMenuButton","splitButtonMenuIcon","splitButtonDivider","PreviewMessage","containerStyles","headerTitleStyles","TooltipHost","content","Icon","tooltipIconStyles","restoreExtent","restorePreviousCenterAndZoom","resetDetail","separatorStyles","minWidth","MOBILE_WIDTH","cursor","visibility","mapContainerId","setMapReady","mapHandlers","useMapEvents","showFeedbackLink","showLogo","renderWorldCopies","authOptions","authType","subscriptionKey","process","transformRequest","elName","els","document","querySelectorAll","useItemBoundsLayer","useCollectionBoundsLayer","useMosaicLayer","useZoomEvents","useMapControls","useUrlState","drawMgrRef","isDrawBboxMode","drawnShape","mgr","drawing","shapeDraggingEnabled","mode","polygonOutlineLayer","getOptions","getSource","getShapes","handleShapeAdded","shape","toJson","getBounds","x1","y1","x2","y2","setDrawnShape","setBboxDrawMode","useMapDrawTools","currentMosaic","allMosaics","searchIdLoaded","visibleInZoom","currentLayerNotVisible","zoomToLayer","setZoom","nonVisibleLayers","others","showZoomMsg","useMapZoomToLayer","bboxToPolygon","collectionGeoms","box","showExtentMsg","some","intersects","zoomToExtent","fc","overallBbox","useMapZoomToExtent","extentMsg","loadingIndicator","ProgressIndicator","barHeight","progressIndicatorStyles","visibilityClass","mapContainerStyle","PlaceSearch","mapElementStyle","itemProgress","bgColor","toggleSidebar","direction","SIDEBAR_WIDTH","transition","borderRight","borderBottom","borderLeft","borderTopColor","borderBottomColor","borderRightColor","rootFocused","neutralTertiary","iconHovered","ImageResult","imageResponse","onRemove","displayedImage","setDisplayedImage","handleViewerClose","handleViewClick","useConst","onItemClick","shouldFocusOnMount","rowStyles","iconButtonProps","ImageResults","imageShimmer","shimmerStyles","shimmerColors","Label","wrap","resultStyles","resultTokens","shimmer","shimmerWave","ImageExportError","response","msg","errorText","status","MessageBar","errorBarStyles","messageBarType","MessageBarType","ExporterHeader","subTitle","buttonStyles","AnimationIntro","AnimationSettings","showProgressBar","showBranding","onSettingsChange","showMenu","hideMenu","setFalse","button","ContextualMenu","hidden","canCheck","preventDefault","AnimationStartField","validations","showCalendar","hideCalendar","temporal","tooltip","TemporalExtent","dateValue","dayjs","toDate","TextField","newValue","currentTarget","errorMessage","firstInputStyle","onRenderLabel","calendarButtonStyle","Calendar","showMonthPickerAsOverlay","showGoToToday","onSelectDate","time","format","getCollectionStart","interval","collectionStart","reduce","acc","curr","isBefore","getCollectionEnd","collectionEnd","isAfter","panelTokens","units","inputStyles","unitStyles","errorTextStyles","mosaicInfo","useCollectionMosaicInfo","isMobileView","useMedia","drawnBbox","collectionFragment","collectionFilter","makeFilterBody","mosaicConfig","round","render_params","frameSettings","hint","diff","start","utc","startOf","toISOString","unit","frames","frameCount","getDefaultSettings","animationHint","requestBody","useAnimationExport","animationResp","fetchAnimation","refetch","removeAnimationResponse","handleChange","fieldName","parseInt","handleSettingsChange","validation","animationConfig","startDate","validate","exportEnabled","drawExportEnabled","drawButtonText","drawButton","setShowSidebar","panel","setSidebarPanel","SidebarPanels","defaultValue","Dropdown","defaultSelectedKey","option","stale","size","previewAssetUrl","useItemPreviewUrl","previewUrl","collections","defaultPreviewImage","white","black","iconSize","iconClass","mergeStyles","FontIcon","cloud","cloudContainerStyles","isNumber","toFixed","headerButtonStyle","float","checkedHeaderButtonStyle","iconChecked","rootChecked","accent","rootCheckedHovered","themeSecondary","tooltipId","calloutProps","showItemAsLayer","handleClick","setShowItemAsDetailLayer","collectionName","variant","overflowWrap","selfLink","parentLink","val","stacFormatter","assetItems","mediaTypeOverride","roundedCorner6","PivotItem","headerText","clearDetailView","ActionButton","themeDarkAlt","elevation4","itemDetailStylesInner","previewStyles","Pivot","itemDetailStylesOuter","ErrorBoundary","FallbackComponent","ErrorFallback","onError","handleErrorBoundaryError","onItemPreview","isSelected","wrapperStyle","ITEM_PREVIEW_BUTTON_CLASSNAME","borderRightWidth","borderRightStyle","showBounds","setBoundaryShape","removeBounds","clearBoundaryShape","handleSelectItem","setItemDetail","handleItemPreviewClick","activeContainerStyle","selectedContainerStyles","onMouseEnter","onMouseLeave","linkStyle","detailsContainerStyle","idStyles","attributeStyle","hoverStyle","themeLighterAlt","elevation8","textDecoration","activeStyle","rootContainerStyle","overflow","PinLayer","operators","between","like","isnull","in","anyinteracts","opEnglish","expressionsLabels","expression","CqlExpressionParser","propertyLabel","opText","operator","getDateLabel","implicitDateExpression","labelText","rangeIsOnSameDay","targetElementId","selectCurrentCql","collectionSection","location","host","querySection","marked","DOMPurify","renderSection","SearchResultHeaderMenu","isQueryInfoVisible","sortItem","clickHandler","dir","updatedMosaic","sortby","setMosaicQuery","subMenuProps","useSortMenuItem","isValidExport","isTemporalValid","end","isSame","every","isRenderTypeValid","isValidCollection","invalidExportMsg","itemType","ContextualMenuItemType","returned","features","plural","preamble","loadingStyle","withResults","withoutResults","resultsText","Spinner","SpinnerSize","request","isError","isFetching","isPreviousData","scrollPos","setScrollPos","listRef","lastColRef","isCollectionChanged","scrollToIndex","handleScroll","scrollTop","handleItemPreview","setSelectedItem","setItemQuickPreview","errorMessageStyles","align","mobileViewMapStyle","resultsListStyle","onScroll","FocusZone","FocusZoneDirection","List","componentRef","onRenderCell","isUndefined","inLoadingState","paddingBottom","getCollectionQueryables","$RefParser","schema","initialValidationState","startError","endError","validationReducer","dateRangeReducer","parseDatetime","Date","now","DateFieldContext","validMinDate","validMaxDate","workingDates","setValidation","validationState","DateFieldProvider","Provider","CalendarNavControl","navigatedDate","getFullYear","year","setYear","getMonth","month","setMonth","useContext","handleNavMonth","curDate","newDate","subtract","newMonth","newYear","stackStyles","dropdownStyles","getMonthsOptions","monthIndex","makeValidator","selectedKey","getYearOptions","navStyles","validator","startYear","endYear","years","Time","rangeType","errorMsg","setErrorMessage","defaultTime","containerTokens","textStyles","MaskedTextField","maskFormat","maskChar","mask","validateTime","hours","minutes","seconds","hour","minute","second","invalidDate","setInvalidDate","getErrorMessage","day","formatDateShort","setDateValidation","err","setSelectedDatetime","handleDateChange","newDatetime","adjustTime","handleTimeChange","toAbsoluteDate","setNavigatedDate","calDayNav","navigation","validTimeOperator","controlStyles","labelStyles","calendarStyles","highlightSelectedMonth","isMonthPickerVisible","minDate","maxDate","calendarDayProps","calendarMonthProps","errorMsgStyles","textTransform","calendarDayStyles","dayCell","dayButton","daySelected","datesAbove","datesBelow","datesLeft","datesRight","dayIsToday","weekDayLabelCell","disabledStyle","headerIconButton","table","monthStyles","navigationButton","navigationIcons","leftNavigation","rightNavigation","animationDirection","AnimationDirection","getStartRangeValue","d","isRange","getEndRangeValue","dateExpression","initialDateRange","initialExpression","setInitialExpression","opItemFromExpression","operatorSelection","setOperatorSelection","menu","OperatorSelector","CommandButton","opDropdownStyles","resetOperatorSelection","DateField","toDateRange","useReducer","workingDateRange","workingDateRangeDispatch","controlValidState","validationDispatch","minDay","getDayStart","maxDay","getDayEnd","useOperatorSelector","initialDates","initialOperator","workingOperator","validDates","startDateChanged","endDateChanged","isValidToApply","handleSave","formatDatetime","startOfStartingDay","endOfStartingDay","timestamp","toCqlExpression","setCustomCqlExpressions","opLabel","displayText","v","getDateDisplayText","providerState","isSingleDay","isSingleDayRange","isDisabled","disabledMsg","DropdownButton","onRenderText","displayValue","capitalize","DropdownLabel","commandBarStyles","calendarTokens","VerticalDivider","dividerStyles","spacing","s1","wrapper","divider","$schema","$id","pattern","OMITTED_PREFIXES","OMITTED_TYPES","AddFilter","queryables","existingProperties","expressions","getCurrentProperties","filteredQueryables","filteredSchema","assign","create","getPrototypeOf","isOmittedPrefix","prefix","isOmittedType","getFilteredQueryables","queryable","sort","fields","field","exists","isAcquired","getQueryableTitle","makeDropdownItems","multiSelect","selectedKeys","onRenderTitle","renderPlaceholder","displayTextStyles","displayIconStyles","selected","makeDefaultCqlExpression","removeCustomCqlExpression","span","dropdownItemSelected","caretDownWrapper","dropdown","outlineColor","isFieldDisabled","retry","apiQueryable","defaultQueryable","parsedCql","CqlParser","dateControl","getExpressions","omit","getControl","controlStackTokens","customStackTokens","customStackStyles","textStyle","alignItems","justifyContent","CatalogSelectorGroup","groupId","category","onButtonClick","onCloseClick","onBackClick","useDataConfig","groupConfig","collectionConfig","stacCollections","useCollections","group","groupCollections","c","isGroup","isCategory","isValidExplorer","contentStyles","backIcon","titlePadded","groupBodyStyles","descStyles","short_description","asButton","CatalogSelector","filterText","setFilterText","selectedGroupId","setSelectedGroupId","isModalOpen","showModal","setTrue","hideModal","useUrlStateV2","titleId","handleSelection","GROUP_PREFIX","selectedCollection","setCollection","toc","tocStyle","tocStickyStyle","setHashOnClick","preFilterCollectionFn","includeStorageDatasets","groupList","collectionList","onFilterChange","selectorBodyStyles","selectorListStyles","itemsAsButton","buttonText","renderText","Modal","titleAriaId","containerClassName","container","flexFlow","fonts","large","flex","flexContainer","neutralTertiaryAlt","rootPressed","rootExpanded","cyId","getStateValFn","handleSelectionChange","renderTitle","onRenderPlaceholder","isSuccess","mosaics","mosaicOptions","parser","isEqual","renderOptions","setRenderOption","renderers","matcher","useCqlPropertyMatcher","renderer","conditions","condition","getOptionByName","enabledSelectedKey","newOption","contents","isLoadingInitialState","resetMosaicState","linkRef","setIsCustomQuery","defaultCustomQuery","TitleHeader","commandBar","sidebarTitleStyles","loadDataFromQuery","CollectionItemFilter","sidebarVisibility","showItemDetail","showItemDetailsPanel","isDetailView","searchPanelDisplay","detailViewDisplay","stacFilter","useStacFilter","searchPanelStyles","itemDetailPanelStyles","ImageIntro","ImageSettings","imageSizes","dimensionsStyles","cols","rows","imageSize","useImageExport","ImageResp","fetchImage","removeImageResponse","imageConfig","customImageSize","dims","Sidebar","isSidebarVisible","isItemLayerVisible","resetMosaic","sidebarStyles","registeredPanels","sidebarStackStyles","heights","mainStyle","Layout","onGrid","allowAnnouncement","borderLeftColor"],"sourceRoot":""}